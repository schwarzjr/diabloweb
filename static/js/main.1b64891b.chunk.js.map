{"version":3,"sources":["fs.js","api/game.worker.js","mpqcmp/mpqcmp.worker.js","mpqcmp/MpqCmp.wasm","mpqcmp/ListFile.txt","../node_modules/peerjs/dist sync","serviceWorker.js","api/explode.js","api/codec.js","api/savefile.js","api/sound.js","api/load_spawn.js","api/packet.js","api/webrtc.js","api/loader.js","mpqcmp/compress.js","mpqcmp/index.js","App.js","index.js"],"names":["downloadFile","_callee","store","name","file","blob","url","lnk","_Users_jirischwarz_GitHub_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","console","error","concat","stop","downloadSaves","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","undefined","keys","t0","Symbol","iterator","done","value","match","t1","return","finish","readFile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee3","files","data","_context3","Uint8Array","set","abrupt","create_fs","_x7","_create_fs","apply","this","arguments","_callee5","load","_i","_Object$entries","_ref3","_ref2","_context5","IdbKvStore","Map","Object","json","entries","call","length","_Users_jirischwarz_GitHub_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","window","DownloadFile","DownloadSaves","update","delete","remove","clear","download","upload","fileUrl","_fileUrl","_Users_jirischwarz_GitHub_diabloweb_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","mark","_callee4","_context4","_x8","t2","module","exports","Worker","__webpack_require__","p","webpackEmptyContext","req","e","Error","code","id","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","CMP_BINARY","CMP_ASCII","CMP_NO_ERROR","CMP_INVALID_DICTSIZE","CMP_INVALID_MODE","CMP_BAD_DATA","CMP_ABORT","PKDCL_OK","PKDCL_STREAM_END","DistBits","DistCode","ExLenBits","LenBase","Uint16Array","LenBits","LenCode","ChBitsAsc","ChCodeAsc","GenDecodeTabs","positions","start_indexes","length_bits","elements","i","index","WasteBits","pWork","nBits","extra_bits","bit_buff","in_pos","in_bytes","read_buf","in_buff","DecodeLit","length_code","LengthCodes","extra_length_bits","extra_length","ctype","uncompressed_byte","offs2C34","offs2D34","offs2E34","offs2EB4","DecodeDist","rep_length","distance","dist_pos_code","DistPosCodes","dsize_bits","dsize_mask","explode","write_buf","buffer","ArrayBuffer","out_buff","pChCodeAsc","count","bits_asc","acc","add","GenAscTabs","next_literal","outputPos","minus_dist","target","source","subarray","copyWithin","Expand","W","Uint32Array","SHA1CircularShift","shift","SHA1","classCallCheck","digest","digest8","u8","u32","byteOffset","input","A","B","C","D","E","temp","Random","seed","codec_decode","password","size","last_size","sha","rand","key","k32","pw","charCodeAt","input8","codec_init_key","size32","data32","buf32","buf","j","pkzip_decompress","out_size","output","out_pos","dst","Math","min","src","hashtable","b","decrypt","decrypt8","encrypt","orig","hash","seed1","seed2","ch","path_name","pos","max","lastIndexOf","substring","Flags","MpqReader","byteLength","readHeader","createClass","sizeId","hashOffset","blockOffset","hashCount","blockCount","hashTable","readTable","blockTable","blockSize","offset","slice","keyA","keyB","fileIndex","block","info","filePos","cmpSize","fileSize","flags","raw","readRaw","numBlocks","floor","tableSize","blocks","oPos","uSize","tmp","init_sound","AudioContext","webkitAudioContext","StereoPannerNode","create_sound","duplicate_sound","play_sound","set_volume","stop_sound","delete_sound","context","sounds","create_sound_raw","channels","rate","createBuffer","getChannelData","gain","createGain","panner","pan","decodeAudioData","srcId","volume","loop","pow","relVolume","createBufferSource","node","connect","destination","start","stop_all","sound","slicedToArray","err","SpawnSizes","load_spawn","_x","_x2","_load_spawn","api","fs","spawn","regenerator_default","includes","axios","request","process","responseType","onDownloadProgress","onProgress","text","loaded","total","headers","Cache-Control","buffer_reader","read8","String","fromCharCode","toConsumableArray","read32","buffer_writer","write8","write32","rest","RejectionReason","JOIN_SUCCESS","JOIN_ALREADY_IN_GAME","JOIN_GAME_NOT_FOUND","JOIN_INCORRECT_PASSWORD","JOIN_VERSION_MISMATCH","JOIN_GAME_FULL","CREATE_GAME_EXISTS","read_packet","types","cls","values","find","packet","read","packet_size","write_packet","write","make_batch","read16","packets","push","reduce","sum","_ref","writer","write16","server_packet","version","_ref4","game_list","games","read_str","_ref5","_ref6","_ref7","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref9","write_str","join_accept","cookie","difficulty","_ref10","join_reject","reason","_ref11","_ref12","disconnect","_ref13","message","payload","_ref14","_ref15","turn","_ref16","batch","client_packet","_ref17","create_game","_ref18","_ref19","join_game","_ref20","_ref21","leave_game","drop_player","_ref22","_ref23","_ref24","_ref25","PeerID","Options","host","port","secure","webrtc_server","onMessage","onClose","_this","peer","Peer","on","conn","onConnect","players","myplr","random","onError","off","onOpen","setTimeout","_this2","_read_packet","pkt","send","handle","drop","mask","destroy","close","webrtc_client","_this3","pending","needUnreg","unreg","clearTimeout","timeout","_read_packet2","webrtc_open","server","client","_read_packet3","onRender","ctx","bitmap","images","clip","belt","transferFromImageBitmap","x","y","w","h","image","createImageData","putImageData","save","font","x0","y0","x1","y1","beginPath","rect","str","color","r","g","fillStyle","fillText","restore","updateBelt","audio","mpq","offscreen","canvas","getContext","alpha","worker","packetQueue","webrtc","addEventListener","action","func","_len","params","Array","_key","postMessage","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref8","setCursorPos","openKeyboard","stack","onExit","setCurrentSave","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transfer","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","setInterval","load_game","do_load_game","MpqSize","ListSize","progress","loadFile","binary","_args","runWorker","objectSpread","updateProgress","loader","mpqsize","fHeader","fBinary","fList","header","header16","hashTablePos","blockTablePos","hashTableSize","blockTableSize","fHashTable","fBlockTable","list","listMap","hashStr","_name","NUM_TASKS","tasks","cSize","task","numFiles","_loop","_i2","_tasks","_loop2","_i3","_tasks2","outputSize","blockPos","_i4","_tasks3","_task","_task$result","_i5","weight","ready","MpqBinary","ListFile","t3","t4","t5","t6","trim","t7","split","map","filter","h1","h2","toString","padStart","t8","fLoad","all","t","forEach","run","res","fill","CompressMpq","parseFile","onDone","setState","props","compress","started","_x3","_x4","_compress","_this$state","react_default","className","href","onClick","style","width","round","htmlFor","accept","display","onChange","React","Component","reportLink","retail","searchParams","line","join","userAgent","ReactGA","initialize","pageview","TOUCH_MOVE","TOUCH_RMB","keyboardRule","styleSheets","sheet","cssRules","rule","CSSRule","MEDIA_RULE","conditionText","sub","selectorText","findKeyboardRule","Link","children","objectWithoutProperties","assign","rel","App","possibleConstructorReturn","getPrototypeOf","loading","dropping","has_spawn","cursorPos","touchControls","touchButtons","touchCtx","touchMods","touchBelt","maxKeyboard","onDrop","dataTransfer","items","kind","getAsFile","getDropFile","preventDefault","compressMpq","onDragEnter","setDropping","onDragOver","isDropFile","onDragLeave","showSaves","save_names","updateSaves","show_saves","onResize","exitPointerLock","onPointerLockChange","screen","innerHeight","height","pointerLocked","game","onMouseMove","_this$mousePos","mousePos","eventMods","onMouseDown","keyboard","element","classList","_this$mousePos2","requestPointerLock","mouseButton","onMouseUp","_this$mousePos3","onKeyDown","keyCode","showKeyboard","clearKeySel","onMenu","onKeyUp","onKeyboard","onKeyboardInner","onKeyboardBlur","parseSave","touchButton","touchCanvas","onTouchStart","blur","updateTouchButton","touches","_this$mousePos4","onTouchMove","_this$mousePos5","onTouchEnd","prevTc","_this$mousePos6","setTouchMod","fullscreenElement","requestFullscreen","setCanvas","setElement","setKeyboard","setTouch0","setTouch_","bind","assertThisInitialized","setTouch1","setTouch2","setTouch3","setTouchBelt_","setTouch4","setTouch5","inc","asyncToGenerator","errorObject","saveName","mapStackTrace","left","toFixed","top","focus","transform","keyboardNum","_this4","getBoundingClientRect","right","bottom","reload","_this5","saves","hero","getPassword","nameEnd","indexOf","level","getPlayerName","_this6","confirm","idx","slot","drawImage","used","Set","has","drawBelt","_this7","removeEventListener","event","category","passive","capture","alert","pointerLockElement","mozPointerLockElement","movementX","movementY","clientX","clientY","button","shiftKey","ctrlKey","altKey","len","setSelectionRange","valid","maxValue","parseInt","use","toggle","now","performance","beltTime","release","_this8","touchOther","btn","identifier","stick","panPos","v","original","_ret","dx","dy","step","offsetHeight","abs","_this9","plrClass","index_es","icon","faDownload","downloadSave","faTimes","removeSave","mpqcmp_CompressMpq","ref","App_Link","_this$state2","classNames","touch","active","onBlur","spellCheck","renderUi","ReactDOM","render","src_App_0","getElementById","origin","fetch","response","contentType","status","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b64891b.chunk.js","sourcesContent":["import IdbKvStore from  'idb-kv-store';\n\n/*const importStorage = () => new Promise((resolve, reject) => {\n  let done = false;\n  const frame = document.createElement('iframe');\n  window.addEventListener('message', ({data}) => {\n    if (data.method === 'storage' && !done) {\n      done = true;\n      resolve(data.files);\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\n    }\n  });\n  frame.addEventListener('load', () => {\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\n  });\n  frame.addEventListener('error', () => {\n    if (!done) {\n      done = true;\n      resolve(null);\n    }\n  });\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\n  frame.style.display = \"none\";\n  document.body.appendChild(frame);\n  setTimeout(() => {\n    if (!done) {\n      done = true;\n      resolve(null);\n    }\n  }, 10000);\n});*/\n\nasync function downloadFile(store, name) {\n  const file = await store.get(name.toLowerCase());\n  if (file) {\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\n    const url = URL.createObjectURL(blob);\n    const lnk = document.createElement('a');\n    lnk.setAttribute('href', url);\n    lnk.setAttribute('download', name);\n    document.body.appendChild(lnk);\n    lnk.click();\n    document.body.removeChild(lnk);\n    URL.revokeObjectURL(url);\n  } else {\n    console.error(`File ${name} does not exist`);\n  }\n}\n\nasync function downloadSaves(store) {\n  for (let name of await store.keys()) {\n    if (name.match(/\\.sv$/i)) {\n      downloadFile(store, name);\n    }\n  }\n}\n\nconst readFile = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = () => reject(reader.error);\n  reader.onabort = () => reject();\n  reader.readAsArrayBuffer(file);\n});\nasync function uploadFile(store, files, file) {\n  const data = new Uint8Array(await readFile(file));\n  files.set(file.name.toLowerCase(), data);\n  return store.set(file.name.toLowerCase(), data);\n}\n\nexport default async function create_fs(load) {\n  try {\n    const store = new IdbKvStore('diablo_fs');\n    const files = new Map();\n    for (let [name, data] of Object.entries(await store.json())) {\n      files.set(name, data);\n    }\n    /*if (load) {\n      const files = await importStorage();\n      if (files) {\n        for (let [name, data] of files) {\n          files.set(name, data);\n          store.set(name, data);\n        }\n      }\n    }*/\n    window.DownloadFile = name => downloadFile(store, name);\n    window.DownloadSaves = () => downloadSaves(store);\n    return {\n      files,\n      update: (name, data) => store.set(name, data),\n      delete: name => store.remove(name),\n      clear: () => store.clear(),\n      download: name => downloadFile(store, name),\n      upload: file => uploadFile(store, files, file),\n      fileUrl: async name => {\n        const file = await store.get(name.toLowerCase());\n        if (file) {\n          const blob = new Blob([file], {type: 'binary/octet-stream'});\n          return URL.createObjectURL(blob);\n        }\n      },\n    };\n  } catch (e) {\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\n    return {\n      files: new Map(),\n      update: () => Promise.resolve(),\n      delete: () => Promise.resolve(),\n      clear: () => Promise.resolve(),\n      download: () => Promise.resolve(),\n      upload: () => Promise.resolve(),\n      fileUrl: () => Promise.resolve(),\n    };\n  }  \n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"5070fcf436bc2df6f79f.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"d7ce33103bb6175a9579.worker.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/MpqCmp.8aa3c6dc.wasm\";","module.exports = __webpack_public_path__ + \"static/media/ListFile.d60434ea.txt\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const CMP_BINARY = 0; // Binary compression\nexport const CMP_ASCII = 1; // Ascii compression\nexport const CMP_NO_ERROR = 0;\nexport const CMP_INVALID_DICTSIZE = 1;\nexport const CMP_INVALID_MODE = 2;\nexport const CMP_BAD_DATA = 3;\nexport const CMP_ABORT = 4;\nexport const CMP_IMPLODE_DICT_SIZE1 = 1024; // Dictionary size of 1024\nexport const CMP_IMPLODE_DICT_SIZE2 = 2048; // Dictionary size of 2048\nexport const CMP_IMPLODE_DICT_SIZE3 = 4096; // Dictionary size of 4096\n\nexport const PKDCL_OK = 0;\nexport const PKDCL_STREAM_END = 1; // All data from the input stream is read\nexport const PKDCL_NEED_DICT = 2; // Need more data (dictionary)\nexport const PKDCL_CONTINUE = 10; // Internal flag, not returned to user\nexport const PKDCL_GET_INPUT = 11; // Internal flag, not returned to user\n\nconst DistBits = new Uint8Array([\n  0x02, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,\n  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\n  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\n  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08\n]);\n\nconst DistCode = new Uint8Array([\n  0x03, 0x0D, 0x05, 0x19, 0x09, 0x11, 0x01, 0x3E, 0x1E, 0x2E, 0x0E, 0x36, 0x16, 0x26, 0x06, 0x3A,\n  0x1A, 0x2A, 0x0A, 0x32, 0x12, 0x22, 0x42, 0x02, 0x7C, 0x3C, 0x5C, 0x1C, 0x6C, 0x2C, 0x4C, 0x0C,\n  0x74, 0x34, 0x54, 0x14, 0x64, 0x24, 0x44, 0x04, 0x78, 0x38, 0x58, 0x18, 0x68, 0x28, 0x48, 0x08,\n  0xF0, 0x70, 0xB0, 0x30, 0xD0, 0x50, 0x90, 0x10, 0xE0, 0x60, 0xA0, 0x20, 0xC0, 0x40, 0x80, 0x00\n]);\n\nconst ExLenBits = new Uint8Array([\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08\n]);\n\nconst LenBase = new Uint16Array([\n  0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,\n  0x0008, 0x000A, 0x000E, 0x0016, 0x0026, 0x0046, 0x0086, 0x0106\n]);\n\nconst LenBits = new Uint8Array([\n  0x03, 0x02, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07\n]);\n\nconst LenCode = new Uint8Array([\n  0x05, 0x03, 0x01, 0x06, 0x0A, 0x02, 0x0C, 0x14, 0x04, 0x18, 0x08, 0x30, 0x10, 0x20, 0x40, 0x00\n]);\n\nconst ChBitsAsc = new Uint8Array([\n  0x0B, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x08, 0x07, 0x0C, 0x0C, 0x07, 0x0C, 0x0C,\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\n  0x04, 0x0A, 0x08, 0x0C, 0x0A, 0x0C, 0x0A, 0x08, 0x07, 0x07, 0x08, 0x09, 0x07, 0x06, 0x07, 0x08,\n  0x07, 0x06, 0x07, 0x07, 0x07, 0x07, 0x08, 0x07, 0x07, 0x08, 0x08, 0x0C, 0x0B, 0x07, 0x09, 0x0B,\n  0x0C, 0x06, 0x07, 0x06, 0x06, 0x05, 0x07, 0x08, 0x08, 0x06, 0x0B, 0x09, 0x06, 0x07, 0x06, 0x06,\n  0x07, 0x0B, 0x06, 0x06, 0x06, 0x07, 0x09, 0x08, 0x09, 0x09, 0x0B, 0x08, 0x0B, 0x09, 0x0C, 0x08,\n  0x0C, 0x05, 0x06, 0x06, 0x06, 0x05, 0x06, 0x06, 0x06, 0x05, 0x0B, 0x07, 0x05, 0x06, 0x05, 0x05,\n  0x06, 0x0A, 0x05, 0x05, 0x05, 0x05, 0x08, 0x07, 0x08, 0x08, 0x0A, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C,\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\n  0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D,\n  0x0D, 0x0D, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D\n]);\n\nconst ChCodeAsc = new Uint16Array([\n  0x0490, 0x0FE0, 0x07E0, 0x0BE0, 0x03E0, 0x0DE0, 0x05E0, 0x09E0,\n  0x01E0, 0x00B8, 0x0062, 0x0EE0, 0x06E0, 0x0022, 0x0AE0, 0x02E0,\n  0x0CE0, 0x04E0, 0x08E0, 0x00E0, 0x0F60, 0x0760, 0x0B60, 0x0360,\n  0x0D60, 0x0560, 0x1240, 0x0960, 0x0160, 0x0E60, 0x0660, 0x0A60,\n  0x000F, 0x0250, 0x0038, 0x0260, 0x0050, 0x0C60, 0x0390, 0x00D8,\n  0x0042, 0x0002, 0x0058, 0x01B0, 0x007C, 0x0029, 0x003C, 0x0098,\n  0x005C, 0x0009, 0x001C, 0x006C, 0x002C, 0x004C, 0x0018, 0x000C,\n  0x0074, 0x00E8, 0x0068, 0x0460, 0x0090, 0x0034, 0x00B0, 0x0710,\n  0x0860, 0x0031, 0x0054, 0x0011, 0x0021, 0x0017, 0x0014, 0x00A8,\n  0x0028, 0x0001, 0x0310, 0x0130, 0x003E, 0x0064, 0x001E, 0x002E,\n  0x0024, 0x0510, 0x000E, 0x0036, 0x0016, 0x0044, 0x0030, 0x00C8,\n  0x01D0, 0x00D0, 0x0110, 0x0048, 0x0610, 0x0150, 0x0060, 0x0088,\n  0x0FA0, 0x0007, 0x0026, 0x0006, 0x003A, 0x001B, 0x001A, 0x002A,\n  0x000A, 0x000B, 0x0210, 0x0004, 0x0013, 0x0032, 0x0003, 0x001D,\n  0x0012, 0x0190, 0x000D, 0x0015, 0x0005, 0x0019, 0x0008, 0x0078,\n  0x00F0, 0x0070, 0x0290, 0x0410, 0x0010, 0x07A0, 0x0BA0, 0x03A0,\n  0x0240, 0x1C40, 0x0C40, 0x1440, 0x0440, 0x1840, 0x0840, 0x1040,\n  0x0040, 0x1F80, 0x0F80, 0x1780, 0x0780, 0x1B80, 0x0B80, 0x1380,\n  0x0380, 0x1D80, 0x0D80, 0x1580, 0x0580, 0x1980, 0x0980, 0x1180,\n  0x0180, 0x1E80, 0x0E80, 0x1680, 0x0680, 0x1A80, 0x0A80, 0x1280,\n  0x0280, 0x1C80, 0x0C80, 0x1480, 0x0480, 0x1880, 0x0880, 0x1080,\n  0x0080, 0x1F00, 0x0F00, 0x1700, 0x0700, 0x1B00, 0x0B00, 0x1300,\n  0x0DA0, 0x05A0, 0x09A0, 0x01A0, 0x0EA0, 0x06A0, 0x0AA0, 0x02A0,\n  0x0CA0, 0x04A0, 0x08A0, 0x00A0, 0x0F20, 0x0720, 0x0B20, 0x0320,\n  0x0D20, 0x0520, 0x0920, 0x0120, 0x0E20, 0x0620, 0x0A20, 0x0220,\n  0x0C20, 0x0420, 0x0820, 0x0020, 0x0FC0, 0x07C0, 0x0BC0, 0x03C0,\n  0x0DC0, 0x05C0, 0x09C0, 0x01C0, 0x0EC0, 0x06C0, 0x0AC0, 0x02C0,\n  0x0CC0, 0x04C0, 0x08C0, 0x00C0, 0x0F40, 0x0740, 0x0B40, 0x0340,\n  0x0300, 0x0D40, 0x1D00, 0x0D00, 0x1500, 0x0540, 0x0500, 0x1900,\n  0x0900, 0x0940, 0x1100, 0x0100, 0x1E00, 0x0E00, 0x0140, 0x1600,\n  0x0600, 0x1A00, 0x0E40, 0x0640, 0x0A40, 0x0A00, 0x1200, 0x0200,\n  0x1C00, 0x0C00, 0x1400, 0x0400, 0x1800, 0x0800, 0x1000, 0x0000  \n]);\n\n/**\n * @param {Uint8Array} positions [out] Table of positions\n * @param {Uint8Array} start_indexes Table of start indexes\n * @param {Uint8Array} length_bits Table of lengths. Each length is stored as number of bits\n * @param {number} elements Number of elements in start_indexes and length_bits\n */\nfunction GenDecodeTabs(positions, start_indexes, length_bits, elements) {\n  for (let i = 0; i < elements; i++) {\n    const length = 1 << length_bits[i];   // Get the length in bytes\n    for (let index = start_indexes[i]; index < 0x100; index += length) {\n      positions[index] = i;\n    }\n  }\n}\n\nfunction GenAscTabs(pWork) {\n  let pChCodeAsc = 0xFF;\n\n  for (let count = 0x00FF; pChCodeAsc >= 0; pChCodeAsc--, count--) {\n    let bits_asc = pWork.ChBitsAsc[count];\n    let acc;\n\n    if (bits_asc <= 8) {\n      const add = (1 << bits_asc);\n      acc = ChCodeAsc[pChCodeAsc];\n\n      do {\n        pWork.offs2C34[acc] = count;\n        acc += add;\n      } while(acc < 0x100);\n    } else if ((acc = (ChCodeAsc[pChCodeAsc] & 0xFF)) !== 0) {\n      pWork.offs2C34[acc] = 0xFF;\n\n      if (ChCodeAsc[pChCodeAsc] & 0x3F) {\n        bits_asc -= 4;\n        pWork.ChBitsAsc[count] = bits_asc;\n\n        const add = (1 << bits_asc);\n        acc = ChCodeAsc[pChCodeAsc] >> 4;\n        do {\n          pWork.offs2D34[acc] = count;\n          acc += add;\n        } while(acc < 0x100);\n      } else {\n        bits_asc -= 6;\n        pWork.ChBitsAsc[count] = bits_asc;\n\n        const add = (1 << bits_asc);\n        acc = ChCodeAsc[pChCodeAsc] >> 6;\n        do {\n          pWork.offs2E34[acc] = count;\n          acc += add;\n        } while(acc < 0x80);\n      }\n    } else {\n      bits_asc -= 8;\n      pWork.ChBitsAsc[count] = bits_asc;\n\n      const add = (1 << bits_asc);\n      acc = ChCodeAsc[pChCodeAsc] >> 8;\n      do {\n        pWork.offs2EB4[acc] = count;\n        acc += add;\n      } while(acc < 0x100);\n    }\n  }\n}\n\n//-----------------------------------------------------------------------------\n// Removes given number of bits in the bit buffer. New bits are reloaded from\n// the input buffer, if needed.\n// Returns: PKDCL_OK:         Operation was successful\n//          PKDCL_STREAM_END: There are no more bits in the input buffer\nfunction WasteBits(pWork, nBits) {\n  // If number of bits required is less than number of (bits in the buffer) ?\n  if (nBits <= pWork.extra_bits) {\n    pWork.extra_bits -= nBits;\n    pWork.bit_buff >>>= nBits;\n    return PKDCL_OK;\n  }\n\n  // Load input buffer if necessary\n  pWork.bit_buff >>= pWork.extra_bits;\n  if (pWork.in_pos === pWork.in_bytes) {\n    if ((pWork.in_bytes = pWork.read_buf(pWork.in_buff)) === 0) {\n      return PKDCL_STREAM_END;\n    }\n    pWork.in_pos = 0;\n  }\n\n  // Update bit buffer\n  pWork.bit_buff |= (pWork.in_buff[pWork.in_pos++] << 8);\n  pWork.bit_buff >>>= (nBits - pWork.extra_bits);\n  pWork.extra_bits = (pWork.extra_bits - nBits) + 8;\n  return PKDCL_OK;\n}\n\n//-----------------------------------------------------------------------------\n// Decodes next literal from the input (compressed) data.\n// Returns : 0x000: One byte 0x00\n//           0x001: One byte 0x01\n//           ...\n//           0x0FF: One byte 0xFF\n//           0x100: Repetition, length of 0x02 bytes\n//           0x101: Repetition, length of 0x03 bytes\n//           ...\n//           0x304: Repetition, length of 0x206 bytes\n//           0x305: End of stream\n//           0x306: Error\nfunction DecodeLit(pWork) {\n  if(pWork.bit_buff & 1) {\n    // Remove one bit from the input data\n    if(WasteBits(pWork, 1)) {\n      return 0x306;\n    }\n\n    // The next 8 bits hold the index to the length code table\n    let length_code = pWork.LengthCodes[pWork.bit_buff & 0xFF];\n\n    // Remove the apropriate number of bits\n    if(WasteBits(pWork, pWork.LenBits[length_code])) {\n      return 0x306;\n    }\n\n    // Are there some extra bits for the obtained length code ?\n    const extra_length_bits = pWork.ExLenBits[length_code];\n    if(extra_length_bits !== 0) {\n      const extra_length = pWork.bit_buff & ((1 << extra_length_bits) - 1);\n      if(WasteBits(pWork, extra_length_bits)) {\n        if((length_code + extra_length) != 0x10E) {\n          return 0x306;\n        }\n      }\n      length_code = pWork.LenBase[length_code] + extra_length;\n    }\n\n    // In order to distinguish uncompressed byte from repetition length,\n    // we have to add 0x100 to the length.\n    return length_code + 0x100;\n  }\n\n  // Remove one bit from the input data\n  if(WasteBits(pWork, 1)) {\n    return 0x306;\n  }\n\n  // If the binary compression type, read 8 bits and return them as one byte.\n  if(pWork.ctype === CMP_BINARY) {\n    const uncompressed_byte = pWork.bit_buff & 0xFF;\n\n    if(WasteBits(pWork, 8)) {\n      return 0x306;\n    }\n    return uncompressed_byte;\n  }\n\n  // When ASCII compression ...\n  let value;\n  if (pWork.bit_buff & 0xFF) {\n    value = pWork.offs2C34[pWork.bit_buff & 0xFF];\n\n    if (value == 0xFF) {\n      if (pWork.bit_buff & 0x3F) {\n        if (WasteBits(pWork, 4)) {\n          return 0x306;\n        }\n\n        value = pWork.offs2D34[pWork.bit_buff & 0xFF];\n      } else {\n        if (WasteBits(pWork, 6)) {\n          return 0x306;\n        }\n\n        value = pWork.offs2E34[pWork.bit_buff & 0x7F];\n      }\n    }\n  } else {\n    if(WasteBits(pWork, 8)) {\n      return 0x306;\n    }\n\n    value = pWork.offs2EB4[pWork.bit_buff & 0xFF];\n  }\n\n  return WasteBits(pWork, pWork.ChBitsAsc[value]) ? 0x306 : value;\n}\n\n//-----------------------------------------------------------------------------\n// Decodes the distance of the repetition, backwards relative to the\n// current output buffer position\nfunction DecodeDist(pWork, rep_length) {\n  // Next 2-8 bits in the input buffer is the distance position code\n  const dist_pos_code = pWork.DistPosCodes[pWork.bit_buff & 0xFF];\n  const dist_pos_bits = pWork.DistBits[dist_pos_code];\n  if (WasteBits(pWork, dist_pos_bits)) {\n    return 0;\n  }\n\n  let distance;\n  if (rep_length === 2) {\n    // If the repetition is only 2 bytes length,\n    // then take 2 bits from the stream in order to get the distance\n    distance = (dist_pos_code << 2) | (pWork.bit_buff & 0x03);\n    if (WasteBits(pWork, 2)) {\n      return 0;\n    }\n  } else {\n    // If the repetition is more than 2 bytes length,\n    // then take \"dsize_bits\" bits in order to get the distance\n    distance = (dist_pos_code << pWork.dsize_bits) | (pWork.bit_buff & pWork.dsize_mask);\n    if (WasteBits(pWork, pWork.dsize_bits)) {\n      return 0;\n    }\n  }\n  return distance + 1;\n}\n\nfunction Expand(pWork) {\n  let outputPos = 0x1000;          // Initialize output buffer position\n\n  // Decode the next literal from the input data.\n  // The returned literal can either be an uncompressed byte (next_literal < 0x100)\n  // or an encoded length of the repeating byte sequence that\n  // is to be copied to the current buffer position\n  let result, next_literal;\n  while ((result = next_literal = DecodeLit(pWork)) < 0x305) {\n    // If the literal is greater than 0x100, it holds length\n    // of repeating byte sequence\n    // literal of 0x100 means repeating sequence of 0x2 bytes\n    // literal of 0x101 means repeating sequence of 0x3 bytes\n    // ...\n    // literal of 0x305 means repeating sequence of 0x207 bytes\n    if(next_literal >= 0x100) {\n      // Get the length of the repeating sequence.\n      // Note that the repeating block may overlap the current output position,\n      // for example if there was a sequence of equal bytes\n      let rep_length = next_literal - 0xFE;\n      // Get backward distance to the repetition\n      const minus_dist = DecodeDist(pWork, rep_length);\n      if (minus_dist === 0) {\n        result = 0x306;\n        break;\n      }\n\n      // Target and source pointer\n      let target = outputPos;\n      let source = target - minus_dist;\n\n      // Update buffer output position\n      outputPos += rep_length;\n\n      // Copy the repeating sequence\n      const out_buff = pWork.out_buff;\n      while (rep_length-- > 0) {\n        out_buff[target++] = out_buff[source++];\n      }\n    } else {\n      pWork.out_buff[outputPos++] = next_literal;\n    }\n\n    // Flush the output buffer, if number of extracted bytes has reached the end\n    if (outputPos >= 0x2000) {\n      // Copy decompressed data into user buffer\n      pWork.write_buf(pWork.out_buff.subarray(0x1000, 0x2000));\n\n      // Now copy the decompressed data to the first half of the buffer.\n      // This is needed because the decompression might reuse them as repetitions.\n      // Note that if the output buffer overflowed previously, the extra decompressed bytes\n      // are stored in \"out_buff_overflow\", and they will now be\n      // within decompressed part of the output buffer.\n      pWork.out_buff.copyWithin(0, 0x1000, outputPos);\n      outputPos -= 0x1000;\n    }\n  }\n\n  // Flush any remaining decompressed bytes\n  pWork.write_buf(pWork.out_buff.subarray(0x1000, outputPos));\n  return result;\n}\n\n//-----------------------------------------------------------------------------\n// Main exploding function.\nexport function explode(read_buf, write_buf) {\n  const buffer = new ArrayBuffer(0x3104);\n  const pWork = {\n    read_buf,\n    write_buf,\n    in_pos: 3,\n    extra_bits: 0,\n    in_buff: new Uint8Array(buffer, 0, 0x800),\n    DistPosCodes: new Uint8Array(buffer, 0x800, 0x100),\n    LengthCodes: new Uint8Array(buffer, 0x900, 0x100),\n    offs2C34: new Uint8Array(buffer, 0xA00, 0x100),\n    offs2D34: new Uint8Array(buffer, 0xB00, 0x100),\n    offs2E34: new Uint8Array(buffer, 0xC00, 0x80),\n    offs2EB4: new Uint8Array(buffer, 0xC80, 0x100),\n    ChBitsAsc: new Uint8Array(buffer, 0xD80, 0x100),\n    DistBits: new Uint8Array(buffer, 0xE80, 0x40),\n    LenBits: new Uint8Array(buffer, 0xEC0, 0x10),\n    ExLenBits: new Uint8Array(buffer, 0xED0, 0x10),\n    LenBase: new Uint16Array(buffer, 0xEE0, 0x10),\n    out_buff: new Uint8Array(buffer, 0xF00, 0x2204),\n  };\n  pWork.in_bytes = read_buf(pWork.in_buff);\n  if (pWork.in_bytes <= 4) {\n    return CMP_BAD_DATA;\n  }\n  pWork.ctype = pWork.in_buff[0];\n  pWork.dsize_bits = pWork.in_buff[1];\n  pWork.bit_buff = pWork.in_buff[2];\n\n  // Test for the valid dictionary size\n  if(4 > pWork.dsize_bits || pWork.dsize_bits > 6) {\n    return CMP_INVALID_DICTSIZE;\n  }\n\n  pWork.dsize_mask = 0xFFFF >> (0x10 - pWork.dsize_bits); // Shifted by 'sar' instruction\n\n  if(pWork.ctype != CMP_BINARY) {\n    if(pWork.ctype != CMP_ASCII) {\n      return CMP_INVALID_MODE;\n    }\n\n    pWork.ChBitsAsc.set(ChBitsAsc);\n    GenAscTabs(pWork);\n  }\n\n  pWork.LenBits.set(LenBits);\n  GenDecodeTabs(pWork.LengthCodes, LenCode, pWork.LenBits, pWork.LenBits.length);\n  pWork.ExLenBits.set(ExLenBits);\n  pWork.LenBase.set(LenBase);\n  pWork.DistBits.set(DistBits);\n  GenDecodeTabs(pWork.DistPosCodes, DistCode, pWork.DistBits, pWork.DistBits.length);\n  if(Expand(pWork) !== 0x306) {\n    return CMP_NO_ERROR;\n  }\n      \n  return CMP_ABORT;\n}\n\nexport default explode;\n","const W = new Uint32Array(80);\n\nconst SHA1CircularShift = (shift, value) => ((value << shift) | (value >> (32 - shift)));\n\nclass SHA1 {\n  digest = new Uint32Array(5);\n  count = 0;\n\n  input8(u8) {\n    const u32 = new Uint32Array(u8.buffer, u8.byteOffset, 16);\n    this.input(u32);\n  }\n  input(u32) {\n    this.count += u32.length * 32;\n    for (let i = 0; i < 16; ++i) {\n      W[i] = u32[i];\n    }\n    for (let i = 16; i < 80; ++i) {\n      W[i] = W[i - 16] ^ W[i - 14] ^ W[i - 8] ^ W[i - 3];\n    }\n    let A = this.digest[0];\n    let B = this.digest[1];\n    let C = this.digest[2];\n    let D = this.digest[3];\n    let E = this.digest[4];\n\n    for (let i = 0; i < 20; i++) {\n      const temp = SHA1CircularShift(5, A) + ((B & C) | ((~B) & D)) + E + W[i] + 0x5A827999;\n      E = D;\n      D = C;\n      C = SHA1CircularShift(30, B);\n      B = A;\n      A = temp | 0;\n    }\n\n    for (let i = 20; i < 40; i++) {\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1;\n      E = D;\n      D = C;\n      C = SHA1CircularShift(30, B);\n      B = A;\n      A = temp | 0;\n    }\n\n    for (let i = 40; i < 60; i++) {\n      const temp = SHA1CircularShift(5, A) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC;\n      E = D;\n      D = C;\n      C = SHA1CircularShift(30, B);\n      B = A;\n      A = temp | 0;\n    }\n\n    for (let i = 60; i < 80; i++) {\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6;\n      E = D;\n      D = C;\n      C = SHA1CircularShift(30, B);\n      B = A;\n      A = temp | 0;\n    }\n\n    this.digest[0] += A;\n    this.digest[1] += B;\n    this.digest[2] += C;\n    this.digest[3] += D;\n    this.digest[4] += E;\n  }\n\n  constructor() {\n\t  this.digest[0] = 0x67452301;\n\t  this.digest[1] = 0xEFCDAB89;\n\t  this.digest[2] = 0x98BADCFE;\n\t  this.digest[3] = 0x10325476;\n    this.digest[4] = 0xC3D2E1F0;\n    \n    this.digest8 = new Uint8Array(this.digest.buffer);\n  }\n}\n\nclass Random {\n  constructor(seed) {\n    this.seed = seed;\n  }\n  next() {\n    this.seed = (((this.seed * 3) << 16) + ((this.seed * 67) << 8) + (this.seed * 253) + 2531011) | 0;\n    return (this.seed >> 16) & 0x7FFF;\n  }\n}\n\nfunction codec_init_key(password) {\n  const rand = new Random(0x7058);\n  const key = new Uint8Array(136);\n  const k32 = new Uint32Array(key.buffer);\n  for (let i = 0; i < 136; ++i) {\n    key[i] = rand.next();\n  }\n  const pw = new Uint8Array(64);\n  for (let i = 0; i < 64; ++i) {\n    pw[i] = password.charCodeAt(i % password.length);\n  }\n\n  let sha = new SHA1();\n  sha.input8(pw);\n\n  for (let i = 0; i < 34; ++i) {\n    k32[i] ^= sha.digest[i % sha.digest.length];\n  }\n\n  sha = new SHA1();\n  sha.input(k32.subarray(18));\n  return sha;\n}\n\nexport default function codec_decode(data, password) {\n  if (data.length <= 8) {\n    return;\n  }\n  const size = data.length - 8;\n  if (size % 64) {\n    return;\n  }\n\n  if (data[size + 4]) {\n    return;\n  }\n\n  const last_size = data[size + 5];\n  const result_size = size + last_size - 64;\n  const result = new Uint8Array(result_size);\n\n  const sha = codec_init_key(password);\n  const size32 = size >> 2;\n  const data32 = new Uint32Array(data.buffer, data.byteOffset, size32 + 1);\n  const buf32 = new Uint32Array(16);\n  const buf = new Uint8Array(buf32.buffer);\n\n  for (let i = 0; i < size32; i += 16) {\n    for (let j = 0; j < 16; ++j) {\n      buf32[j] = data32[i + j] ^ sha.digest[j % sha.digest.length];\n    }\n    sha.input(buf32);\n    result.set(i === size32 - 16 ? buf.subarray(0, last_size) : buf, i * 4);\n  }\n  if (data32[size32] !== sha.digest[0]) {\n    return;\n  }\n  return result;\n}\n","import { explode } from './explode';\nimport codec_decode from './codec';\n\nfunction pkzip_decompress(data, out_size) {\n  if (data.length === out_size) {\n    return data;\n  }\n\n  const output = new Uint8Array(out_size);\n  let in_pos = 0;\n  let out_pos = 0;\n  function read_buf(dst) {\n    const count = Math.min(data.length - in_pos, dst.length);\n    dst.set(data.subarray(in_pos, count));\n    in_pos += count;\n    return count;\n  }\n  function write_buf(src) {\n    if (out_pos + src.length > out_size) {\n      throw Error('decompress buffer overflow');\n    }\n    output.set(src, out_pos);\n    out_pos += src.length;\n  }\n\n  if (explode(read_buf, write_buf) || out_pos !== out_size) {\n    return null;\n  }\n\n  return output;\n}\n\nconst hashtable = (function() {\n  const hashtable = new Uint32Array(1280);\n  let seed = 0x00100001;\n  for (let i = 0; i < 256; i++) {\n    for (let j = i; j < 1280; j += 256) {\n      seed = (seed * 125 + 3) % 0x2AAAAB;\n      const a = (seed & 0xFFFF) << 16;\n      seed = (seed * 125 + 3) % 0x2AAAAB;\n      const b = (seed & 0xFFFF);\n      hashtable[j] = a | b;\n    }\n  }\n  return hashtable;\n})();\nexport function decrypt(u32, key) {\n  let seed = 0xEEEEEEEE;\n  for (let i = 0; i < u32.length; ++i) {\n    seed += hashtable[0x400 + (key & 0xFF)];\n    u32[i] ^= seed + key;\n    seed = (u32[i] + seed * 33 + 3) | 0;\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\n  }\n}\nexport function decrypt8(u8, key) {\n  decrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\n}\nexport function encrypt(u32, key) {\n  let seed = 0xEEEEEEEE;\n  for (let i = 0; i < u32.length; ++i) {\n    seed += hashtable[0x400 + (key & 0xFF)];\n    const orig = u32[i];\n    u32[i] ^= seed + key;\n    seed = (orig + seed * 33 + 3) | 0;\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\n  }\n}\nexport function encrypt8(u8, key) {\n  encrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\n}\nexport function hash(name, type) {\n  let seed1 = 0x7FED7FED;\n  let seed2 = 0xEEEEEEEE;\n  for (let i = 0; i < name.length; ++i) {\n    let ch = name.charCodeAt(i);\n    if (ch >= 0x61 && ch <= 0x7A) {\n      ch -= 0x20;\n    }\n    if (ch === 0x2F) {\n      ch = 0x5C;\n    }\n    seed1 = hashtable[type * 256 + ch] ^ (seed1 + seed2);\n    seed2 = (ch + seed1 + seed2 * 33 + 3) | 0;\n  }\n  return seed1 >>> 0;\n}\n\nexport function path_name(name) {\n  const pos = Math.max(name.lastIndexOf('/'), name.lastIndexOf('\\\\'));\n  return name.substring(pos + 1);\n}\n\nconst Flags = {\n  CompressPkWare: 0x00000100,\n  CompressMulti: 0x00000200,\n  Compressed: 0x0000FF00,\n  Encrypted: 0x00010000,\n  FixSeed: 0x00020000,\n  PatchFile: 0x00100000,\n  SingleUnit: 0x01000000,\n  DummyFile: 0x02000000,\n  SectorCrc: 0x04000000,\n  Exists: 0x80000000,\n};\n\nexport class MpqReader {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.u8 = new Uint8Array(buffer);\n    this.u32 = new Uint32Array(buffer, 0, buffer.byteLength >> 2);\n\n    this.readHeader();\n  }\n\n  readHeader() {\n    const {u8, u32} = this;\n    if (u32[0] !== 0x1A51504D) {\n      throw Error('invalid MPQ header');\n    }\n    const sizeId = u8[14] + (u8[15] << 8);\n    const hashOffset = u32[4];\n    const blockOffset = u32[5];\n    const hashCount = u32[6];\n    const blockCount = u32[7];\n    this.hashTable = this.readTable(hashOffset, hashCount, \"(hash table)\");\n    this.blockTable = this.readTable(blockOffset, blockCount, \"(block table)\");\n    this.blockSize = 1 << (9 + sizeId);\n  }\n\n  readTable(offset, count, key) {\n    const buffer = new Uint32Array(this.buffer.slice(offset, offset + count * 16));\n    decrypt(buffer, hash(key, 3));\n    return buffer;\n  }\n\n  fileIndex(name) {\n    const {hashTable} = this;\n    const length = hashTable.length >> 2;\n    const index = hash(name, 0) % length;\n    const keyA = hash(name, 1), keyB = hash(name, 2);\n    for (let i = index, count = 0; hashTable[i * 4 + 3] !== 0xFFFFFFFF && count < length; i = (i + 1) % length, ++count) {\n      if (hashTable[i * 4] === keyA && hashTable[i * 4 + 1] === keyB && hashTable[i * 4 + 3] !== 0xFFFFFFFE) {\n        return i;\n      }\n    }\n  }\n\n  readRaw(name) {\n    const index = this.fileIndex(name);\n    if (index == null) {\n      return;\n    }\n    const block = this.hashTable[index * 4 + 3];\n    const info = {\n      filePos: this.blockTable[block * 4],\n      cmpSize: this.blockTable[block * 4 + 1],\n      fileSize: this.blockTable[block * 4 + 2],\n      flags: this.blockTable[block * 4 + 3],\n      key: hash(path_name(name), 3),\n    };\n    if ((info.flags & Flags.PatchFile) || info.filePos + info.cmpSize > this.buffer.byteLength) {\n      return;\n    }\n    if (!(info.flags & Flags.Compressed)) {\n      info.cmpSize = info.fileSize;\n    }\n    if (info.flags & Flags.FixSeed) {\n      info.key = (info.key + info.filePos) ^ info.fileSize;\n    }\n    return {info, data: new Uint8Array(this.buffer, info.filePos, info.cmpSize)};\n  }\n\n  read(name) {\n    const raw = this.readRaw(name);\n    if (!raw) {\n      return;\n    }\n    let {info, data} = raw;\n    data = data.slice();\n\n    if (info.flags & Flags.SingleUnit) {\n      if (info.flags & Flags.Encrypted) {\n        decrypt8(data, info.key);\n      }\n      if (info.flags & Flags.CompressMulti) {\n        return;\n      } else if (info.flags & Flags.CompressPkWare) {\n        return pkzip_decompress(data, info.fileSize);\n      }\n      return data;\n    } else if (!(info.flags & Flags.Compressed)) {\n      if (info.flags & Flags.Encrypted) {\n        for (let i = 0; i < info.fileSize; i += this.blockSize) {\n          decrypt8(data.subarray(i, Math.min(info.fileSize, i + this.blockSize)), info.key + i / this.blockSize);\n        }\n      }\n      return data;\n    } else {\n      const numBlocks = Math.floor((info.fileSize + this.blockSize - 1) / this.blockSize);\n      const tableSize = numBlocks + 1;\n      if (data.length < tableSize * 4) {\n        return;\n      }\n      const blocks = new Uint32Array(data.buffer, 0, tableSize);\n      if (info.flags & Flags.Encrypted) {\n        decrypt(blocks, info.key - 1);\n      }\n      const output = new Uint8Array(info.fileSize);\n      for (let i = 0; i < numBlocks; ++i) {\n        const oPos = i * this.blockSize;\n        const uSize = Math.min(this.blockSize, info.fileSize - oPos);\n        if (blocks[i + 1] > data.length) {\n          return;\n        }\n        let tmp = data.subarray(blocks[i], blocks[i + 1]);\n        if (info.flags & Flags.Encrypted) {\n          // this is not safe, but our files are small enough\n          decrypt8(tmp, info.key + i);\n        }\n        if (info.flags & Flags.CompressMulti) {\n          return;\n        } else if (info.flags & Flags.CompressPkWare) {\n          tmp = pkzip_decompress(tmp, uSize);\n        }\n        if (!tmp || tmp.length !== uSize) {\n          return;\n        }\n        output.set(tmp, oPos);\n      }\n      return output;\n    }\n  }\n}\n\nfunction getPassword(name) {\n  if (name.match(/spawn\\d+\\.sv/i)) {\n    return 'lshbkfg1'; // single, spawn\n  } else if (name.match(/share_\\d+\\.sv/i)) {\n    return 'lshbkfg1'; // multi, spawn\n  } else if (name.match(/multi_\\d+\\.sv/i)) {\n    return 'szqnlsk1'; // multi, retail\n  } else {\n    return 'xrgyrkj1'; // single, retail\n  }\n}\n\nexport default function getPlayerName(data, name) {\n  try {\n    const reader = new MpqReader(data);\n    const hero = codec_decode(reader.read(\"hero\"), getPassword(name));\n    const nameEnd = hero.indexOf(0, 16);\n    const result = {};\n    result.name = String.fromCharCode(...hero.subarray(16, nameEnd));\n    result.cls = hero[48];\n    result.level = hero[53];\n    return result;\n  } catch (e) {\n    return null;\n  }\n}\n","function no_sound() {\n  return {\n    create_sound: () => 0,\n    duplicate_sound: () => 0,\n    play_sound: () => undefined,\n    set_volume: () => undefined,\n    stop_sound: () => undefined,\n    delete_sound: () => undefined,\n  };\n}\n\nfunction decodeAudioData(context, buffer) {\n  return new Promise((resolve, reject) => {\n    context.decodeAudioData(buffer, resolve, reject);\n  });\n}\n\nexport default function init_sound() {\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const StereoPannerNode = window.StereoPannerNode;\n  if (!AudioContext) {\n    return no_sound();\n  }\n\n  let context = null;\n  try {\n    context = new AudioContext();\n  } catch (e) {\n  }\n  const sounds = new Map();\n\n  return {\n    create_sound_raw(id, data, length, channels, rate) {\n      if (!context) {\n        return;\n      }\n      const buffer = context.createBuffer(channels, length, rate);\n      for (let i = 0; i < channels; ++i) {\n        buffer.getChannelData(i).set(data.subarray(i * length, i * length + length));\n      }\n      sounds.set(id, {\n        buffer: Promise.resolve(buffer),\n        gain: context.createGain(),\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\n      });\n    },\n    create_sound(id, data) {\n      if (!context) {\n        return;\n      }\n      const buffer = decodeAudioData(context, data.buffer);\n      sounds.set(id, {\n        buffer,\n        gain: context.createGain(),\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\n      });\n    },\n    duplicate_sound(id, srcId) {\n      if (!context) {\n        return;\n      }\n      const src = sounds.get(srcId);\n      if (!src) {\n        return;\n      }\n      sounds.set(id, {\n        buffer: src.buffer,\n        gain: context.createGain(),\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\n      });\n    },\n    play_sound(id, volume, pan, loop) {\n      const src = sounds.get(id);\n      if (src) {\n        if (src.source) {\n          src.source.then(source => source.stop());\n        }\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\n        const relVolume = Math.pow(2.0, pan / 1000.0);\n        if (src.panner) {\n          src.panner.pan.value = 1.0 - 2.0 / (1.0 + relVolume);\n        }\n        src.source = src.buffer.then(buffer => {\n          const source = context.createBufferSource();\n          source.buffer = buffer;\n          source.loop = !!loop;\n          let node = source.connect(src.gain);\n          if (src.panner) {\n            node = node.connect(src.panner);\n          }\n          node.connect(context.destination);\n          source.start();\n          return source;\n        });\n      }\n    },\n    set_volume(id, volume) {\n      const src = sounds.get(id);\n      if (src) {\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\n      }\n    },\n    stop_sound(id) {\n      const src = sounds.get(id);\n      if (src && src.source) {\n        src.source.then(source => source.stop());\n        delete src.source;\n      }\n    },\n    delete_sound(id) {\n      const src = sounds.get(id);\n      if (src && src.source) {\n        src.source.then(source => source.stop());\n      }\n      sounds.delete(id);\n    },\n\n    stop_all() {\n      for (let [, sound] of sounds) {\n        if (sound.source) {\n          sound.source.then(source => source.stop());\n        }\n      }\n      sounds.clear();\n      context = null;\n    }\n  };\n}\n","import axios from 'axios';\n\nconst SpawnSizes = [50274091, 25830791];\n\nexport { SpawnSizes };\n\nexport default async function load_spawn(api, fs) {\n  let file = fs.files.get('spawn.mpq');\n  if (file && !SpawnSizes.includes(file.byteLength)) {\n    fs.files.delete('spawn.mpq');\n    await fs.delete('spawn.mpq');\n    file = null;\n  }\n  if (!file) {\n    const spawn = await axios.request({\n      url: process.env.PUBLIC_URL + '/spawn.mpq',\n      responseType: 'arraybuffer',\n      onDownloadProgress: e => {\n        if (api.onProgress) {\n          api.onProgress({text: 'Downloading...', loaded: e.loaded, total: e.total || SpawnSizes[1]});\n        }\n      },\n      headers: {\n        'Cache-Control': 'max-age=31536000'\n      }\n    });\n    if (!SpawnSizes.includes(spawn.data.byteLength)) {\n      throw Error(\"Invalid spawn.mpq size. Try clearing cache and refreshing the page.\");\n    }\n    const data = new Uint8Array(spawn.data);\n    fs.files.set('spawn.mpq', data);\n    fs.update('spawn.mpq', data.slice());\n  }\n  return fs;\n}\n","export class buffer_reader {\n  constructor(buffer) {\n    this.buffer = (buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer));\n    this.pos = 0;\n  }\n  done() {\n    return this.pos === this.buffer.byteLength;\n  }\n  read8() {\n    if (this.pos >= this.buffer.byteLength) {\n      throw Error('packet too small');\n    }\n    return this.buffer[this.pos++];\n  }\n  read16() {\n    const {pos, buffer} = this;\n    if (pos + 2 > buffer.byteLength) {\n      throw Error('packet too small');\n    }\n    const result = buffer[pos] | (buffer[pos + 1] << 8);\n    this.pos += 2;\n    return result;\n  }\n  read32() {\n    const {pos, buffer} = this;\n    if (pos + 4 > buffer.byteLength) {\n      throw Error('packet too small');\n    }\n    const result = buffer[pos] | (buffer[pos + 1] << 8) | (buffer[pos + 2] << 16) | (buffer[pos + 3] << 24);\n    this.pos += 4;\n    return result;\n  }\n  read_str() {\n    const length = this.read8();\n    const {pos, buffer} = this;\n    if (pos + length > buffer.byteLength) {\n      throw Error('packet too small');\n    }\n    const result = String.fromCharCode(...buffer.subarray(pos, pos + length));\n    this.pos += length;\n    return result;\n  }\n  read_buf() {\n    const size = this.read32();\n    const result = this.buffer.subarray(this.pos, this.pos + size);\n    this.pos += size;\n    return result;\n  }\n}\nexport class buffer_writer {\n  constructor(length) {\n    this.buffer = new Uint8Array(length);\n    this.pos = 0;\n  }\n  get result() {\n    return this.buffer.buffer;\n  }\n  write8(value) {\n    this.buffer[this.pos++] = value;\n    return this;\n  }\n  write16(value) {\n    const {pos, buffer} = this;\n    buffer[pos] = value;\n    buffer[pos + 1] = value >> 8;\n    this.pos += 2;\n    return this;\n  }\n  write32(value) {\n    const {pos, buffer} = this;\n    buffer[pos] = value;\n    buffer[pos + 1] = value >> 8;\n    buffer[pos + 2] = value >> 16;\n    buffer[pos + 3] = value >> 24;\n    this.pos += 4;\n    return this;\n  }\n  write_str(value) {\n    const length = value.length;\n    this.write8(length);\n    const {pos, buffer} = this;\n    for (let i = 0; i < length; ++i) {\n      buffer[pos + i] = value.charCodeAt(i);\n    }\n    this.pos += length;\n    return this;\n  }\n  rest(value) {\n    this.buffer.set(value, this.pos);\n    this.pos += value.byteLength;\n    return this;\n  }\n  write_buf(value) {\n    this.write32(value.byteLength);\n    this.rest(value);\n    return this;\n  }\n}\n\nexport const RejectionReason = {\n  JOIN_SUCCESS: 0x00,\n  JOIN_ALREADY_IN_GAME: 0x01,\n  JOIN_GAME_NOT_FOUND: 0x02,\n  JOIN_INCORRECT_PASSWORD: 0x03,\n  JOIN_VERSION_MISMATCH: 0x04,\n  JOIN_GAME_FULL: 0x05,\n  CREATE_GAME_EXISTS: 0x06,\n};\n\nexport function read_packet(reader, types) {\n  const code = reader.read8();\n  const cls = Object.values(types).find(cls => cls.code === code);\n  if (!cls) {\n    throw Error('invalid packet code');\n  }\n  return {type: cls, packet: cls.read(reader)};\n}\nexport function packet_size(type, packet) {\n  return (typeof type.size === \"function\" ? type.size(packet) : type.size) + 1;\n}\nexport function write_packet(type, packet) {\n  const size = packet_size(type, packet);\n  return type.write(new buffer_writer(size).write8(type.code), packet).result;\n}\n\nexport function make_batch(types) {\n  return {\n    code: 0x00,\n    read: reader => {\n      const count = reader.read16();\n      const packets = [];\n      for (let i = 0; i < count; ++i) {\n        packets.push(read_packet(reader, types()));\n      }\n      return packets;\n    },\n    size: packets => packets.reduce((sum, {type, packet}) => sum + packet_size(type, packet), 2),\n    write: (writer, packets) => {\n      writer.write16(packets.length);\n      for (let {type, packet} of packets) {\n        type.write(writer.write8(type.code), packet);\n      }\n      return writer;\n    },\n  };\n}\n\nexport const server_packet = {\n  info: {\n    code: 0x32,\n    read: reader => ({version: reader.read32()}),\n    size: 4,\n    write: (writer, {version}) => writer.write32(version),\n  },\n  game_list: {\n    code: 0x21,\n    read: reader => {\n      const count = reader.read16();\n      const games = [];\n      for (let i = 0; i < count; ++i) {\n        games.push({type: reader.read32(), name: reader.read_str()});\n      }\n      return {games};\n    },\n    size: ({games}) => games.reduce((sum, {name}) => sum + 5 + name.length, 2),\n    write: (writer, {games}) => {\n      writer.write16(games.length);\n      for (let {type, name} of games) {\n        writer.write32(type);\n        writer.write_str(name);\n      }\n      return writer;\n    },\n  },\n  join_accept: {\n    code: 0x12,\n    read: reader => ({cookie: reader.read32(), index: reader.read8(), seed: reader.read32(), difficulty: reader.read32()}),\n    size: 13,\n    write: (writer, {cookie, index, seed, difficulty}) => writer.write32(cookie).write8(index).write32(seed).write32(difficulty),\n  },\n  join_reject: {\n    code: 0x15,\n    read: reader => ({cookie: reader.read32(), reason: reader.read8()}),\n    size: 5,\n    write: (writer, {cookie, reason}) => writer.write32(cookie).write8(reason),\n  },\n  connect: {\n    code: 0x13,\n    read: reader => ({id: reader.read8()}),\n    size: 1,\n    write: (writer, {id}) => writer.write8(id),\n  },\n  disconnect: {\n    code: 0x14,\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\n    size: 5,\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\n  },\n  message: {\n    code: 0x01,\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\n    size: ({payload}) => 5 + payload.byteLength,\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\n  },\n  turn: {\n    code: 0x02,\n    read: reader => ({id: reader.read8(), turn: reader.read32()}),\n    size: 5,\n    write: (writer, {id, turn}) => writer.write8(id).write32(turn),\n  },\n  batch: make_batch(() => server_packet),\n};\n\nexport const client_packet = {\n  info: {\n    code: 0x31,\n    read: reader => ({version: reader.read32()}),\n    size: 4,\n    write: (writer, {version}) => writer.write32(version),\n  },\n  game_list: {\n    code: 0x21,\n    read: () => ({}),\n    size: 0,\n    write: writer => writer,\n  },\n  create_game: {\n    code: 0x22,\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str(), difficulty: reader.read32()}),\n    size: ({name, password}) => 10 + name.length + password.length,\n    write: (writer, {cookie, name, password, difficulty}) => writer.write32(cookie).write_str(name).write_str(password).write32(difficulty),\n  },\n  join_game: {\n    code: 0x23,\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str()}),\n    size: ({name, password}) => 6 + name.length + password.length,\n    write: (writer, {cookie, name, password}) => writer.write32(cookie).write_str(name).write_str(password),\n  },\n  leave_game: {\n    code: 0x24,\n    read: () => ({}),\n    size: 0,\n    write: writer => writer,\n  },\n  drop_player: {\n    code: 0x03,\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\n    size: 5,\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\n  },\n  message: {\n    code: 0x01,\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\n    size: ({payload}) => 5 + payload.byteLength,\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\n  },\n  turn: {\n    code: 0x02,\n    read: reader => ({turn: reader.read32()}),\n    size: 4,\n    write: (writer, {turn}) => writer.write32(turn),\n  },\n  batch: make_batch(() => server_packet),\n};\n","import Peer from 'peerjs';\nimport { buffer_reader, read_packet, write_packet, client_packet, server_packet, RejectionReason } from './packet';\n\n/*function log_packet(data, type) {\n  const reader = new buffer_reader(data);\n  const id = reader.read8();\n  for (let [name, {code, read}] of Object.entries(type)) {\n    if (code === id && (name !== 'message' && name !== 'turn')) {\n      console.log(`${type === client_packet ? 'client_packet' : 'server_packet'}.${name} ${JSON.stringify(read(reader))}`);\n    }\n  }\n}*/\n\nconst PeerID = name => `diabloweb_${name}`;\nconst Options = {host: 'diablo.rivsoft.net', port: 443, secure: true};\nconst MAX_PLRS = 4;\n\nclass webrtc_server {\n  constructor(version, {cookie, name, password, difficulty}, onMessage, onClose) {\n    this.version = version;\n    this.name = name;\n    this.password = password;\n    this.difficulty = difficulty;\n    this.onMessage = onMessage;\n    this.onClose = onClose;\n\n    this.peer = new Peer(PeerID(name), Options);\n    this.peer.on('connection', conn => this.onConnect(conn));\n    this.players = [];\n    this.myplr = 0;\n\n    this.seed = Math.floor(Math.random() * Math.pow(2, 32));\n\n    const onError = () => {\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.CREATE_GAME_EXISTS}));\n      onClose();\n      this.peer.off('error', onError);\n      this.peer.off('open', onOpen);\n    };\n    const onOpen = () => {\n      //console.log('peer open');\n      setTimeout(() => {\n        onMessage(write_packet(server_packet.join_accept, {cookie, index: 0, seed: this.seed, difficulty}));\n        onMessage(write_packet(server_packet.connect, {id: 0}));\n      }, 0);\n      this.peer.off('error', onError);\n      this.peer.off('open', onOpen);\n    };\n    this.peer.on('error', onError);\n    this.peer.on('open', onOpen);\n\n    //this.peer.on('error', err => console.log('peer error:', err));\n  }\n\n  onConnect(conn) {\n    //conn.on('error', err => console.log('conn error:', err));\n    //console.log('conn open');\n    const peer = {conn};\n    conn.on('data', packet => {\n      const reader = new buffer_reader(packet);\n      const {type, packet: pkt} = read_packet(reader, client_packet);\n      switch (type.code) {\n      case client_packet.info.code:\n        peer.version = pkt.version;\n        break;\n      case client_packet.join_game.code:\n        if (peer.version !== this.version) {\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_VERSION_MISMATCH}));\n        } else if (pkt.name !== this.name) {\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\n        } else if (pkt.password !== this.password) {\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_INCORRECT_PASSWORD}));\n        } else {\n          let i = 1;\n          while (i < MAX_PLRS && this.players[i]) {\n            ++i;\n          }\n          if (i >= MAX_PLRS) {\n            conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_FULL}));            \n          } else {\n            this.players[i] = peer;\n            peer.id = i;\n            conn.send(write_packet(server_packet.join_accept, {cookie: pkt.cookie, index: i, seed: this.seed, difficulty: this.difficulty}));\n            this.send(0xFF, write_packet(server_packet.connect, {id: i}));\n          }\n        }\n        break;\n      default:\n        if (peer.id != null) {\n          this.handle(peer.id, type.code, pkt);\n        } else {\n          return;\n        }\n      }\n      if (!reader.done()) {\n        throw Error('packet too large');\n      }\n    });\n    conn.on('close', () => {\n      //console.log('conn close');\n      if (peer.id != null) {\n        this.drop(peer.id, 0x40000006);\n      }\n    });\n  }\n\n  send(mask, pkt) {\n    for (let i = 1; i < MAX_PLRS; ++i) {\n      if ((mask & (1 << i)) && this.players[i]) {\n        if (this.players[i].conn) {\n          this.players[i].conn.send(pkt);\n        }\n      }\n    }\n    // self last since it will destroy the buffer\n    if (mask & 1) {\n      this.onMessage(pkt);\n    }\n  }\n\n  drop(id, reason) {\n    if (id === 0) {\n      for (let i = 1; i < MAX_PLRS; ++i) {\n        this.drop(i, 0x40000006);\n      }\n      this.onMessage(write_packet(server_packet.disconnect, {id, reason}));\n      this.peer.destroy();\n      this.onClose();\n    } else if (this.players[id]) {\n      this.send(0xFF, write_packet(server_packet.disconnect, {id, reason}));\n      this.players[id].id = null;\n      if (this.players[id].conn) {\n        this.players[id].conn.close();\n      }\n      this.players[id] = null;\n    }\n  }\n\n  handle(id, code, pkt) {\n    switch (code) {\n    case client_packet.leave_game.code:\n      this.drop(id, 3);\n      break;\n    case client_packet.drop_player.code:\n      this.drop(pkt.id, pkt.reason);\n      break;\n    case client_packet.message.code:\n      this.send(pkt.id === 0xFF ? ~(1 << id) : (1 << pkt.id), write_packet(server_packet.message, {id, payload: pkt.payload}));\n      break;\n    case client_packet.turn.code:\n      this.send(~(1 << id), write_packet(server_packet.turn, {id, turn: pkt.turn}));\n      break;\n    default:\n      throw Error(`invalid packet ${code}`);\n    }\n  }\n}\n\nclass webrtc_client {\n  pending = [];\n\n  constructor(version, {cookie, name, password}, onMessage, onClose) {\n    this.peer = new Peer(Options);\n    this.conn = this.peer.connect(PeerID(name));\n\n    let needUnreg = true;\n    const unreg = () => {\n      if (!needUnreg) {\n        return;\n      }\n      needUnreg = false;\n      this.peer.off('error', onError);\n      this.conn.off('error', onError);\n      this.conn.off('open', onOpen);\n      clearTimeout(timeout);\n    };\n    const onError = () => {\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\n      onClose();\n      unreg();\n    };\n    const onOpen = () => {\n      this.conn.send(write_packet(client_packet.info, {version}));\n      this.conn.send(write_packet(client_packet.join_game, {cookie, name, password}));\n      for (let pkt of this.pending) {\n        this.conn.send(pkt);\n      }\n      this.pending = null;\n      this.conn.off('open', onOpen);\n    };\n    const timeout = setTimeout(onError, 10000);\n    this.peer.on('error', onError);\n    this.conn.on('error', onError);\n    this.conn.on('open', onOpen);\n\n    //this.peer.on('error', err => console.log('peer error:', err));\n    //this.conn.on('error', err => console.log('conn error:', err));\n\n    this.conn.on('data', data => {\n      unreg();\n      const reader = new buffer_reader(data);\n      const {type, packet: pkt} = read_packet(reader, server_packet);\n      switch (type.code) {\n      case server_packet.join_accept.code:\n        this.myplr = pkt.index;\n        break;\n      case server_packet.join_reject.code:\n        onClose();\n        break;\n      case server_packet.disconnect.code:\n        if (pkt.id === 'myplr') {\n          onClose();\n        }\n        break;\n      default:\n      }\n      onMessage(data);\n    });\n    this.conn.on('close', data => {\n      onClose();\n    });\n  }\n\n  send(packet) {\n    if (this.pending) {\n      this.pending.push(packet);\n    } else {\n      this.conn.send(packet);\n    }\n  }\n}\n\nexport default function webrtc_open(onMessage) {\n  let server = null, client = null;\n\n  let version = 0;\n\n  /*const prevMessage = onMessage;\n  onMessage = data => {\n    log_packet(data, server_packet);\n    prevMessage(data);\n  };*/\n\n  return {\n    send: function(packet) {\n      //log_packet(packet, client_packet);\n      const reader = new buffer_reader(packet);\n      const {type, packet: pkt} = read_packet(reader, client_packet);\n      switch (type.code) {\n      case client_packet.info.code:\n        version = pkt.version;\n        break;\n      case client_packet.create_game.code:\n        if (server || client) {\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\n        } else {\n          server = new webrtc_server(version, pkt, onMessage, () => server = null);\n        }\n        break;\n      case client_packet.join_game.code:\n        if (server || client) {\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\n        } else {\n          client = new webrtc_client(version, pkt, onMessage, () => client = null);\n        }\n        break;\n      default:\n        if (server) {\n          server.handle(0, type.code, pkt);\n          if (type.code === client_packet.leave_game.code) {\n            server = null;\n          }\n        } else if (client) {\n          client.send(packet);\n          if (type.code === client_packet.leave_game.code) {\n            client = null;\n          }\n          return;\n        } else if (type.code !== client_packet.leave_game.code) {\n          throw Error(`invalid packet ${type.code}`);\n        }\n      }\n      if (!reader.done()) {\n        throw Error('packet too large');\n      }\n    },\n  };\n}\n","import Worker from './game.worker.js';\nimport init_sound from './sound';\nimport load_spawn from './load_spawn';\nimport webrtc_open from './webrtc';\n\nfunction onRender(api, ctx, {bitmap, images, text, clip, belt}) {\n  if (bitmap) {\n    ctx.transferFromImageBitmap(bitmap);\n  } else {\n    for (let {x, y, w, h, data} of images) {\n      const image = ctx.createImageData(w, h);\n      image.data.set(data);\n      ctx.putImageData(image, x, y);\n    }\n    if (text.length) {\n      ctx.save();\n      ctx.font = 'bold 13px Times New Roman';\n      if (clip) {\n        const {x0, y0, x1, y1} = clip;\n        ctx.beginPath();\n        ctx.rect(x0, y0, x1 - x0, y1 - y0);\n        ctx.clip();\n      }\n      for (let {x, y, text: str, color} of text) {\n        const r = ((color >> 16) & 0xFF);\n        const g = ((color >> 8) & 0xFF);\n        const b = (color & 0xFF);\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\n        ctx.fillText(str, x, y + 22);\n      }\n      ctx.restore();\n    }\n  }\n\n  api.updateBelt(belt);\n}\n\nfunction testOffscreen() {\n  return false;\n  // This works but I couldn't see any performance difference, and support for 2D canvas in workers is very poor.\n  // In this mode, instead of sending a batch of areas to draw back to the main thread, the worker does all drawing on its own and sends a complete bitmap object back.\n  // However, this effectively clears the worker's canvas, so we need to redraw the whole frame every time, which defeats the performance gained from reduced copying.\n  /*try {\n    const canvas = document.createElement(\"canvas\");\n    const offscreen = canvas.transferControlToOffscreen();\n    const context = offscreen.getContext(\"2d\");\n    return context != null;\n  } catch (e) {\n    return false;\n  }*/\n}\n\nasync function do_load_game(api, audio, mpq, spawn) {\n  const fs = await api.fs;\n  if (spawn && !mpq) {\n    await load_spawn(api, fs);\n  }\n\n  let context = null, offscreen = false;\n  if (testOffscreen()) {\n    context = api.canvas.getContext(\"bitmaprenderer\");\n    offscreen = true;\n  } else {\n    context = api.canvas.getContext(\"2d\", {alpha: false});\n  }\n  return await new Promise((resolve, reject) => {\n    try {\n      const worker = new Worker();\n\n      let packetQueue = [];\n      const webrtc = webrtc_open(data => {\n        packetQueue.push(data);\n      });\n\n      worker.addEventListener(\"message\", ({data}) => {\n        switch (data.action) {\n        case \"loaded\":\n          resolve((func, ...params) => worker.postMessage({action: \"event\", func, params}));\n          break;\n        case \"render\":\n          onRender(api, context, data.batch);\n          break;\n        case \"audio\":\n          audio[data.func](...data.params);\n          break;\n        case \"audioBatch\":\n          for (let {func, params} of data.batch) {\n            audio[func](...params);\n          }\n          break;\n        case \"fs\":\n          fs[data.func](...data.params);\n          break;\n        case \"cursor\":\n          api.setCursorPos(data.x, data.y);\n          break;\n        case \"keyboard\":\n          api.openKeyboard(data.rect);\n          break;\n        case \"error\":\n          audio.stop_all();\n          api.onError(data.error, data.stack);\n          break;\n        case \"failed\":\n          reject({message: data.error, stack: data.stack});\n          break;\n        case \"progress\":\n          api.onProgress({text: data.text, loaded: data.loaded, total: data.total});\n          break;\n        case \"exit\":\n          api.onExit();\n          break;\n        case \"current_save\":\n          api.setCurrentSave(data.name);\n          break;\n          case \"packet\":\n          webrtc.send(data.buffer);\n          break;\n        case \"packetBatch\":\n          for (let packet of data.batch) {\n            webrtc.send(packet);\n          }\n          break;\n        default:\n        }\n      });          \n      const transfer= [];\n      for (let [, file] of fs.files) {\n        transfer.push(file.buffer);\n      }\n      worker.postMessage({action: \"init\", files: fs.files, mpq, spawn, offscreen}, transfer);\n      setInterval(() => {\n        if (packetQueue.length) {\n          worker.postMessage({action: \"packetBatch\", batch: packetQueue}, packetQueue);\n          packetQueue.length = 0;\n        }\n      }, 20);\n      delete fs.files;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport default function load_game(api, mpq, spawn) {\n  const audio = init_sound();\n  return do_load_game(api, audio, mpq, spawn);\n}\n","import Worker from './mpqcmp.worker.js';\nimport MpqBinary from './MpqCmp.wasm';\nimport ListFile from './ListFile.txt';\nimport axios from 'axios';\n\nimport { decrypt, encrypt, hash, path_name } from '../api/savefile';\n\nconst MpqSize = 156977;\nconst ListSize = 75542;\n\nconst readFile = (file, progress) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => {\n    if (progress) {\n      progress({loaded: file.size});\n    }\n    resolve(reader.result);\n  };\n  reader.onerror = () => reject(reader.error);\n  reader.onabort = () => reject();\n  if (progress) {\n    reader.addEventListener(\"progress\", progress);\n  }\n  reader.readAsArrayBuffer(file);\n});\n\nasync function loadFile(url, progress, responseType='arraybuffer') {\n  const binary = await axios.request({\n    url,\n    responseType,\n    onDownloadProgress: progress,\n  });\n  return binary.data;\n}\n\nfunction runWorker(data, transfer, progress) {\n  return new Promise((resolve, reject) => {\n    try {\n      const worker = new Worker();\n      worker.addEventListener(\"message\", ({data}) => {\n        switch (data.action) {\n        case \"result\":\n          resolve({buffer: data.buffer, blocks: data.blocks});\n          break;\n        case \"error\":\n          reject({message: data.error, stack: data.stack});\n          break;\n        case \"progress\":\n          progress(data.value);\n          break;\n        default:\n        }\n      });\n      worker.postMessage({action: \"run\", ...data}, transfer);\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport default async function compress(mpq, progress) {\n  progress(\"Loading...\");\n  const files = [];\n  function updateProgress() {\n    progress(\"Loading...\", files.reduce((sum, {loaded, weight}) => sum + loaded * weight, 0),\n      files.reduce((sum, {total, weight}) => sum + total * weight, 0));\n  }\n  const loader = file => e => { file.loaded = e.loaded; updateProgress(); };\n\n  const mpqsize = mpq.size;\n\n  const fHeader = {loaded: 0, weight: 1, total: mpqsize};\n  fHeader.ready = readFile(mpq.slice(0, 32), loader(fHeader));\n  files.push(fHeader);\n\n  const fBinary = {loaded: 0, weight: 5, total: MpqSize};\n  fBinary.ready = loadFile(MpqBinary, loader(fBinary));\n  files.push(fBinary);\n\n  const fList = {loaded: 0, weight: 5, total: ListSize};\n  fList.ready = loadFile(ListFile, loader(fList), 'text');\n  files.push(fList);\n\n  const header = new Uint32Array(await fHeader.ready);\n  const header16 = new Uint16Array(header.buffer);\n\n  if (header[0] !== 0x1A51504D) {\n    throw Error('invalid MPQ file');\n  }\n\n  const blockSize = 1 << (9 + header16[7]);\n  const hashTablePos = header[4];\n  const blockTablePos = header[5];\n  const hashTableSize = header[6];\n  const blockTableSize = header[7];\n  if (hashTablePos + hashTableSize * 16 > mpqsize || blockTablePos + blockTableSize * 16 > mpqsize) {\n    throw Error('invalid MPQ file');\n  }\n\n  const fHashTable = {loaded: 0, weight: 1, total: hashTableSize * 16};\n  const fBlockTable = {loaded: 0, weight: 1, total: blockTableSize * 16};\n  fHeader.total -= fHashTable.total + fBlockTable.total;\n  fHashTable.ready = readFile(mpq.slice(hashTablePos, hashTablePos + fHashTable.total), loader(fHashTable));\n  fBlockTable.ready = readFile(mpq.slice(blockTablePos, blockTablePos + fBlockTable.total), loader(fBlockTable));\n  files.push(fHashTable, fBlockTable);\n\n  const hashTable = new Uint32Array(await fHashTable.ready);\n  const blockTable = new Uint32Array(await fBlockTable.ready);\n  decrypt(hashTable, hash(\"(hash table)\", 3));\n  decrypt(blockTable, hash(\"(block table)\", 3));\n\n  const list = (await fList.ready).split(\"\\n\").map(name => name.trim()).filter(name => name.length);\n  const listMap = {};\n  const hashStr = (h1, h2) => h1.toString(16).padStart(8, '0') + h2.toString(16).padStart(8, '0');\n  for (let name of list) {\n    listMap[hashStr(hash(name, 1), hash(name, 2))] = name;\n  }\n\n  const NUM_TASKS = 4;\n  const tasks = [];\n  for (let i = 0; i < NUM_TASKS; ++i) {\n    tasks.push({\n      entries: [],\n      min: mpqsize,\n      max: 0,\n      progress: 0,\n    });\n  }\n  \n  for (let i = 0; i < hashTable.length / 4; ++i) {\n    const index = hashTable[i * 4 + 3];\n    if (index === 0xFFFFFFFF || index === 0xFFFFFFFE) {\n      continue;\n    }\n    const name = listMap[hashStr(hashTable[i * 4], hashTable[i * 4 + 1])];\n    if (!name) {\n      hashTable[i * 4 + 3] = 0xFFFFFFFE;\n      continue;\n    }\n\n    const filePos = blockTable[index * 4];\n    const cSize = blockTable[index * 4 + 1];\n\n    const task = tasks[Math.floor(filePos * NUM_TASKS / mpqsize)];\n    task.entries.push(i);\n    task.min = Math.min(task.min, filePos);\n    task.max = Math.max(task.max, filePos + cSize);\n  }\n\n  const numFiles = tasks.reduce((sum, task) => sum + task.entries.length, 0);\n\n  fHeader.total = 32;\n  for (let task of tasks) {\n    if (task.min < task.max) {\n      const fLoad = {loaded: 0, weight: 1, total: task.max - task.min};\n      task.ready = readFile(mpq.slice(task.min, task.max), loader(fLoad)).then(data => task.data = data);\n      files.push(fLoad);\n    }\n  }\n\n  await Promise.all(tasks.map(t => t.ready).filter(Boolean));\n  const binary = await fBinary.ready;\n\n  progress(\"Processing...\");\n\n  for (let task of tasks) {\n    if (task.data) {\n      const input = new Uint32Array(task.entries.length * 6);\n      task.entries.forEach((i, pos) => {\n        const index = hashTable[i * 4 + 3];\n        const name = listMap[hashStr(hashTable[i * 4], hashTable[i * 4 + 1])];\n        input[pos * 6] = blockTable[index * 4];\n        input[pos * 6 + 1] = blockTable[index * 4 + 1];\n        input[pos * 6 + 2] = blockTable[index * 4 + 2];\n        input[pos * 6 + 3] = blockTable[index * 4 + 3];\n        input[pos * 6 + 4] = hash(path_name(name), 3);\n        input[pos * 6 + 5] = name.match(/\\.wav$/i) ? 1 : 0;\n      });\n      task.run = runWorker({binary, mpq: task.data, input, offset: task.min, blockSize}, [task.data, input.buffer], value => {\n        task.progress = value;\n        const sum = tasks.reduce((sum, task) => sum + task.progress, 0);\n        progress(\"Processing...\", sum, numFiles);\n      }).then(res => task.result = res);\n    }\n  }\n\n  await Promise.all(tasks.map(t => t.run).filter(Boolean));\n\n  let outputPos = 32 + fHashTable.total + fBlockTable.total;\n  const outputSize = tasks.reduce((sum, {result}) => sum + (result ? result.buffer.byteLength : 0), outputPos);\n  const output = [header.buffer, hashTable.buffer, blockTable.buffer];\n\n  blockTable.fill(0);\n  let blockPos = 0;\n  for (let task of tasks) {\n    if (task.result) {\n      const {buffer, blocks} = task.result;\n      for (let pos = 0; pos < task.entries.length; ++pos) {\n        const i = task.entries[pos];\n        hashTable[i * 4 + 3] = blockPos + pos;\n        blocks[pos * 4] += outputPos;\n      }\n      blockTable.set(blocks, blockPos * 4);\n      blockPos += task.entries.length;\n      output.push(buffer);\n      outputPos += buffer.byteLength;\n    }\n  }\n\n  header[1] = 32;\n  header[2] = outputSize;\n  header16[6] = 1;\n  header16[7] = 7;\n  header[4] = 32;\n  header[5] = 32 + hashTable.length * 4;\n  header[6] = hashTable.length / 4;\n  header[7] = blockTable.length / 4;\n\n  encrypt(hashTable, hash(\"(hash table)\", 3));\n  encrypt(blockTable, hash(\"(block table)\", 3));\n\n  return new Blob(output, {type: 'binary/octet-stream'});\n}\n","import React from 'react';\nimport compress from './compress';\n\nexport default class CompressMpq extends React.Component {\n  state = {};\n\n  parseFile = e => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      this.start(files[0]);\n    }\n  }\n\n  onProgress(progress) {\n    this.setState({progress});\n  }\n  onDone = blob => {\n    //const blob = new Blob([result], {type: 'binary/octet-stream'});\n    const url = URL.createObjectURL(blob);\n    this.setState({url});\n\n    const lnk = document.createElement('a');\n    lnk.setAttribute('href', url);\n    lnk.setAttribute('download', 'DIABDAT.MPQ');\n    document.body.appendChild(lnk);\n    lnk.click();\n    document.body.removeChild(lnk);\n  }\n  onError(message, stack) {\n    const { api } = this.props;\n    api.setState({compress: false});\n    api.onError(message, stack);\n  }\n\n  onClose = () => {\n    if (this.state.url) {\n      URL.revokeObjectURL(this.state.url);\n    }\n    this.props.api.setState({compress: false});\n  }\n\n  start(file) {\n    this.setState({started: true});\n    compress(file, (text, loaded, total) => this.onProgress({text, loaded, total}))\n      .then(this.onDone, e => this.onError(e.message, e.stack));\n  }\n\n  render() {\n    const { url, started, progress } = this.state;\n    if (url) {\n      return (\n        <div className=\"start\">\n          <p>\n            <a href={url} download=\"DIABDAT.MPQ\">Click here if download doesn't start.</a>\n          </p>\n          <div className=\"startButton\" onClick={this.onClose}>Back</div>\n        </div>\n      );\n    }\n    if (started) {\n      return (\n        <div className=\"loading\">\n          {(progress && progress.text) || 'Processing...'}\n          {progress != null && !!progress.total && (\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\n          )}\n        </div>\n      );\n    }\n    return (\n      <div className=\"start\">\n        <p>\n          You can use this tool to reduce the original MPQ to about half its size. It encodes sounds in MP3 format and uses better compression for regular files.\n          To begin, click the button below or drop the MPQ onto the page.\n        </p>\n        <form>\n          <label htmlFor=\"loadFile\" className=\"startButton\">Select MPQ</label>\n          <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\n        </form>\n        <div className=\"startButton\" onClick={this.onClose}>Back</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport getPlayerName from './api/savefile';\n\nimport { mapStackTrace } from 'sourcemapped-stacktrace';\n\nimport create_fs from './fs';\nimport load_game from './api/loader';\nimport { SpawnSizes } from './api/load_spawn';\nimport CompressMpq from './mpqcmp';\n\nimport Peer from 'peerjs';\n\nwindow.Peer = Peer;\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-43123589-6');\n  ReactGA.pageview('/');\n}\n\nfunction reportLink(e, retail) {\n  const message = (e.message || \"Unknown error\") + (e.stack ? \"\\n\" + e.stack : \"\");\n  const url = new URL(\"https://github.com/d07RiV/diabloweb/issues/new\");\n  url.searchParams.set(\"body\",\n`**Description:**\n[Please describe what you were doing before the error occurred]\n\n**App version:**\nDiabloWeb ${process.env.VERSION} (${retail ? 'Retail' : 'Shareware'})\n\n**Error message:**\n    \n${message.split(\"\\n\").map(line => \"    \" + line).join(\"\\n\")}\n\n**User agent:**\n\n    ${navigator.userAgent}\n\n**Save file:**\n[Please attach the save file, if applicable. The error box should have a link to download the current save you were playing; alternatively, you can open dev console on the game page (F12) and type in ${\"`DownloadSaves()`\"}]\n`);\n  return url.toString();\n}\n\nfunction isDropFile(e) {\n  if (e.dataTransfer.items) {\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\n      if (e.dataTransfer.items[i].kind === \"file\") {\n        return true;\n      }\n    }\n  } if (e.dataTransfer.files.length) {\n    return true;\n  }\n  return false;\n}\nfunction getDropFile(e) {\n  if (e.dataTransfer.items) {\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\n      if (e.dataTransfer.items[i].kind === \"file\") {\n        return e.dataTransfer.items[i].getAsFile();\n      }\n    }\n  } if (e.dataTransfer.files.length) {\n    return e.dataTransfer.files[0];\n  }\n}\n\nconst TOUCH_MOVE = 0;\nconst TOUCH_RMB = 1;\nconst TOUCH_SHIFT = 2;\n\nfunction findKeyboardRule() {\n  for (let sheet of document.styleSheets) {\n    for (let rule of sheet.cssRules) {\n      if (rule.type === CSSRule.MEDIA_RULE && rule.conditionText === '(min-aspect-ratio: 3/1)') {\n        for (let sub of rule.cssRules) {\n          if (sub.selectorText === '.App.keyboard .Body .inner') {\n            return sub;\n          }\n        }\n      }\n    }\n  }\n}\nlet keyboardRule = null;\ntry {\n  keyboardRule = findKeyboardRule();\n} catch (e) {\n}\n\nconst Link = ({children, ...props}) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>{children}</a>;\n\nclass App extends React.Component {\n  files = new Map();\n  state = {started: false, loading: false, dropping: 0, has_spawn: false};\n  cursorPos = {x: 0, y: 0};\n\n  touchControls = false;\n  touchButtons = [null, null, null, null, null, null];\n  touchCtx = [null, null, null, null, null, null];\n  touchMods = [false, false, false, false, false, false];\n  touchBelt = [-1, -1, -1, -1, -1, -1];\n  maxKeyboard = 0;\n\n  fs = create_fs(true);\n\n  constructor(props) {\n    super(props);\n\n    this.setTouch0 = this.setTouch_.bind(this, 0);\n    this.setTouch1 = this.setTouch_.bind(this, 1);\n    this.setTouch2 = this.setTouch_.bind(this, 2);\n    this.setTouch3 = this.setTouchBelt_.bind(this, 3);\n    this.setTouch4 = this.setTouchBelt_.bind(this, 4);\n    this.setTouch5 = this.setTouchBelt_.bind(this, 5);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"drop\", this.onDrop, true);\n    document.addEventListener(\"dragover\", this.onDragOver, true);\n    document.addEventListener(\"dragenter\", this.onDragEnter, true);\n    document.addEventListener(\"dragleave\", this.onDragLeave, true);\n\n    this.fs.then(fs => {\n      const spawn = fs.files.get('spawn.mpq');\n      if (spawn && SpawnSizes.includes(spawn.byteLength)) {\n        this.setState({has_spawn: true});\n      }\n      if ([...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).length) {\n        this.setState({save_names: true});\n      }\n    });\n  }\n\n  onDrop = e => {\n    const file = getDropFile(e);\n    if (file) {\n      e.preventDefault();\n      if (this.compressMpq) {\n        this.compressMpq.start(file);\n      } else {\n        this.start(file);\n      }\n    }\n    this.setState({dropping: 0});\n  }\n  onDragEnter = e => {\n    e.preventDefault();\n    this.setDropping(1);\n  }\n  onDragOver = e => {\n    if (isDropFile(e)) {\n      e.preventDefault();\n    }\n  }\n  onDragLeave = e => {\n    this.setDropping(-1);\n  }\n  setDropping(inc) {\n    this.setState(({dropping}) => ({dropping: Math.max(dropping + inc, 0)}));\n  }\n\n  onError(message, stack) {\n    (async () => {\n      const errorObject = {message};\n      if (this.saveName) {\n        errorObject.save = await (await this.fs).fileUrl(this.saveName);\n      }\n      if (stack) {\n        mapStackTrace(stack, stack => {\n          this.setState(({error}) => !error && {error: {...errorObject, stack: stack.join(\"\\n\")}});\n        });\n      } else {\n        this.setState(({error}) => !error && {error: errorObject});\n      }\n    })();\n  }\n\n  openKeyboard(rect) {\n    if (rect) {\n      this.showKeyboard = {\n        left: `${(100 * (rect[0] - 10) / 640).toFixed(2)}%`,\n        top: `${(100 * (rect[1] - 10) / 480).toFixed(2)}%`,\n        width: `${(100 * (rect[2] - rect[0] + 20) / 640).toFixed(2)}%`,\n        height: `${(100 * (rect[3] - rect[1] + 20) / 640).toFixed(2)}%`,\n      };\n      this.maxKeyboard = rect[4];\n      this.element.classList.add(\"keyboard\");\n      Object.assign(this.keyboard.style, this.showKeyboard);\n      this.keyboard.focus();\n      if (keyboardRule) {\n        keyboardRule.style.transform = `translate(-50%, ${(-(rect[1] + rect[3]) * 56.25 / 960).toFixed(2)}vw)`;\n      }\n    } else {\n      this.showKeyboard = false;\n      this.element.classList.remove(\"keyboard\");\n      this.keyboard.blur();\n      this.keyboard.value = \"\";\n      this.keyboardNum = 0;\n    }\n  }\n\n  setCursorPos(x, y) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.cursorPos = {\n      x: rect.left + (rect.right - rect.left) * x / 640,\n      y: rect.top + (rect.bottom - rect.top) * y / 480,\n    };\n    setTimeout(() => {\n      this.game(\"DApi_Mouse\", 0, 0, 0, x, y);\n    });\n  }\n\n  onProgress(progress) {\n    this.setState({progress});\n  }\n\n  onExit() {\n    if (!this.state.error) {\n      window.location.reload();\n    }\n  }\n\n  setCurrentSave(name) {\n    this.saveName = name;\n  }\n\n  showSaves = () => {\n    if (this.state.save_names === true) {\n      this.updateSaves().then(() => this.setState({show_saves: !this.state.show_saves}));\n    } else {\n      this.setState({show_saves: !this.state.show_saves});\n    }\n  }\n  updateSaves() {\n    return this.fs.then(fs => {\n      const saves = {};\n      [...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).forEach(name => {\n        saves[name] = getPlayerName(fs.files.get(name).buffer, name);\n      });\n      this.setState({save_names: saves});\n    });\n  }\n  removeSave(name) {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n      (async () => {\n        const fs = await this.fs;\n        await fs.delete(name.toLowerCase());\n        fs.files.delete(name.toLowerCase());\n        this.updateSaves();\n      })();\n    }\n  }\n  downloadSave(name) {\n    this.fs.then(fs => fs.download(name));\n  }\n\n  drawBelt(idx, slot) {\n    if (!this.canvas) return;\n    if (!this.touchButtons[idx]) {\n      return;\n    }\n    this.touchBelt[idx] = slot;\n    if (slot >= 0) {\n      this.touchButtons[idx].style.display = \"block\";\n      this.touchCtx[idx].drawImage(this.canvas, 205 + 29 * slot, 357, 28, 28, 0, 0, 28, 28);\n    } else {\n      this.touchButtons[idx].style.display = \"none\";\n    }\n  }\n\n  updateBelt(belt) {\n    if (belt) {\n      const used = new Set();\n      let pos = 3;\n      for (let i = 0; i < belt.length && pos < 6; ++i) {\n        if (belt[i] >= 0 && !used.has(belt[i])) {\n          this.drawBelt(pos++, i);\n          used.add(belt[i]);\n        }\n      }\n      for (; pos < 6; ++pos) {\n        this.drawBelt(pos, -1);\n      }\n    } else {\n      this.drawBelt(3, -1);\n      this.drawBelt(4, -1);\n      this.drawBelt(5, -1);\n    }\n  }\n\n  start(file) {\n    if (file && file.name.match(/\\.sv$/i)) {\n      this.fs.then(fs => fs.upload(file)).then(() => {\n        this.updateSaves();\n      });\n      return;\n    }\n    if (this.state.show_saves) {\n      return;\n    }\n    if (file && !file.name.match(/\\.mpq$/i)) {\n      window.alert('Please select an MPQ file. If you downloaded the installer from GoG, you will need to install it on PC and use the MPQ file from the installation folder.');\n      return;\n    }\n\n    document.removeEventListener(\"drop\", this.onDrop, true);\n    document.removeEventListener(\"dragover\", this.onDragOver, true);\n    document.removeEventListener(\"dragenter\", this.onDragEnter, true);\n    document.removeEventListener(\"dragleave\", this.onDragLeave, true);\n    this.setState({dropping: 0});\n\n    const retail = !!(file && !file.name.match(/^spawn\\.mpq$/i));\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.event({\n        category: 'Game',\n        action: retail ? 'Start Retail' : 'Start Shareware',\n      });\n    }\n\n    this.setState({loading: true, retail});\n\n    load_game(this, file, !retail).then(game => {\n      this.game = game;\n\n      document.addEventListener('mousemove', this.onMouseMove, true);\n      document.addEventListener('mousedown', this.onMouseDown, true);\n      document.addEventListener('mouseup', this.onMouseUp, true);\n      document.addEventListener('keydown', this.onKeyDown, true);\n      document.addEventListener('keyup', this.onKeyUp, true);\n      document.addEventListener('contextmenu', this.onMenu, true);\n\n      document.addEventListener('touchstart', this.onTouchStart, {passive: false, capture: true});\n      document.addEventListener('touchmove', this.onTouchMove, {passive: false, capture: true});\n      document.addEventListener('touchend', this.onTouchEnd, {passive: false, capture: true});\n\n      document.addEventListener('pointerlockchange', this.onPointerLockChange);\n      window.addEventListener('resize', this.onResize);\n\n      this.setState({started: true});\n    }, e => this.onError(e.message, e.stack));\n  }\n\n  pointerLocked() {\n    return document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas;\n  }\n\n  mousePos(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    if (this.pointerLocked()) {\n      this.cursorPos.x = Math.max(rect.left, Math.min(rect.right, this.cursorPos.x + e.movementX));\n      this.cursorPos.y = Math.max(rect.top, Math.min(rect.bottom, this.cursorPos.y + e.movementY));\n    } else {\n      this.cursorPos = {x: e.clientX, y: e.clientY};\n    }\n    return {\n      x: Math.max(0, Math.min(Math.round((this.cursorPos.x - rect.left) / (rect.right - rect.left) * 640), 639)),\n      y: Math.max(0, Math.min(Math.round((this.cursorPos.y - rect.top) / (rect.bottom - rect.top) * 480), 479)),\n    };\n  }\n\n  mouseButton(e) {\n    switch (e.button) {\n    case 0: return 1;\n    case 1: return 4;\n    case 2: return 2;\n    case 3: return 5;\n    case 4: return 6;\n    default: return 1;\n    }\n  }\n  eventMods(e) {\n    return ((e.shiftKey || this.touchMods[TOUCH_SHIFT]) ? 1 : 0) + (e.ctrlKey ? 2 : 0) + (e.altKey ? 4 : 0) + (e.touches ? 8 : 0);\n  }\n\n  onResize = () => {\n    document.exitPointerLock();\n  }\n\n  onPointerLockChange = () => {\n    if (window.screen && window.innerHeight === window.screen.height && !this.pointerLocked()) {\n      // assume that the user pressed escape\n      this.game(\"DApi_Key\", 0, 0, 27);\n      this.game(\"DApi_Key\", 1, 0, 27);\n    }\n  }\n\n  onMouseMove = e => {\n    if (!this.canvas) return;\n    const {x, y} = this.mousePos(e);\n    this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\n    e.preventDefault();\n  }\n\n  onMouseDown = e => {\n    if (!this.canvas) return;\n    if (e.target === this.keyboard) {\n      return;\n    }\n    if (this.touchControls) {\n      this.touchControls = false;\n      this.element.classList.remove(\"touch\");\n    }\n    const {x, y} = this.mousePos(e);\n    if (window.screen && window.innerHeight === window.screen.height) {\n      // we're in fullscreen, let's get pointer lock!\n      if (!this.pointerLocked()) {\n        this.canvas.requestPointerLock();\n      }\n    }\n    this.game(\"DApi_Mouse\", 1, this.mouseButton(e), this.eventMods(e), x, y);\n    e.preventDefault();\n  }\n\n  onMouseUp = e => {\n    if (!this.canvas) return;\n    if (e.target === this.keyboard) {\n      //return;\n    }\n    const {x, y} = this.mousePos(e);\n    this.game(\"DApi_Mouse\", 2, this.mouseButton(e), this.eventMods(e), x, y);\n    if (e.target !== this.keyboard) {\n      e.preventDefault();\n    }\n  }\n\n  onKeyDown = e => {\n    if (!this.canvas) return;\n    this.game(\"DApi_Key\", 0, this.eventMods(e), e.keyCode);\n    if (!this.showKeyboard && (e.keyCode >= 32 && e.key.length === 1)) {\n      this.game(\"DApi_Char\", e.key.charCodeAt(0));\n    } else if (e.keyCode === 8 || e.keyCode === 13) {\n      this.game(\"DApi_Char\", e.keyCode);\n    }\n    this.clearKeySel();\n    if (!this.showKeyboard) {\n      if (e.keyCode === 8 || e.keyCode === 9 || (e.keyCode >= 112 && e.keyCode <= 119)) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  onMenu = e => {\n    e.preventDefault();\n  }\n\n  onKeyUp = e => {\n    if (!this.canvas) return;\n    this.game(\"DApi_Key\", 1, this.eventMods(e), e.keyCode);\n    this.clearKeySel();\n  }\n\n  clearKeySel() {\n    if (this.showKeyboard) {\n      const len = this.keyboard.value.length;\n      this.keyboard.setSelectionRange(len, len);\n    }\n  }\n\n  onKeyboardInner(flags) {\n    if (this.showKeyboard) {\n      const text = this.keyboard.value;\n      let valid;\n      if (this.maxKeyboard > 0) {\n        valid = (text.match(/[\\x20-\\x7E]/g) || []).join(\"\").substring(0, this.maxKeyboard);\n      } else {\n        const maxValue = -this.maxKeyboard;\n        if (text.match(/^\\d*$/)) {\n          this.keyboardNum = Math.min(text.length ? parseInt(text) : 0, maxValue);\n        }\n        valid = (this.keyboardNum ? this.keyboardNum.toString() : \"\");\n      }\n      if (text !== valid) {\n        this.keyboard.value = valid;\n      }\n      this.clearKeySel();\n      this.game(\"text\", valid, flags);\n    }\n  }\n  onKeyboard = () => {\n    this.onKeyboardInner(0);\n  }\n  onKeyboardBlur = () => {\n    this.onKeyboardInner(1);\n  }\n\n  parseFile = e => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      this.start(files[0]);\n    }\n  }\n\n  parseSave = e => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      this.start(files[0]);\n    }\n  }\n\n  touchButton = null;\n  touchCanvas = null;\n\n  setTouchMod(index, value, use) {\n    if (index < 3) {\n      this.touchMods[index] = value;\n      if (this.touchButtons[index]) {\n        this.touchButtons[index].classList.toggle(\"active\", value);\n      }\n    } else if (use && this.touchBelt[index] >= 0) {\n      const now = performance.now();\n      if (!this.beltTime || now - this.beltTime > 750) {\n        this.game(\"DApi_Char\", 49 + this.touchBelt[index]);\n        this.beltTime = now;\n      }\n    }\n  }\n\n  updateTouchButton(touches, release) {\n    let touchOther = null;\n    if (!this.touchControls) {\n      this.touchControls = true;\n      this.element.classList.add(\"touch\");\n    }\n    const btn = this.touchButton;\n    for (let {target, identifier, clientX, clientY} of touches) {\n      if (btn && btn.id === identifier && this.touchButtons[btn.index] === target) {\n        if (touches.length > 1) {\n          btn.stick = false;\n        }\n        btn.clientX = clientX;\n        btn.clientY = clientY;\n        this.touchCanvas = [...touches].find(t => t.identifier !== identifier);\n        if (this.touchCanvas) {\n          this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\n        }\n        delete this.panPos;\n        return this.touchCanvas != null;\n      }\n      const idx = this.touchButtons.indexOf(target);\n      if (idx >= 0 && !touchOther) {\n        touchOther = {id: identifier, index: idx, stick: true, original: this.touchMods[idx], clientX, clientY};\n      }\n    }\n    if (btn && !touchOther && release && btn.stick) {\n      const rect = this.touchButtons[btn.index].getBoundingClientRect();\n      const {clientX, clientY} = btn;\n      if (clientX >= rect.left && clientX < rect.right && clientY >= rect.top && clientY < rect.bottom) {\n        this.setTouchMod(btn.index, !btn.original, true);\n      } else {\n        this.setTouchMod(btn.index, btn.original);\n      }\n    } else if (btn) {\n      this.setTouchMod(btn.index, false);\n    }\n    this.touchButton = touchOther;\n    if (touchOther) {\n      this.setTouchMod(touchOther.index, true);\n      if (touchOther.index === TOUCH_MOVE) {\n        this.setTouchMod(TOUCH_RMB, false);\n      } else if (touchOther.index === TOUCH_RMB) {\n        this.setTouchMod(TOUCH_MOVE, false);\n      }\n      delete this.panPos;\n    } else if (touches.length === 2) {\n      const x = (touches[1].clientX + touches[0].clientX) / 2, y = (touches[1].clientY + touches[0].clientY) / 2;\n      if (this.panPos) {\n        const dx = x - this.panPos.x, dy = y - this.panPos.y;\n        const step = this.canvas.offsetHeight / 12;\n        if (Math.max(Math.abs(dx), Math.abs(dy)) > step) {\n          let key;\n          if (Math.abs(dx) > Math.abs(dy)) {\n            key = (dx > 0 ? 0x25 : 0x27);\n          } else {\n            key = (dy > 0 ? 0x26 : 0x28);\n          }\n          this.game(\"DApi_Key\", 0, 0, key);\n          // key up is ignored anyway\n          this.panPos = {x, y};\n        }\n      } else {\n        this.game(\"DApi_Mouse\", 0, 0, 24, 320, 180);\n        this.game(\"DApi_Mouse\", 2, 1, 24, 320, 180);\n        this.panPos = {x, y};\n      }\n      this.touchCanvas = null;\n      return false;\n    } else {\n      delete this.panPos;\n    }\n    this.touchCanvas = [...touches].find(t => !touchOther || t.identifier !== touchOther.id);\n    if (this.touchCanvas) {\n      this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\n    }\n    return this.touchCanvas != null;\n  }\n\n  onTouchStart = e => {\n    if (!this.canvas) return;\n    if (e.target === this.keyboard) {\n      return;\n    } else {\n      this.keyboard.blur();\n    }\n    e.preventDefault();\n    if (this.updateTouchButton(e.touches, false)) {\n      const {x, y} = this.mousePos(this.touchCanvas);\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\n      if (!this.touchMods[TOUCH_MOVE]) {\n        this.game(\"DApi_Mouse\", 1, this.touchMods[TOUCH_RMB] ? 2 : 1, this.eventMods(e), x, y);\n      }\n    }\n  }\n  onTouchMove = e => {\n    if (!this.canvas) return;\n    if (e.target === this.keyboard) {\n      return;\n    }\n    e.preventDefault();\n    if (this.updateTouchButton(e.touches, false)) {\n      const {x, y} = this.mousePos(this.touchCanvas);\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\n    }\n  }\n  onTouchEnd = e => {\n    if (!this.canvas) return;\n    if (e.target === this.keyboard) {\n      //return;\n    } else {\n      e.preventDefault();\n    }\n    const prevTc = this.touchCanvas;\n    this.updateTouchButton(e.touches, true);\n    if (prevTc && !this.touchCanvas) {\n      const {x, y} = this.mousePos(prevTc);\n      this.game(\"DApi_Mouse\", 2, 1, this.eventMods(e), x, y);\n      this.game(\"DApi_Mouse\", 2, 2, this.eventMods(e), x, y);\n\n      if (this.touchMods[TOUCH_RMB] && (!this.touchButton || this.touchButton.index !== TOUCH_RMB)) {\n        this.setTouchMod(TOUCH_RMB, false);\n      }\n    }\n    if (!document.fullscreenElement) {\n      this.element.requestFullscreen();\n    }\n  }\n\n  setCanvas = e => this.canvas = e;\n  setElement = e => this.element = e;\n  setKeyboard = e => this.keyboard = e;\n  setTouch_(i, e) {\n    this.touchButtons[i] = e;\n  }\n  setTouchBelt_(i, e) {\n    this.touchButtons[i] = e;\n    if (e) {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 28;\n      canvas.height = 28;\n      e.appendChild(canvas);\n      this.touchCtx[i] = canvas.getContext(\"2d\");\n    } else {\n      this.touchCtx[i] = null;\n    }\n  }\n\n  renderUi() {\n    const {started, loading, error, progress, has_spawn, save_names, show_saves, compress} = this.state;\n    if (show_saves && typeof save_names === \"object\") {\n      const plrClass = [\"Warrior\", \"Rogue\", \"Sorcerer\"];\n      return (\n        <div className=\"start\">\n          <ul className=\"saveList\">\n            {Object.entries(save_names).map(([name, info]) => <li key={name}>\n              {name}{info ? <span className=\"info\">{info.name} (lv. {info.level} {plrClass[info.cls]})</span> : \"\"}\n              <FontAwesomeIcon className=\"btnDownload\" icon={faDownload} onClick={() => this.downloadSave(name)}/>\n              <FontAwesomeIcon className=\"btnRemove\" icon={faTimes} onClick={() => this.removeSave(name)}/>\n            </li>)}\n          </ul>\n          <form>\n            <label htmlFor=\"loadFile\" className=\"startButton\">Upload Save</label>\n            <input accept=\".sv\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseSave}/>\n          </form>\n          <div className=\"startButton\" onClick={() => this.setState({show_saves: false})}>Back</div>\n        </div>\n      );\n    } else if (compress) {\n      return (\n        <CompressMpq api={this} ref={e => this.compressMpq = e}/>\n      );\n    } else if (error) {\n      return (\n        <Link className=\"error\" href={reportLink(error, this.state.retail)}>\n          <p className=\"header\">The following error has occurred:</p>\n          <p className=\"body\">{error.message}</p>\n          <p className=\"footer\">Click to create an issue on GitHub</p>\n          {error.save != null && <a href={error.save} download={this.saveName}>Download save file</a>}\n        </Link>\n      );\n    } else if (loading && !started) {\n      return (\n        <div className=\"loading\">\n          {(progress && progress.text) || 'Loading...'}\n          {progress != null && !!progress.total && (\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\n          )}\n        </div>\n      );\n    } else if (!started) {\n      return (\n        <div className=\"start\">\n          <p>\n            This is a web port of the original Diablo game, based on source code reconstructed by\n            GalaXyHaXz and devilution team. The project page with information and links can be found over here <Link href=\"https://github.com/d07RiV/diabloweb\">https://github.com/d07RiV/diabloweb</Link>\n          </p>\n          <p>\n            If you own the original game, you can drop the original DIABDAT.MPQ onto this page or click the button below to start playing.\n            The game can be purchased from <Link href=\"https://www.gog.com/game/diablo\">GoG</Link>.\n            {\" \"}<span className=\"link\" onClick={() => this.setState({compress: true})}>Click here to compress the MPQ, greatly reducing its size.</span>\n          </p>\n          {!has_spawn && (\n            <p>\n              Or you can play the shareware version for free (50MB download).\n            </p>\n          )}\n          <form>\n            <label htmlFor=\"loadFile\" className=\"startButton\">Select MPQ</label>\n            <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\n          </form>\n          <div className=\"startButton\" onClick={() => this.start()}>Play Shareware</div>\n          {!!save_names && <div className=\"startButton\" onClick={this.showSaves}>Manage Saves</div>}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const {started, error, dropping} = this.state;\n    return (\n      <div className={classNames(\"App\", {touch: this.touchControls, started, dropping, keyboard: !!this.showKeyboard})} ref={this.setElement}>\n        <div className=\"touch-ui touch-mods\">\n          <div className={classNames(\"touch-button\", \"touch-button-0\", {active: this.touchMods[0]})} ref={this.setTouch0}/>\n          <div className={classNames(\"touch-button\", \"touch-button-1\", {active: this.touchMods[1]})} ref={this.setTouch1}/>\n          <div className={classNames(\"touch-button\", \"touch-button-2\", {active: this.touchMods[2]})} ref={this.setTouch2}/>\n        </div>\n        <div className=\"touch-ui touch-belt\">\n          <div className={classNames(\"touch-button\", \"touch-button-0\")} ref={this.setTouch3}/>\n          <div className={classNames(\"touch-button\", \"touch-button-1\")} ref={this.setTouch4}/>\n          <div className={classNames(\"touch-button\", \"touch-button-2\")} ref={this.setTouch5}/>\n        </div>\n        <div className=\"Body\">\n          <div className=\"inner\">\n            {!error && <canvas ref={this.setCanvas} width={640} height={480}/>}\n            <input type=\"text\" className=\"keyboard\" onChange={this.onKeyboard} onBlur={this.onKeyboardBlur} ref={this.setKeyboard} spellCheck={false} style={this.showKeyboard || {}}/>\n          </div>\n        </div>\n        <div className=\"BodyV\">\n          {this.renderUi()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register({\n  onUpdate() {\n  },\n});\n"],"sourceRoot":""}