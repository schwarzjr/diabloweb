{"version":3,"sources":["fs.js","storage.js"],"names":["importStorage","Promise","resolve","reject","done","frame","document","createElement","window","addEventListener","_ref","data","method","files","contentWindow","postMessage","src","style","display","body","appendChild","setTimeout","downloadFile","_callee","store","name","file","blob","url","lnk","_Users_jirischwarz_GitHub_diabloweb_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","get","toLowerCase","sent","Blob","type","URL","createObjectURL","setAttribute","click","removeChild","revokeObjectURL","console","error","concat","stop","downloadSaves","_callee2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context2","undefined","keys","t0","Symbol","iterator","value","match","t1","return","finish","readFile","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","uploadFile","_callee3","_context3","Uint8Array","set","abrupt","create_fs","_x7","_create_fs","apply","this","arguments","_callee4","load","_i","_Object$entries","_ref7","_ref3","_name","_data","_files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_ref6","_ref5","_context4","IdbKvStore","Map","Object","json","entries","call","length","_Users_jirischwarz_GitHub_diabloweb_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","t2","DownloadFile","DownloadSaves","update","delete","remove","clear","download","upload","t3","__webpack_require__","r","__webpack_exports__","_fs__WEBPACK_IMPORTED_MODULE_0__","fs","source","then","_ref2"],"mappings":"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","file":"static/js/storage.bf47d273.chunk.js","sourcesContent":["import IdbKvStore from  'idb-kv-store';\n\nconst importStorage = () => new Promise((resolve, reject) => {\n  let done = false;\n  const frame = document.createElement('iframe');\n  window.addEventListener('message', ({data}) => {\n    if (data.method === 'storage' && !done) {\n      done = true;\n      resolve(data.files);\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\n    }\n  });\n  frame.addEventListener('load', () => {\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\n  });\n  frame.addEventListener('error', () => {\n    if (!done) {\n      done = true;\n      resolve(null);\n    }\n  });\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\n  frame.style.display = \"none\";\n  document.body.appendChild(frame);\n  setTimeout(() => {\n    if (!done) {\n      done = true;\n      resolve(null);\n    }\n  }, 10000);\n});\n\nasync function downloadFile(store, name) {\n  const file = await store.get(name.toLowerCase());\n  if (file) {\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\n    const url = URL.createObjectURL(blob);\n    const lnk = document.createElement('a');\n    lnk.setAttribute('href', url);\n    lnk.setAttribute('download', name);\n    document.body.appendChild(lnk);\n    lnk.click();\n    document.body.removeChild(lnk);\n    URL.revokeObjectURL(url);\n  } else {\n    console.error(`File ${name} does not exist`);\n  }\n}\n\nasync function downloadSaves(store) {\n  for (let name of await store.keys()) {\n    if (name.match(/\\.sv$/i)) {\n      downloadFile(store, name);\n    }\n  }\n}\n\nconst readFile = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = () => reject(reader.error);\n  reader.onabort = () => reject();\n  reader.readAsArrayBuffer(file);\n});\nasync function uploadFile(store, files, file) {\n  const data = new Uint8Array(await readFile(file));\n  files.set(file.name.toLowerCase(), data);\n  return store.set(file.name.toLowerCase(), data);\n}\n\nexport default async function create_fs(load) {\n  try {\n    const store = new IdbKvStore('diablo_fs');\n    const files = new Map();\n    for (let [name, data] of Object.entries(await store.json())) {\n      files.set(name, data);\n    }\n    if (load) {\n      const files = await importStorage();\n      if (files) {\n        for (let [name, data] of files) {\n          files.set(name, data);\n          store.set(name, data);\n        }\n      }\n    }\n    window.DownloadFile = name => downloadFile(store, name);\n    window.DownloadSaves = () => downloadSaves(store);\n    return {\n      files,\n      update: (name, data) => store.set(name, data),\n      delete: name => store.remove(name),\n      clear: () => store.clear(),\n      download: name => downloadFile(store, name),\n      upload: file => uploadFile(store, files, file),\n    };\n  } catch (e) {\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\n    return {\n      files: new Map(),\n      update: () => Promise.resolve(),\n      delete: () => Promise.resolve(),\n      clear: () => Promise.resolve(),\n      download: () => Promise.resolve(),\n      upload: () => Promise.resolve(),\n    };\n  }  \n}\n","import create_fs from './fs';\n\nconst fs = create_fs();\nwindow.addEventListener('message', ({data, source}) => {\n  if (data.method === 'transfer') {\n    fs.then(({files}) => {\n      source.postMessage({method: 'storage', files}, '*');\n    });\n  } else if (data.method === 'clear') {\n    fs.then(({clear}) => clear());\n  }\n});"],"sourceRoot":""}