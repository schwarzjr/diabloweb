{"version":3,"sources":["../webpack/bootstrap","../node_modules/axios/lib/utils.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","api/Diablo.wasm","api/Diablo.jscc","api/DiabloSpawn.wasm","api/DiabloSpawn.jscc","../node_modules/axios/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/axios/lib/axios.js","../node_modules/axios/node_modules/is-buffer/index.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","api/websocket.js","api/game.worker.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","str","replace","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","f","res","resolve","resolvedPath","resolvedAbsolute","path","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","slice","index","relative","from","to","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","utils","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","v","toISOString","JSON","stringify","hashmarkIndex","indexOf","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","data","transformResponse","parse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","settle","buildURL","parseHeaders","isURLSameOrigin","createError","config","Promise","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","error","config1","config2","prop","Cancel","Diablo","_scriptDir","currentScript","src","Module","moduleOverrides","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","arguments_","quit_","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","Uint8Array","assert","ex","ExitStatus","readbuffer","scriptArgs","quit","print","console","log","warn","printErr","self","location","href","lastIndexOf","xhr","onload","out","err","getOwnPropertyDescriptor","warnOnce","text","shown","stackSave","stackRestore","asm2wasmImports","f64-rem","x","y","debugger","tempRet0","setTempRet0","wasmBinary","wasmMemory","WebAssembly","ABORT","condition","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP16","HEAP32","HEAPU32","HEAPF32","alignUp","multiple","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STACK_MAX","DYNAMICTOP_PTR","STACK_BASE","DYNAMIC_BASE","INITIAL_TOTAL_MEMORY","checkStackCookie","cookie1","cookie2","set","Memory","initial","byteLength","abortFnPtrError","sig","callRuntimeCallbacks","callbacks","callback","shift","func","arg","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","runtimeExited","addOnPostRun","cb","imul","fround","clz32","trunc","abs","cos","sin","tan","acos","asin","atan","atan2","exp","sqrt","ceil","floor","pow","round","max","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","FS","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","loadFilesFromDB","ErrnoError","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","getBinary","createWasm","id","info","global","NaN","Infinity","global.Math","asm2wasm","receiveInstance","instance","clearInterval","removeRunDependency","setInterval","dep","trueModule","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","credentials","catch","instantiate","reason","instantiateStreaming","instantiateAsync","providedBuffer","Table","maximum","element","ASM_CONSTS","$0","DApi","current_save_id","globalCtors","tempDoublePtr","demangle","demangleAll","jsStackTrace","stack","stackTrace","js","___exception_infos","___exception_caught","___exception_addRef","refcount","___exception_deAdjust","adjusted","adj","___exception_last","___cxa_free_exception","_free","___exception_decRef","rethrown","destructor","___cxa_find_matching_catch","thrown","throwntype","type","typeArray","___cxa_is_pointer_type","___cxa_can_catch","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","getZero","flush_NO_FILESYSTEM","fflush","_emscripten_get_heap_size","emscripten_realloc_buffer","size","oldSize","grow","asmLibraryArg","getTempRet0","abortStackOverflow","allocSize","nullFunc_i","nullFunc_ii","nullFunc_iidiiii","nullFunc_iii","nullFunc_iiii","nullFunc_iiiii","nullFunc_iiiiii","nullFunc_ji","nullFunc_jiji","nullFunc_v","nullFunc_vi","nullFunc_vii","nullFunc_viii","nullFunc_viiii","nullFunc_viiiii","nullFunc_viiiiii","nullFunc_viiiiiii","nullFunc_viiiiiiiii","nullFunc_viiiiiiiiii","nullFunc_viij","nullFunc_viji","invoke_i","sp","dynCall_i","_setThrew","invoke_ii","a1","dynCall_ii","invoke_iii","a2","dynCall_iii","invoke_iiii","a3","dynCall_iiii","invoke_iiiii","a4","dynCall_iiiii","invoke_iiiiii","a5","dynCall_iiiiii","invoke_ji","dynCall_ji","invoke_v","dynCall_v","invoke_vi","dynCall_vi","invoke_vii","dynCall_vii","invoke_viii","dynCall_viii","invoke_viiii","dynCall_viiii","invoke_viiiii","dynCall_viiiii","invoke_viiiiiii","a6","a7","dynCall_viiiiiii","invoke_viij","dynCall_viij","invoke_viji","dynCall_viji","___assert_fail","line","___cxa_allocate_exception","_malloc","___cxa_begin_catch","caught","__ZSt18uncaught_exceptionv","uncaught_exceptions","___cxa_end_catch","pop","___cxa_find_matching_catch_2","a0","___cxa_find_matching_catch_3","___cxa_get_exception_ptr","___cxa_pure_virtual","___cxa_throw","___cxa_uncaught_exceptions","___gxx_personality_v0","___lock","___resumeException","___setErrNo","___syscall140","which","getStreamFromFD","errno","___syscall146","iov","iovcnt","j","___syscall54","___syscall6","___unlock","__api_close_keyboard","close_keyboard","__api_open_keyboard","x0","y0","x1","y1","open_keyboard","_abort","_api_create_sound","create_sound","_api_create_sound_float","samples","channels","rate","create_sound_raw","_api_delete_sound","delete_sound","_api_draw_begin","draw_begin","_api_draw_belt","items","draw_belt","_api_draw_blit","w","h","draw_blit","_api_draw_clip_text","draw_clip_text","_api_draw_end","draw_end","_api_draw_text","color","draw_text","_api_duplicate_sound","srcId","duplicate_sound","_api_exit_game","exit_game","_api_play_sound","volume","pan","loop","play_sound","_api_set_cursor","set_cursor","_api_set_volume","set_volume","_api_stop_sound","stop_sound","_api_use_websocket","use","use_websocket","_api_websocket_closed","websocket_closed","_api_websocket_send","websocket_send","_emscripten_asm_const_ii","_emscripten_memcpy_big","dest","num","_emscripten_resize_heap","requestedSize","newSize","Date","now","_exit","implicit","has","flush","checkUnflushedContent","exit","_exit_error","exit_error","_get_file_contents","offset","get_file_contents","_get_file_size","get_file_size","_llvm_eh_typeid_for","_llvm_trap","_put_file_contents","put_file_contents","_remove_file","remove_file","_show_alert","alert","_time","_trace_pop","WASM_TRACE","_trace_push","abortOnCannotGrowMemory","asm","calledRun","old","doRun","postRun","preRun","runCaller","abortDecorators","what","decorator","DiabloSpawn","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","hasCatch","hasFinally","finallyEntry","complete","finish","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Axios","mergeConfig","createInstance","defaultConfig","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","fulfilled","rejected","getUri","handlers","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","fns","normalizedName","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","ignoreDuplicateOf","parsed","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","protocol","host","search","hash","hostname","port","pathname","requestURL","write","expires","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","relativeURL","executor","resolvePromise","token","source","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperties","target","props","descriptor","configurable","writable","_callee","handler","socket","_versionCbk","vers","clientInfo","regenerator_default","_context","WebSocket","binaryType","versionCbk","_ref","onError","removeEventListener","u8","parseInt","websocket_open","finisher","ws","batch","intr","proxy","msg","close","do_websocket_open","sock","reduce","sum","pos","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","DiabloSize","SpawnSize","worker","canvas","imageData","files","renderBatch","drawBelt","is_spawn","websocket","action","postMessage","ChunkSize","RemoteFile","Constructor","_classCallCheck","getResponseHeader","chunks","protoProps","staticProps","chunk0","chunk1","missing0","missing1","header","delete","_len","_key","rect","flag","call_api","try_api","wasm","_DApi_AllocPacket","DApi_renderLegacy","images","clip","belt","transfer","map","DApi_renderOffscreen","save","font","putImageData","beginPath","g","fillStyle","fillText","restore","bitmap","transferToImageBitmap","audioBatch","audioTransfer","maxSoundId","maxBatchId","_len2","_key2","_len3","_key3","packetBatch","_len4","_key4","nested","_wasm","_DApi_SyncTextPtr","heap","_DApi_SyncText","progress","loaded","total","readFile","file","reader","FileReader","readAsArrayBuffer","initWasm","spawn","SpawnBinary","DiabloBinary","SpawnModule","DiabloModule","ready","_callee2","mpq","offscreen","mpqLoaded","mpqTotal","wasmLoaded","wasmTotal","wasmWeight","updateProgress","loadWasm","loadMpq","_ref3","_ref4","_context2","OffscreenCanvas","getContext","createImageData","assign","_SNet_InitWebsocket","_DApi_Init","performance","_ref2","init_game","packet"],"mappings":"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","file":"7d7364d27232fa189ce4.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/diabloweb/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\nvar isBuffer = require('is-buffer');\n/*global toString:true*/\n// utils is a library of generic helper functions non-specific to axios\n\n\nvar toString = Object.prototype.toString;\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\n\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\n\n\nfunction isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n}\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBufferView(val) {\n  var result;\n\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n  }\n\n  return result;\n}\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\n\n\nfunction isString(val) {\n  return typeof val === 'string';\n}\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\n\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\n\n\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\n\n\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\n\n\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\n\n\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\n\n\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\n\n\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\n\n\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\n\n\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\n\n\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\n\n\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  } // Force an array if not already something iterable\n\n\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\n\n\nfunction merge()\n/* obj1, obj2, obj3, ... */\n{\n  var result = {};\n\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n\n  return result;\n}\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\n\n\nfunction deepMerge()\n/* obj1, obj2, obj3, ... */\n{\n  var result = {};\n\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n\n  return result;\n}\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\n\n\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};","module.exports = require(\"regenerator-runtime\");\n","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    return fn.apply(thisArg, args);\n  };\n};","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\n\n\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};","'use strict';\n\nvar utils = require('./utils');\n\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter; // Only Node.JS has a process variable that is of [[Class]] process\n\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;","'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies'); // Add xsrf header\n\n\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","'use strict';\n\nvar enhanceError = require('./enhanceError');\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\n\n\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};","'use strict';\n\nvar utils = require('../utils');\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\n\n\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  utils.forEach(['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n  return config;\n};","'use strict';\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\n\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\nmodule.exports = Cancel;","module.exports = __webpack_public_path__ + \"static/media/Diablo.35cc743a.wasm\";","\nvar Diablo = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Diablo) {\n  Diablo = Diablo || {};\n\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Diablo !== 'undefined' ? Diablo : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = function(status, toThrow) {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_HAS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n// A web environment like Electron.js can have Node enabled, so we must\n// distinguish between Node-enabled environments and Node environments per se.\n// This will allow the former to do things like mount NODEFS.\n// Extended check using process.versions fixes issue #8816.\n// (Also makes redundant the original check that 'require' is a function.)\nENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\nENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');\n}\n\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  scriptDirectory = __dirname + '/';\n\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  var nodeFS;\n  var nodePath;\n\n  read_ = function shell_read(filename, binary) {\n    var ret;\n      if (!nodeFS) nodeFS = require('fs');\n      if (!nodePath) nodePath = require('path');\n      filename = nodePath['normalize'](filename);\n      ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  readBinary = function readBinary(filename) {\n    var ret = read_(filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  process['on']('unhandledRejection', abort);\n\n  quit_ = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    var data;\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    quit_ = function(status) {\n      quit(status);\n    };\n  }\n\n  if (typeof print !== 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console === 'undefined') console = {};\n    console.log = print;\n    console.warn = console.error = typeof printErr !== 'undefined' ? printErr : print;\n  }\n} else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  read_ = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(xhr.response);\n    };\n  }\n\n  readAsync = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  setWindowTitle = function(title) { document.title = title };\n} else\n{\n  throw new Error('environment detection error');\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif (Module['arguments']) arguments_ = Module['arguments'];if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) Object.defineProperty(Module, 'arguments', { get: function() { abort('Module.arguments has been replaced with plain arguments_') } });\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) Object.defineProperty(Module, 'thisProgram', { get: function() { abort('Module.thisProgram has been replaced with plain thisProgram') } });\nif (Module['quit']) quit_ = Module['quit'];if (!Object.getOwnPropertyDescriptor(Module, 'quit')) Object.defineProperty(Module, 'quit', { get: function() { abort('Module.quit has been replaced with plain quit_') } });\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nif (!Object.getOwnPropertyDescriptor(Module, 'read')) Object.defineProperty(Module, 'read', { get: function() { abort('Module.read has been replaced with plain read_') } });\nif (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) Object.defineProperty(Module, 'readAsync', { get: function() { abort('Module.readAsync has been replaced with plain readAsync') } });\nif (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) Object.defineProperty(Module, 'readBinary', { get: function() { abort('Module.readBinary has been replaced with plain readBinary') } });\n// TODO: add when SDL2 is fixed if (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) Object.defineProperty(Module, 'setWindowTitle', { get: function() { abort('Module.setWindowTitle has been replaced with plain setWindowTitle') } });\n\n\n// TODO remove when SDL2 is fixed (also see above)\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\n// stack management, and other functionality that is provided by the compiled code,\n// should not be used before it is ready\nstackSave = stackRestore = stackAlloc = function() {\n  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');\n};\n\nfunction staticAlloc(size) {\n  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');\n}\n\nfunction dynamicAlloc(size) {\n  assert(DYNAMICTOP_PTR);\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  if (end > _emscripten_get_heap_size()) {\n    abort('failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly');\n  }\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = parseInt(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n        debugger;\n    }\n};\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Wraps a JS function as a wasm function with a given signature.\n// In the future, we may get a WebAssembly.Function constructor. Until then,\n// we create a wasm module that takes the JS function as an import with a given\n// signature, and re-exports that as a wasm function.\nfunction convertJsFunctionToWasm(func, sig) {\n\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    e: {\n      f: func\n    }\n  });\n  var wrappedFunc = instance.exports.f;\n  return wrappedFunc;\n}\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  var table = wasmTable;\n  var ret = table.length;\n\n  // Grow the table\n  try {\n    table.grow(1);\n  } catch (err) {\n    if (!err instanceof RangeError) {\n      throw err;\n    }\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\n  }\n\n  // Insert new element\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    table.set(ret, func);\n  } catch (err) {\n    if (!err instanceof TypeError) {\n      throw err;\n    }\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    table.set(ret, wrapped);\n  }\n\n  return ret;\n}\n\nfunction removeFunctionWasm(index) {\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    assert(args.length == sig.length-1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    assert(sig.length == 1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n};\n\nvar getTempRet0 = function() {\n  return tempRet0;\n};\n\nfunction getCompilerSetting(name) {\n  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';\n}\n\nvar Runtime = {\n  // helpful errors\n  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n};\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nvar wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) Object.defineProperty(Module, 'wasmBinary', { get: function() { abort('Module.wasmBinary has been replaced with plain wasmBinary') } });\n\n\nif (typeof WebAssembly !== 'object') {\n  abort('No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.');\n}\n\n\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// Potentially used for direct table calls.\nvar wasmTable;\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n  assert(!(opts && opts.async), 'async call is only supported with Emterpretify for now, see #9029');\n\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\n}\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = u8Array[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 1877648,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 7120528,\n    DYNAMIC_BASE = 7120528,\n    DYNAMICTOP_PTR = 1877616;\n\nassert(STACK_BASE % 16 === 0, 'stack must start aligned');\nassert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');\n\n\n\nvar TOTAL_STACK = 5242880;\nif (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')\n\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;if (!Object.getOwnPropertyDescriptor(Module, 'TOTAL_MEMORY')) Object.defineProperty(Module, 'TOTAL_MEMORY', { get: function() { abort('Module.TOTAL_MEMORY has been replaced with plain INITIAL_TOTAL_MEMORY') } });\n\nassert(INITIAL_TOTAL_MEMORY >= TOTAL_STACK, 'TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n\n\n\n\n\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n  }\n\n\nif (wasmMemory) {\n  buffer = wasmMemory.buffer;\n}\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['TOTAL_MEMORY'].\nINITIAL_TOTAL_MEMORY = buffer.byteLength;\nassert(INITIAL_TOTAL_MEMORY % WASM_PAGE_SIZE === 0);\nupdateGlobalBufferViews();\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  var cookie1 = HEAPU32[(STACK_MAX >> 2)-1];\n  var cookie2 = HEAPU32[(STACK_MAX >> 2)-2];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));\n  }\n  // Also test the global address 0 for integrity.\n  // We don't do this with ASan because ASan does its own checks for this.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');\n}\n\n\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\n\n\n\n// Endianness check (note: assumes compiler arch was little-endian)\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nfunction abortFnPtrError(ptr, sig) {\n\tabort(\"Invalid function pointer \" + ptr + \" called with signature '\" + sig + \"'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.\");\n}\n\n\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  checkStackCookie();\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\nvar memoryInitializer = null;\n\n\n\n\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return String.prototype.startsWith ?\n      filename.startsWith(dataURIPrefix) :\n      filename.indexOf(dataURIPrefix) === 0;\n}\n\n\n\n\nvar wasmBinaryFile = 'Diablo.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n\n    if (readBinary) {\n      return readBinary(wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // if we don't have the binary yet, and have the Fetch api, use that\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm(env) {\n\n  // prepare imports\n  var info = {\n    'env': env\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n   // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n  }\n\n  // Prefer streaming instantiation if available.\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming === 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        typeof fetch === 'function') {\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiatedSource, function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiatedSource);\n    }\n  }\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  instantiateAsync();\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\n// doesn't need to care that it is wasm or asm.js.\n\nModule['asm'] = function(global, env, providedBuffer) {\n  // memory was already allocated (so js could use the buffer)\n  env['memory'] = wasmMemory\n  ;\n  // import table\n  env['table'] = wasmTable = new WebAssembly.Table({\n    'initial': 19712,\n    'maximum': 19712,\n    'element': 'anyfunc'\n  });\n  // With the wasm backend __memory_base and __table_base and only needed for\n  // relocatable output.\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\n  // table starts at 0 by default (even in dynamic linking, for the main module)\n  env['__table_base'] = 0;\n\n  var exports = createWasm(env);\n  assert(exports, 'binaryen setup failed (no wasm support?)');\n  return exports;\n};\n\n// Globals used by JS i64 conversions\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = [function($0) { self.DApi.current_save_id($0); }];\n\nfunction _emscripten_asm_const_ii(code, a0) {\n  return ASM_CONSTS[code](a0);\n}\nfunction __api_close_keyboard(){ self.DApi.close_keyboard(); }\nfunction __api_open_keyboard(x0,y0,x1,y1,len){ self.DApi.open_keyboard(x0, y0, x1, y1, len); }\nfunction _api_create_sound(id,ptr,size){ self.DApi.create_sound(id, HEAPU8.slice(ptr, ptr + size)); }\nfunction _api_create_sound_float(id,ptr,samples,channels,rate){ self.DApi.create_sound_raw(id, HEAPF32.slice(ptr / 4, ptr / 4 + samples * channels), samples, channels, rate); }\nfunction _api_delete_sound(id){ self.DApi.delete_sound(id); }\nfunction _api_draw_begin(){ self.DApi.draw_begin(); }\nfunction _api_draw_belt(items){ self.DApi.draw_belt(HEAP32.subarray(items / 4, items / 4 + 8)); }\nfunction _api_draw_blit(x,y,w,h,ptr){ self.DApi.draw_blit(x, y, w, h, HEAPU8.subarray(ptr, ptr + w * h * 4)); }\nfunction _api_draw_clip_text(x0,y0,x1,y1){ self.DApi.draw_clip_text(x0, y0, x1, y1); }\nfunction _api_draw_end(){ self.DApi.draw_end(); }\nfunction _api_draw_text(x,y,ptr,color){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); self.DApi.draw_text(x, y, text, color); }\nfunction _api_duplicate_sound(id,srcId){ self.DApi.duplicate_sound(id, srcId); }\nfunction _api_exit_game(){ self.DApi.exit_game(); }\nfunction _api_play_sound(id,volume,pan,loop){ self.DApi.play_sound(id, volume, pan, loop); }\nfunction _api_set_cursor(x,y){ self.DApi.set_cursor(x, y); }\nfunction _api_set_volume(id,volume){ self.DApi.set_volume(id, volume); }\nfunction _api_stop_sound(id){ self.DApi.stop_sound(id); }\nfunction _api_use_websocket(use){ self.DApi.use_websocket(use); }\nfunction _api_websocket_closed(){ return self.DApi.websocket_closed(); }\nfunction _api_websocket_send(ptr,size){ self.DApi.websocket_send(HEAPU8.subarray(ptr, ptr + size)); }\nfunction _exit_error(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply(null, HEAPU8.subarray( err, end )); self.DApi.exit_error( text ); }\nfunction _get_file_contents(path,ptr,offset,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.get_file_contents(text, HEAPU8.subarray(ptr, ptr + size), offset); }\nfunction _get_file_size(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); return self.DApi.get_file_size(text); }\nfunction _put_file_contents(path,ptr,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end)); self.DApi.put_file_contents(text, HEAPU8.slice(ptr, ptr + size)); }\nfunction _remove_file(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.remove_file( text ); }\nfunction _show_alert(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply( null, HEAPU8.subarray( err, end ) ); self.alert( text ); }\nfunction _trace_pop(){ if (self.WASM_TRACE) { self.WASM_TRACE.pop(); } }\nfunction _trace_push(ptr){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); console.log(text); self.WASM_TRACE = self.WASM_TRACE || []; self.WASM_TRACE.push(text); }\n\n\n\n// STATICTOP = STATIC_BASE + 1876624;\n/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 1877632\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function demangle(func) {\n      warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n      return func;\n    }\n\n  function demangleAll(text) {\n      var regex =\n        /\\b__Z[\\w\\d_]+/g;\n      return text.replace(regex,\n        function(x) {\n          var y = demangle(x);\n          return x === y ? x : (y + ' [' + x + ']');\n        });\n    }\n\n  function jsStackTrace() {\n      var err = new Error();\n      if (!err.stack) {\n        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n        // so try that as a special-case.\n        try {\n          throw new Error(0);\n        } catch(e) {\n          err = e;\n        }\n        if (!err.stack) {\n          return '(no stack trace available)';\n        }\n      }\n      return err.stack.toString();\n    }\n\n  function stackTrace() {\n      var js = jsStackTrace();\n      if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n      return demangleAll(js);\n    }\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n  function ___cxa_allocate_exception(size) {\n      return _malloc(size);\n    }\n\n  \n  var ___exception_infos={};\n  \n  var ___exception_caught= [];\n  \n  function ___exception_addRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount++;\n    }\n  \n  function ___exception_deAdjust(adjusted) {\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\n      for (var key in ___exception_infos) {\n        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for\n        var adj = ___exception_infos[ptr].adjusted;\n        var len = adj.length;\n        for (var i = 0; i < len; i++) {\n          if (adj[i] === adjusted) {\n            return ptr;\n          }\n        }\n      }\n      return adjusted;\n    }function ___cxa_begin_catch(ptr) {\n      var info = ___exception_infos[ptr];\n      if (info && !info.caught) {\n        info.caught = true;\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\n      }\n      if (info) info.rethrown = false;\n      ___exception_caught.push(ptr);\n      ___exception_addRef(___exception_deAdjust(ptr));\n      return ptr;\n    }\n\n  \n  var ___exception_last=0;\n  \n  \n  function ___cxa_free_exception(ptr) {\n      try {\n        return _free(ptr);\n      } catch(e) {\n        err('exception during cxa_free_exception: ' + e);\n      }\n    }function ___exception_decRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      assert(info.refcount > 0);\n      info.refcount--;\n      // A rethrown exception can reach refcount 0; it must not be discarded\n      // Its next handler will clear the rethrown flag and addRef it, prior to\n      // final decRef and destruction here\n      if (info.refcount === 0 && !info.rethrown) {\n        if (info.destructor) {\n          Module['dynCall_vi'](info.destructor, ptr);\n        }\n        delete ___exception_infos[ptr];\n        ___cxa_free_exception(ptr);\n      }\n    }\n  \n   function ___cxa_end_catch() {\n      // Clear state flag.\n      _setThrew(0);\n      // Call destructor if one is registered then clear it.\n      var ptr = ___exception_caught.pop();\n      if (ptr) {\n        ___exception_decRef(___exception_deAdjust(ptr));\n        ___exception_last = 0; // XXX in decRef?\n      }\n    }\n\n  \n  \n  function ___resumeException(ptr) {\n      if (!___exception_last) { ___exception_last = ptr; }\n      throw ptr;\n    }function ___cxa_find_matching_catch() {\n      var thrown = ___exception_last;\n      if (!thrown) {\n        // just pass through the null ptr\n        return ((setTempRet0(0),0)|0);\n      }\n      var info = ___exception_infos[thrown];\n      var throwntype = info.type;\n      if (!throwntype) {\n        // just pass through the thrown ptr\n        return ((setTempRet0(0),thrown)|0);\n      }\n      var typeArray = Array.prototype.slice.call(arguments);\n  \n      var pointer = ___cxa_is_pointer_type(throwntype);\n      // can_catch receives a **, add indirection\n      var buffer = 1877600;\n      HEAP32[((buffer)>>2)]=thrown;\n      thrown = buffer;\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var i = 0; i < typeArray.length; i++) {\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\n          thrown = HEAP32[((thrown)>>2)]; // undo indirection\n          info.adjusted.push(thrown);\n          return ((setTempRet0(typeArray[i]),thrown)|0);\n        }\n      }\n      // Shouldn't happen unless we have bogus data in typeArray\n      // or encounter a type for which emscripten doesn't have suitable\n      // typeinfo defined. Best-efforts match just in case.\n      thrown = HEAP32[((thrown)>>2)]; // undo indirection\n      return ((setTempRet0(throwntype),thrown)|0);\n    }\n  Module[\"___cxa_find_matching_catch\"] = ___cxa_find_matching_catch;function ___cxa_find_matching_catch_2(a0,a1\n  ) {\n  return ___cxa_find_matching_catch(a0,a1);\n  }\n\n  function ___cxa_find_matching_catch_3(a0,a1,a2\n  ) {\n  return ___cxa_find_matching_catch(a0,a1,a2);\n  }\n\n\n  function ___cxa_get_exception_ptr(ptr) {\n      // TODO: use info.adjusted?\n      return ptr;\n    }\n\n  function ___cxa_pure_virtual() {\n      ABORT = true;\n  \n      throw 'Pure virtual function called!';\n    }\n\n  function ___cxa_throw(ptr, type, destructor) {\n      ___exception_infos[ptr] = {\n        ptr: ptr,\n        adjusted: [ptr],\n        type: type,\n        destructor: destructor,\n        refcount: 0,\n        caught: false,\n        rethrown: false\n      };\n      ___exception_last = ptr;\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\n      } else {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\n      }\n      throw ptr;\n    }\n\n  function ___cxa_uncaught_exceptions() {\n      return __ZSt18uncaught_exceptionv.uncaught_exceptions;\n    }\n\n  function ___gxx_personality_v0() {\n    }\n\n  function ___lock() {}\n\n\n  \n  \n  var PATH={splitPath:function(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function(parts, allowAboveRoot) {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function(path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function(path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function(path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function(path) {\n        return PATH.splitPath(path)[3];\n      },join:function() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function(l, r) {\n        return PATH.normalize(l + '/' + r);\n      }};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        assert(buffer);\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },varargs:0,get:function(varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function() {\n        var ret = UTF8ToString(SYSCALLS.get());\n        return ret;\n      },get64:function() {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function() {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      abort('it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM');\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      var fflush = Module[\"_fflush\"];\n      if (fflush) fflush(0);\n      var buffers = SYSCALLS.buffers;\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\n    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(stream, HEAPU8[ptr+j]);\n        }\n        ret += len;\n      }\n      return ret;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      abort('it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM');\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  function _abort() {\n      Module['abort']();\n    }\n\n  var _emscripten_asm_const_int=true;\n\n  function _emscripten_get_heap_size() {\n      return HEAP8.length;\n    }\n\n  function _exit(status) {\n      // void _exit(int status);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\n      exit(status);\n    }\n\n   \n\n  function _llvm_eh_typeid_for(type) {\n      return type;\n    }\n\n  function _llvm_trap() {\n      abort('trap!');\n    }\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n    }\n  \n   \n\n   \n\n   \n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else err('failed to set errno from JS');\n      return value;\n    }\n  \n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      var PAGE_MULTIPLE = 65536;\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\n      var oldSize = buffer.byteLength;\n      // native wasm support\n      // note that this is *not* threadsafe. multiple threads can call .grow(), and each\n      // presents a delta, so in theory we may over-allocate here (e.g. if two threads\n      // ask to grow from 256MB to 512MB, we get 2 requests to add +256MB, and may end\n      // up growing to 768MB (even though we may have been able to make do with 512MB).\n      // TODO: consider decreasing the step sizes in emscripten_resize_heap\n      try {\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\n        if (result !== (-1 | 0)) {\n          // success in native wasm memory growth, get the buffer from the memory\n          buffer = wasmMemory.buffer;\n          return true;\n        } else {\n          return false;\n        }\n      } catch(e) {\n        console.error('emscripten_realloc_buffer: Attempted to grow from ' + oldSize  + ' bytes to ' + size + ' bytes, but got error: ' + e);\n        return false;\n      }\n    }function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n  \n      var PAGE_MULTIPLE = 65536;\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\n  \n      if (requestedSize > LIMIT) {\n        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + LIMIT + ' bytes!');\n        return false;\n      }\n  \n      var MIN_TOTAL_MEMORY = 16777216;\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\n  \n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\n        if (newSize <= 536870912) {\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\n        } else {\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n        }\n  \n        if (newSize === oldSize) {\n          warnOnce('Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only ' + HEAP8.length);\n        }\n      }\n  \n  \n  \n      var start = Date.now();\n  \n      if (!emscripten_realloc_buffer(newSize)) {\n        err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');\n        return false;\n      }\n  \n      updateGlobalBufferViews();\n  \n  \n  \n      return true;\n    } \n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\nvar ASSERTIONS = true;\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\n\nfunction nullFunc_i(x) { abortFnPtrError(x, 'i'); }\nfunction nullFunc_ii(x) { abortFnPtrError(x, 'ii'); }\nfunction nullFunc_iidiiii(x) { abortFnPtrError(x, 'iidiiii'); }\nfunction nullFunc_iii(x) { abortFnPtrError(x, 'iii'); }\nfunction nullFunc_iiii(x) { abortFnPtrError(x, 'iiii'); }\nfunction nullFunc_iiiii(x) { abortFnPtrError(x, 'iiiii'); }\nfunction nullFunc_iiiiii(x) { abortFnPtrError(x, 'iiiiii'); }\nfunction nullFunc_ji(x) { abortFnPtrError(x, 'ji'); }\nfunction nullFunc_jiji(x) { abortFnPtrError(x, 'jiji'); }\nfunction nullFunc_v(x) { abortFnPtrError(x, 'v'); }\nfunction nullFunc_vi(x) { abortFnPtrError(x, 'vi'); }\nfunction nullFunc_vii(x) { abortFnPtrError(x, 'vii'); }\nfunction nullFunc_viii(x) { abortFnPtrError(x, 'viii'); }\nfunction nullFunc_viiii(x) { abortFnPtrError(x, 'viiii'); }\nfunction nullFunc_viiiii(x) { abortFnPtrError(x, 'viiiii'); }\nfunction nullFunc_viiiiii(x) { abortFnPtrError(x, 'viiiiii'); }\nfunction nullFunc_viiiiiii(x) { abortFnPtrError(x, 'viiiiiii'); }\nfunction nullFunc_viiiiiiiii(x) { abortFnPtrError(x, 'viiiiiiiii'); }\nfunction nullFunc_viiiiiiiiii(x) { abortFnPtrError(x, 'viiiiiiiiii'); }\nfunction nullFunc_viij(x) { abortFnPtrError(x, 'viij'); }\nfunction nullFunc_viji(x) { abortFnPtrError(x, 'viji'); }\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ji(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ji(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    dynCall_v(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viij(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viij(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viji(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viji(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nvar asmGlobalArg = {};\n\nvar asmLibraryArg = {\n  \"abort\": abort,\n  \"setTempRet0\": setTempRet0,\n  \"getTempRet0\": getTempRet0,\n  \"abortStackOverflow\": abortStackOverflow,\n  \"nullFunc_i\": nullFunc_i,\n  \"nullFunc_ii\": nullFunc_ii,\n  \"nullFunc_iidiiii\": nullFunc_iidiiii,\n  \"nullFunc_iii\": nullFunc_iii,\n  \"nullFunc_iiii\": nullFunc_iiii,\n  \"nullFunc_iiiii\": nullFunc_iiiii,\n  \"nullFunc_iiiiii\": nullFunc_iiiiii,\n  \"nullFunc_ji\": nullFunc_ji,\n  \"nullFunc_jiji\": nullFunc_jiji,\n  \"nullFunc_v\": nullFunc_v,\n  \"nullFunc_vi\": nullFunc_vi,\n  \"nullFunc_vii\": nullFunc_vii,\n  \"nullFunc_viii\": nullFunc_viii,\n  \"nullFunc_viiii\": nullFunc_viiii,\n  \"nullFunc_viiiii\": nullFunc_viiiii,\n  \"nullFunc_viiiiii\": nullFunc_viiiiii,\n  \"nullFunc_viiiiiii\": nullFunc_viiiiiii,\n  \"nullFunc_viiiiiiiii\": nullFunc_viiiiiiiii,\n  \"nullFunc_viiiiiiiiii\": nullFunc_viiiiiiiiii,\n  \"nullFunc_viij\": nullFunc_viij,\n  \"nullFunc_viji\": nullFunc_viji,\n  \"invoke_i\": invoke_i,\n  \"invoke_ii\": invoke_ii,\n  \"invoke_iii\": invoke_iii,\n  \"invoke_iiii\": invoke_iiii,\n  \"invoke_iiiii\": invoke_iiiii,\n  \"invoke_iiiiii\": invoke_iiiiii,\n  \"invoke_ji\": invoke_ji,\n  \"invoke_v\": invoke_v,\n  \"invoke_vi\": invoke_vi,\n  \"invoke_vii\": invoke_vii,\n  \"invoke_viii\": invoke_viii,\n  \"invoke_viiii\": invoke_viiii,\n  \"invoke_viiiii\": invoke_viiiii,\n  \"invoke_viiiiiii\": invoke_viiiiiii,\n  \"invoke_viij\": invoke_viij,\n  \"invoke_viji\": invoke_viji,\n  \"___assert_fail\": ___assert_fail,\n  \"___cxa_allocate_exception\": ___cxa_allocate_exception,\n  \"___cxa_begin_catch\": ___cxa_begin_catch,\n  \"___cxa_end_catch\": ___cxa_end_catch,\n  \"___cxa_find_matching_catch\": ___cxa_find_matching_catch,\n  \"___cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n  \"___cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n  \"___cxa_free_exception\": ___cxa_free_exception,\n  \"___cxa_get_exception_ptr\": ___cxa_get_exception_ptr,\n  \"___cxa_pure_virtual\": ___cxa_pure_virtual,\n  \"___cxa_throw\": ___cxa_throw,\n  \"___cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\n  \"___exception_addRef\": ___exception_addRef,\n  \"___exception_deAdjust\": ___exception_deAdjust,\n  \"___exception_decRef\": ___exception_decRef,\n  \"___gxx_personality_v0\": ___gxx_personality_v0,\n  \"___lock\": ___lock,\n  \"___resumeException\": ___resumeException,\n  \"___setErrNo\": ___setErrNo,\n  \"___syscall140\": ___syscall140,\n  \"___syscall146\": ___syscall146,\n  \"___syscall54\": ___syscall54,\n  \"___syscall6\": ___syscall6,\n  \"___unlock\": ___unlock,\n  \"__api_close_keyboard\": __api_close_keyboard,\n  \"__api_open_keyboard\": __api_open_keyboard,\n  \"_abort\": _abort,\n  \"_api_create_sound\": _api_create_sound,\n  \"_api_create_sound_float\": _api_create_sound_float,\n  \"_api_delete_sound\": _api_delete_sound,\n  \"_api_draw_begin\": _api_draw_begin,\n  \"_api_draw_belt\": _api_draw_belt,\n  \"_api_draw_blit\": _api_draw_blit,\n  \"_api_draw_clip_text\": _api_draw_clip_text,\n  \"_api_draw_end\": _api_draw_end,\n  \"_api_draw_text\": _api_draw_text,\n  \"_api_duplicate_sound\": _api_duplicate_sound,\n  \"_api_exit_game\": _api_exit_game,\n  \"_api_play_sound\": _api_play_sound,\n  \"_api_set_cursor\": _api_set_cursor,\n  \"_api_set_volume\": _api_set_volume,\n  \"_api_stop_sound\": _api_stop_sound,\n  \"_api_use_websocket\": _api_use_websocket,\n  \"_api_websocket_closed\": _api_websocket_closed,\n  \"_api_websocket_send\": _api_websocket_send,\n  \"_emscripten_asm_const_ii\": _emscripten_asm_const_ii,\n  \"_emscripten_get_heap_size\": _emscripten_get_heap_size,\n  \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"_emscripten_resize_heap\": _emscripten_resize_heap,\n  \"_exit\": _exit,\n  \"_exit_error\": _exit_error,\n  \"_get_file_contents\": _get_file_contents,\n  \"_get_file_size\": _get_file_size,\n  \"_llvm_eh_typeid_for\": _llvm_eh_typeid_for,\n  \"_llvm_trap\": _llvm_trap,\n  \"_put_file_contents\": _put_file_contents,\n  \"_remove_file\": _remove_file,\n  \"_show_alert\": _show_alert,\n  \"_time\": _time,\n  \"_trace_pop\": _trace_pop,\n  \"_trace_push\": _trace_push,\n  \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\n  \"demangle\": demangle,\n  \"demangleAll\": demangleAll,\n  \"emscripten_realloc_buffer\": emscripten_realloc_buffer,\n  \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\n  \"jsStackTrace\": jsStackTrace,\n  \"stackTrace\": stackTrace,\n  \"tempDoublePtr\": tempDoublePtr,\n  \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR\n};\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\nModule[\"asm\"] = asm;\nvar _DApi_AllocPacket = Module[\"_DApi_AllocPacket\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_AllocPacket\"].apply(null, arguments)\n};\n\nvar _DApi_Char = Module[\"_DApi_Char\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_Char\"].apply(null, arguments)\n};\n\nvar _DApi_Init = Module[\"_DApi_Init\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_Init\"].apply(null, arguments)\n};\n\nvar _DApi_Key = Module[\"_DApi_Key\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_Key\"].apply(null, arguments)\n};\n\nvar _DApi_Mouse = Module[\"_DApi_Mouse\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_Mouse\"].apply(null, arguments)\n};\n\nvar _DApi_Render = Module[\"_DApi_Render\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_Render\"].apply(null, arguments)\n};\n\nvar _DApi_SyncText = Module[\"_DApi_SyncText\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_SyncText\"].apply(null, arguments)\n};\n\nvar _DApi_SyncTextPtr = Module[\"_DApi_SyncTextPtr\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_DApi_SyncTextPtr\"].apply(null, arguments)\n};\n\nvar _SNet_InitWebsocket = Module[\"_SNet_InitWebsocket\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_SNet_InitWebsocket\"].apply(null, arguments)\n};\n\nvar _SNet_WebsocketStatus = Module[\"_SNet_WebsocketStatus\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_SNet_WebsocketStatus\"].apply(null, arguments)\n};\n\nvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\n};\n\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\n};\n\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\n};\n\nvar ___em_js___api_close_keyboard = Module[\"___em_js___api_close_keyboard\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js___api_close_keyboard\"].apply(null, arguments)\n};\n\nvar ___em_js___api_open_keyboard = Module[\"___em_js___api_open_keyboard\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js___api_open_keyboard\"].apply(null, arguments)\n};\n\nvar ___em_js__api_create_sound = Module[\"___em_js__api_create_sound\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_create_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_create_sound_float = Module[\"___em_js__api_create_sound_float\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_create_sound_float\"].apply(null, arguments)\n};\n\nvar ___em_js__api_delete_sound = Module[\"___em_js__api_delete_sound\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_delete_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_begin = Module[\"___em_js__api_draw_begin\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_begin\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_belt = Module[\"___em_js__api_draw_belt\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_belt\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_blit = Module[\"___em_js__api_draw_blit\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_blit\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_clip_text = Module[\"___em_js__api_draw_clip_text\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_clip_text\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_end = Module[\"___em_js__api_draw_end\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_end\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_text = Module[\"___em_js__api_draw_text\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_draw_text\"].apply(null, arguments)\n};\n\nvar ___em_js__api_duplicate_sound = Module[\"___em_js__api_duplicate_sound\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_duplicate_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_exit_game = Module[\"___em_js__api_exit_game\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_exit_game\"].apply(null, arguments)\n};\n\nvar ___em_js__api_play_sound = Module[\"___em_js__api_play_sound\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_play_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_set_cursor = Module[\"___em_js__api_set_cursor\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_set_cursor\"].apply(null, arguments)\n};\n\nvar ___em_js__api_set_volume = Module[\"___em_js__api_set_volume\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_set_volume\"].apply(null, arguments)\n};\n\nvar ___em_js__api_stop_sound = Module[\"___em_js__api_stop_sound\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_stop_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_use_websocket = Module[\"___em_js__api_use_websocket\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_use_websocket\"].apply(null, arguments)\n};\n\nvar ___em_js__api_websocket_closed = Module[\"___em_js__api_websocket_closed\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_websocket_closed\"].apply(null, arguments)\n};\n\nvar ___em_js__api_websocket_send = Module[\"___em_js__api_websocket_send\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__api_websocket_send\"].apply(null, arguments)\n};\n\nvar ___em_js__exit_error = Module[\"___em_js__exit_error\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__exit_error\"].apply(null, arguments)\n};\n\nvar ___em_js__get_file_contents = Module[\"___em_js__get_file_contents\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__get_file_contents\"].apply(null, arguments)\n};\n\nvar ___em_js__get_file_size = Module[\"___em_js__get_file_size\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__get_file_size\"].apply(null, arguments)\n};\n\nvar ___em_js__put_file_contents = Module[\"___em_js__put_file_contents\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__put_file_contents\"].apply(null, arguments)\n};\n\nvar ___em_js__remove_file = Module[\"___em_js__remove_file\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__remove_file\"].apply(null, arguments)\n};\n\nvar ___em_js__show_alert = Module[\"___em_js__show_alert\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__show_alert\"].apply(null, arguments)\n};\n\nvar ___em_js__trace_pop = Module[\"___em_js__trace_pop\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__trace_pop\"].apply(null, arguments)\n};\n\nvar ___em_js__trace_push = Module[\"___em_js__trace_push\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"___em_js__trace_push\"].apply(null, arguments)\n};\n\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\n};\n\nvar _free = Module[\"_free\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_free\"].apply(null, arguments)\n};\n\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments)\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments)\n};\n\nvar _memcpy = Module[\"_memcpy\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\n};\n\nvar _memmove = Module[\"_memmove\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_memmove\"].apply(null, arguments)\n};\n\nvar _memset = Module[\"_memset\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments)\n};\n\nvar _sbrk = Module[\"_sbrk\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_sbrk\"].apply(null, arguments)\n};\n\nvar _setThrew = Module[\"_setThrew\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"_setThrew\"].apply(null, arguments)\n};\n\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\n};\n\nvar globalCtors = Module[\"globalCtors\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\n};\n\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\n};\n\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\n};\n\nvar stackSave = Module[\"stackSave\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments)\n};\n\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\n};\n\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\n};\n\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\n};\n\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_ji\"].apply(null, arguments)\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\n};\n\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\n};\n\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\n};\n\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\n};\n\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\n};\n\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viij = Module[\"dynCall_viij\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viij\"].apply(null, arguments)\n};\n\nvar dynCall_viji = Module[\"dynCall_viji\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return Module[\"asm\"][\"dynCall_viji\"].apply(null, arguments)\n};\n;\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayFromString\")) Module[\"intArrayFromString\"] = function() { abort(\"'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"intArrayToString\")) Module[\"intArrayToString\"] = function() { abort(\"'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ccall\")) Module[\"ccall\"] = function() { abort(\"'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"cwrap\")) Module[\"cwrap\"] = function() { abort(\"'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setValue\")) Module[\"setValue\"] = function() { abort(\"'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getValue\")) Module[\"getValue\"] = function() { abort(\"'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"allocate\")) Module[\"allocate\"] = function() { abort(\"'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getMemory\")) Module[\"getMemory\"] = function() { abort(\"'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"AsciiToString\")) Module[\"AsciiToString\"] = function() { abort(\"'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToAscii\")) Module[\"stringToAscii\"] = function() { abort(\"'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ArrayToString\")) Module[\"UTF8ArrayToString\"] = function() { abort(\"'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF8ToString\")) Module[\"UTF8ToString\"] = function() { abort(\"'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8Array\")) Module[\"stringToUTF8Array\"] = function() { abort(\"'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8\")) Module[\"stringToUTF8\"] = function() { abort(\"'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF8\")) Module[\"lengthBytesUTF8\"] = function() { abort(\"'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF16ToString\")) Module[\"UTF16ToString\"] = function() { abort(\"'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF16\")) Module[\"stringToUTF16\"] = function() { abort(\"'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF16\")) Module[\"lengthBytesUTF16\"] = function() { abort(\"'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"UTF32ToString\")) Module[\"UTF32ToString\"] = function() { abort(\"'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF32\")) Module[\"stringToUTF32\"] = function() { abort(\"'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF32\")) Module[\"lengthBytesUTF32\"] = function() { abort(\"'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8\")) Module[\"allocateUTF8\"] = function() { abort(\"'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = function() { abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreRun\")) Module[\"addOnPreRun\"] = function() { abort(\"'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnInit\")) Module[\"addOnInit\"] = function() { abort(\"'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPreMain\")) Module[\"addOnPreMain\"] = function() { abort(\"'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnExit\")) Module[\"addOnExit\"] = function() { abort(\"'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addOnPostRun\")) Module[\"addOnPostRun\"] = function() { abort(\"'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeStringToMemory\")) Module[\"writeStringToMemory\"] = function() { abort(\"'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeArrayToMemory\")) Module[\"writeArrayToMemory\"] = function() { abort(\"'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeAsciiToMemory\")) Module[\"writeAsciiToMemory\"] = function() { abort(\"'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addRunDependency\")) Module[\"addRunDependency\"] = function() { abort(\"'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"removeRunDependency\")) Module[\"removeRunDependency\"] = function() { abort(\"'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"ENV\")) Module[\"ENV\"] = function() { abort(\"'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS\")) Module[\"FS\"] = function() { abort(\"'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createFolder\")) Module[\"FS_createFolder\"] = function() { abort(\"'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPath\")) Module[\"FS_createPath\"] = function() { abort(\"'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDataFile\")) Module[\"FS_createDataFile\"] = function() { abort(\"'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createPreloadedFile\")) Module[\"FS_createPreloadedFile\"] = function() { abort(\"'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLazyFile\")) Module[\"FS_createLazyFile\"] = function() { abort(\"'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createLink\")) Module[\"FS_createLink\"] = function() { abort(\"'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_createDevice\")) Module[\"FS_createDevice\"] = function() { abort(\"'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"FS_unlink\")) Module[\"FS_unlink\"] = function() { abort(\"'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"GL\")) Module[\"GL\"] = function() { abort(\"'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"dynamicAlloc\")) Module[\"dynamicAlloc\"] = function() { abort(\"'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"loadDynamicLibrary\")) Module[\"loadDynamicLibrary\"] = function() { abort(\"'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"loadWebAssemblyModule\")) Module[\"loadWebAssemblyModule\"] = function() { abort(\"'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getLEB\")) Module[\"getLEB\"] = function() { abort(\"'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getFunctionTables\")) Module[\"getFunctionTables\"] = function() { abort(\"'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"alignFunctionTables\")) Module[\"alignFunctionTables\"] = function() { abort(\"'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"registerFunctions\")) Module[\"registerFunctions\"] = function() { abort(\"'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"addFunction\")) Module[\"addFunction\"] = function() { abort(\"'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"removeFunction\")) Module[\"removeFunction\"] = function() { abort(\"'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = function() { abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"prettyPrint\")) Module[\"prettyPrint\"] = function() { abort(\"'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"makeBigInt\")) Module[\"makeBigInt\"] = function() { abort(\"'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = function() { abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getCompilerSetting\")) Module[\"getCompilerSetting\"] = function() { abort(\"'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackSave\")) Module[\"stackSave\"] = function() { abort(\"'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackRestore\")) Module[\"stackRestore\"] = function() { abort(\"'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"stackAlloc\")) Module[\"stackAlloc\"] = function() { abort(\"'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"establishStackSpace\")) Module[\"establishStackSpace\"] = function() { abort(\"'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"print\")) Module[\"print\"] = function() { abort(\"'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"printErr\")) Module[\"printErr\"] = function() { abort(\"'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"getTempRet0\")) Module[\"getTempRet0\"] = function() { abort(\"'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"setTempRet0\")) Module[\"setTempRet0\"] = function() { abort(\"'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"callMain\")) Module[\"callMain\"] = function() { abort(\"'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"Pointer_stringify\")) Module[\"Pointer_stringify\"] = function() { abort(\"'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"warnOnce\")) Module[\"warnOnce\"] = function() { abort(\"'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"writeStackCookie\")) Module[\"writeStackCookie\"] = function() { abort(\"'writeStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"checkStackCookie\")) Module[\"checkStackCookie\"] = function() { abort(\"'checkStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Object.getOwnPropertyDescriptor(Module, \"abortStackOverflow\")) Module[\"abortStackOverflow\"] = function() { abort(\"'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };if (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_NORMAL\")) Object.defineProperty(Module, \"ALLOC_NORMAL\", { get: function() { abort(\"'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_STACK\")) Object.defineProperty(Module, \"ALLOC_STACK\", { get: function() { abort(\"'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_DYNAMIC\")) Object.defineProperty(Module, \"ALLOC_DYNAMIC\", { get: function() { abort(\"'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_NONE\")) Object.defineProperty(Module, \"ALLOC_NONE\", { get: function() { abort(\"'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Object.getOwnPropertyDescriptor(Module, \"calledRun\")) Object.defineProperty(Module, \"calledRun\", { get: function() { abort(\"'calledRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") } });\n\n\n\nvar calledRun;\n\n// Modularize mode returns a function, which can be called to\n// create instances. The instances provide a then() method,\n// must like a Promise, that receives a callback. The callback\n// is called when the module is ready to run, with the module\n// as a parameter. (Like a Promise, it also returns the module\n// so you can use the output of .then(..)).\nModule['then'] = function(func) {\n  // We may already be ready to run code at this time. if\n  // so, just queue a call to the callback.\n  if (calledRun) {\n    func(Module);\n  } else {\n    // we are not ready to call then() yet. we must call it\n    // at the same time we would call onRuntimeInitialized.\n    var old = Module['onRuntimeInitialized'];\n    Module['onRuntimeInitialized'] = function() {\n      if (old) old();\n      func(Module);\n    };\n  }\n  return Module;\n};\n\n/**\n * @constructor\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n}\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = run;\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var print = out;\n  var printErr = err;\n  var has = false;\n  out = err = function(x) {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    var flush = flush_NO_FILESYSTEM;\n    if (flush) flush(0);\n  } catch(e) {}\n  out = print;\n  err = printErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)');\n  }\n}\n\nfunction exit(status, implicit) {\n  checkUnflushedContent();\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && Module['noExitRuntime'] && status === 0) {\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    // if exit() was called, we may warn the user if the runtime isn't actually being shut down\n    if (!implicit) {\n      err('exit(' + status + ') called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)');\n    }\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  quit_(status, new ExitStatus(status));\n}\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what += '';\n  out(what);\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = abort;\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n\n  Module[\"noExitRuntime\"] = true;\n\nrun();\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\nModule['ready'] = new Promise(function (resolve, reject) {\n  delete Module['then']\n  Module['onAbort'] = function (what) {\n    reject(what)\n  }\n  addOnPostRun(function () {\n    resolve(Module)\n  })\n});\n\n\n\n  return Diablo\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = Diablo;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return Diablo; });\n    else if (typeof exports === 'object')\n      exports[\"Diablo\"] = Diablo;\n    \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"static/media/DiabloSpawn.a2a7e790.wasm\";","\nvar DiabloSpawn = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(DiabloSpawn) {\n  DiabloSpawn = DiabloSpawn || {};\n\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof DiabloSpawn !== 'undefined' ? DiabloSpawn : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = function(status, toThrow) {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_HAS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n// A web environment like Electron.js can have Node enabled, so we must\n// distinguish between Node-enabled environments and Node environments per se.\n// This will allow the former to do things like mount NODEFS.\n// Extended check using process.versions fixes issue #8816.\n// (Also makes redundant the original check that 'require' is a function.)\nENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\nENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  scriptDirectory = __dirname + '/';\n\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  var nodeFS;\n  var nodePath;\n\n  read_ = function shell_read(filename, binary) {\n    var ret;\n      if (!nodeFS) nodeFS = require('fs');\n      if (!nodePath) nodePath = require('path');\n      filename = nodePath['normalize'](filename);\n      ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  readBinary = function readBinary(filename) {\n    var ret = read_(filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  process['on']('unhandledRejection', abort);\n\n  quit_ = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    var data;\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    quit_ = function(status) {\n      quit(status);\n    };\n  }\n\n  if (typeof print !== 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console === 'undefined') console = {};\n    console.log = print;\n    console.warn = console.error = typeof printErr !== 'undefined' ? printErr : print;\n  }\n} else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  read_ = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(xhr.response);\n    };\n  }\n\n  readAsync = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  setWindowTitle = function(title) { document.title = title };\n} else\n{\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif (Module['arguments']) arguments_ = Module['arguments'];\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n// TODO remove when SDL2 is fixed (also see above)\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\n\nfunction dynamicAlloc(size) {\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  if (end > _emscripten_get_heap_size()) {\n    abort();\n  }\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = parseInt(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n    }\n};\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Wraps a JS function as a wasm function with a given signature.\n// In the future, we may get a WebAssembly.Function constructor. Until then,\n// we create a wasm module that takes the JS function as an import with a given\n// signature, and re-exports that as a wasm function.\nfunction convertJsFunctionToWasm(func, sig) {\n\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    e: {\n      f: func\n    }\n  });\n  var wrappedFunc = instance.exports.f;\n  return wrappedFunc;\n}\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  var table = wasmTable;\n  var ret = table.length;\n\n  // Grow the table\n  try {\n    table.grow(1);\n  } catch (err) {\n    if (!err instanceof RangeError) {\n      throw err;\n    }\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\n  }\n\n  // Insert new element\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    table.set(ret, func);\n  } catch (err) {\n    if (!err instanceof TypeError) {\n      throw err;\n    }\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    table.set(ret, wrapped);\n  }\n\n  return ret;\n}\n\nfunction removeFunctionWasm(index) {\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n};\n\nvar getTempRet0 = function() {\n  return tempRet0;\n};\n\n\nvar Runtime = {\n};\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nvar wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n\n\nif (typeof WebAssembly !== 'object') {\n  err('no native wasm support detected');\n}\n\n\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// Potentially used for direct table calls.\nvar wasmTable;\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n  argTypes = argTypes || [];\n  // When the function takes numbers and returns a number, we can just return\n  // the original function\n  var numericArgs = argTypes.every(function(type){ return type === 'number'});\n  var numericRet = returnType !== 'string';\n  if (numericRet && numericArgs && !opts) {\n    return getCFunc(ident);\n  }\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\n}\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = u8Array[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr) {\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  HEAP8.set(array, buffer);\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 1850624,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 7093504,\n    DYNAMIC_BASE = 7093504,\n    DYNAMICTOP_PTR = 1850592;\n\n\n\n\nvar TOTAL_STACK = 5242880;\n\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;\n\n\n\n\n\n\n\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n  }\n\n\nif (wasmMemory) {\n  buffer = wasmMemory.buffer;\n}\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['TOTAL_MEMORY'].\nINITIAL_TOTAL_MEMORY = buffer.byteLength;\nupdateGlobalBufferViews();\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n\n\n\n\n\n\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  runtimeExited = true;\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\nvar memoryInitializer = null;\n\n\n\n\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return String.prototype.startsWith ?\n      filename.startsWith(dataURIPrefix) :\n      filename.indexOf(dataURIPrefix) === 0;\n}\n\n\n\n\nvar wasmBinaryFile = 'DiabloSpawn.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n\n    if (readBinary) {\n      return readBinary(wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // if we don't have the binary yet, and have the Fetch api, use that\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm(env) {\n\n  // prepare imports\n  var info = {\n    'env': env\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n   // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n  }\n\n  // Prefer streaming instantiation if available.\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming === 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        typeof fetch === 'function') {\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiatedSource, function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiatedSource);\n    }\n  }\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  instantiateAsync();\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\n// doesn't need to care that it is wasm or asm.js.\n\nModule['asm'] = function(global, env, providedBuffer) {\n  // memory was already allocated (so js could use the buffer)\n  env['memory'] = wasmMemory\n  ;\n  // import table\n  env['table'] = wasmTable = new WebAssembly.Table({\n    'initial': 1116,\n    'maximum': 1116,\n    'element': 'anyfunc'\n  });\n  // With the wasm backend __memory_base and __table_base and only needed for\n  // relocatable output.\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\n  // table starts at 0 by default (even in dynamic linking, for the main module)\n  env['__table_base'] = 0;\n\n  var exports = createWasm(env);\n  return exports;\n};\n\n// Globals used by JS i64 conversions\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = [function($0) { self.DApi.current_save_id($0); }];\n\nfunction _emscripten_asm_const_ii(code, a0) {\n  return ASM_CONSTS[code](a0);\n}\nfunction __api_close_keyboard(){ self.DApi.close_keyboard(); }\nfunction __api_open_keyboard(x0,y0,x1,y1,len){ self.DApi.open_keyboard(x0, y0, x1, y1, len); }\nfunction _api_create_sound(id,ptr,size){ self.DApi.create_sound(id, HEAPU8.slice(ptr, ptr + size)); }\nfunction _api_create_sound_float(id,ptr,samples,channels,rate){ self.DApi.create_sound_raw(id, HEAPF32.slice(ptr / 4, ptr / 4 + samples * channels), samples, channels, rate); }\nfunction _api_delete_sound(id){ self.DApi.delete_sound(id); }\nfunction _api_draw_begin(){ self.DApi.draw_begin(); }\nfunction _api_draw_belt(items){ self.DApi.draw_belt(HEAP32.subarray(items / 4, items / 4 + 8)); }\nfunction _api_draw_blit(x,y,w,h,ptr){ self.DApi.draw_blit(x, y, w, h, HEAPU8.subarray(ptr, ptr + w * h * 4)); }\nfunction _api_draw_clip_text(x0,y0,x1,y1){ self.DApi.draw_clip_text(x0, y0, x1, y1); }\nfunction _api_draw_end(){ self.DApi.draw_end(); }\nfunction _api_draw_text(x,y,ptr,color){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); self.DApi.draw_text(x, y, text, color); }\nfunction _api_duplicate_sound(id,srcId){ self.DApi.duplicate_sound(id, srcId); }\nfunction _api_exit_game(){ self.DApi.exit_game(); }\nfunction _api_play_sound(id,volume,pan,loop){ self.DApi.play_sound(id, volume, pan, loop); }\nfunction _api_set_cursor(x,y){ self.DApi.set_cursor(x, y); }\nfunction _api_set_volume(id,volume){ self.DApi.set_volume(id, volume); }\nfunction _api_stop_sound(id){ self.DApi.stop_sound(id); }\nfunction _api_websocket_closed(){ return self.DApi.websocket_closed(); }\nfunction _api_websocket_send(ptr,size){ self.DApi.websocket_send(HEAPU8.subarray(ptr, ptr + size)); }\nfunction _exit_error(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply(null, HEAPU8.subarray( err, end )); self.DApi.exit_error( text ); }\nfunction _get_file_contents(path,ptr,offset,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.get_file_contents(text, HEAPU8.subarray(ptr, ptr + size), offset); }\nfunction _get_file_size(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); return self.DApi.get_file_size(text); }\nfunction _put_file_contents(path,ptr,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end)); self.DApi.put_file_contents(text, HEAPU8.slice(ptr, ptr + size)); }\nfunction _remove_file(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.remove_file( text ); }\nfunction _show_alert(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply( null, HEAPU8.subarray( err, end ) ); self.alert( text ); }\nfunction _trace_pop(){ if (self.WASM_TRACE) { self.WASM_TRACE.pop(); } }\nfunction _trace_push(ptr){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); console.log(text); self.WASM_TRACE = self.WASM_TRACE || []; self.WASM_TRACE.push(text); }\n\n\n\n// STATICTOP = STATIC_BASE + 1849600;\n/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 1850608\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function demangle(func) {\n      return func;\n    }\n\n  function demangleAll(text) {\n      var regex =\n        /\\b__Z[\\w\\d_]+/g;\n      return text.replace(regex,\n        function(x) {\n          var y = demangle(x);\n          return x === y ? x : (y + ' [' + x + ']');\n        });\n    }\n\n  function jsStackTrace() {\n      var err = new Error();\n      if (!err.stack) {\n        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n        // so try that as a special-case.\n        try {\n          throw new Error(0);\n        } catch(e) {\n          err = e;\n        }\n        if (!err.stack) {\n          return '(no stack trace available)';\n        }\n      }\n      return err.stack.toString();\n    }\n\n  function stackTrace() {\n      var js = jsStackTrace();\n      if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n      return demangleAll(js);\n    }\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n  function ___cxa_allocate_exception(size) {\n      return _malloc(size);\n    }\n\n  \n  var ___exception_infos={};\n  \n  var ___exception_caught= [];\n  \n  function ___exception_addRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount++;\n    }\n  \n  function ___exception_deAdjust(adjusted) {\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\n      for (var key in ___exception_infos) {\n        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for\n        var adj = ___exception_infos[ptr].adjusted;\n        var len = adj.length;\n        for (var i = 0; i < len; i++) {\n          if (adj[i] === adjusted) {\n            return ptr;\n          }\n        }\n      }\n      return adjusted;\n    }function ___cxa_begin_catch(ptr) {\n      var info = ___exception_infos[ptr];\n      if (info && !info.caught) {\n        info.caught = true;\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\n      }\n      if (info) info.rethrown = false;\n      ___exception_caught.push(ptr);\n      ___exception_addRef(___exception_deAdjust(ptr));\n      return ptr;\n    }\n\n  \n  var ___exception_last=0;\n  \n  \n  function ___cxa_free_exception(ptr) {\n      try {\n        return _free(ptr);\n      } catch(e) {\n      }\n    }function ___exception_decRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount--;\n      // A rethrown exception can reach refcount 0; it must not be discarded\n      // Its next handler will clear the rethrown flag and addRef it, prior to\n      // final decRef and destruction here\n      if (info.refcount === 0 && !info.rethrown) {\n        if (info.destructor) {\n          Module['dynCall_vi'](info.destructor, ptr);\n        }\n        delete ___exception_infos[ptr];\n        ___cxa_free_exception(ptr);\n      }\n    }\n  \n   function ___cxa_end_catch() {\n      // Clear state flag.\n      _setThrew(0);\n      // Call destructor if one is registered then clear it.\n      var ptr = ___exception_caught.pop();\n      if (ptr) {\n        ___exception_decRef(___exception_deAdjust(ptr));\n        ___exception_last = 0; // XXX in decRef?\n      }\n    }\n\n  \n  \n  function ___resumeException(ptr) {\n      if (!___exception_last) { ___exception_last = ptr; }\n      throw ptr;\n    }function ___cxa_find_matching_catch() {\n      var thrown = ___exception_last;\n      if (!thrown) {\n        // just pass through the null ptr\n        return ((setTempRet0(0),0)|0);\n      }\n      var info = ___exception_infos[thrown];\n      var throwntype = info.type;\n      if (!throwntype) {\n        // just pass through the thrown ptr\n        return ((setTempRet0(0),thrown)|0);\n      }\n      var typeArray = Array.prototype.slice.call(arguments);\n  \n      var pointer = ___cxa_is_pointer_type(throwntype);\n      // can_catch receives a **, add indirection\n      var buffer = 1850576;\n      HEAP32[((buffer)>>2)]=thrown;\n      thrown = buffer;\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var i = 0; i < typeArray.length; i++) {\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\n          thrown = HEAP32[((thrown)>>2)]; // undo indirection\n          info.adjusted.push(thrown);\n          return ((setTempRet0(typeArray[i]),thrown)|0);\n        }\n      }\n      // Shouldn't happen unless we have bogus data in typeArray\n      // or encounter a type for which emscripten doesn't have suitable\n      // typeinfo defined. Best-efforts match just in case.\n      thrown = HEAP32[((thrown)>>2)]; // undo indirection\n      return ((setTempRet0(throwntype),thrown)|0);\n    }\n  Module[\"___cxa_find_matching_catch\"] = ___cxa_find_matching_catch;function ___cxa_find_matching_catch_2(a0,a1\n  ) {\n  return ___cxa_find_matching_catch(a0,a1);\n  }\n\n  function ___cxa_find_matching_catch_3(a0,a1,a2\n  ) {\n  return ___cxa_find_matching_catch(a0,a1,a2);\n  }\n\n\n  function ___cxa_get_exception_ptr(ptr) {\n      // TODO: use info.adjusted?\n      return ptr;\n    }\n\n  function ___cxa_pure_virtual() {\n      ABORT = true;\n  \n      throw 'Pure virtual function called!';\n    }\n\n  function ___cxa_throw(ptr, type, destructor) {\n      ___exception_infos[ptr] = {\n        ptr: ptr,\n        adjusted: [ptr],\n        type: type,\n        destructor: destructor,\n        refcount: 0,\n        caught: false,\n        rethrown: false\n      };\n      ___exception_last = ptr;\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\n      } else {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\n      }\n      throw ptr;\n    }\n\n  function ___cxa_uncaught_exceptions() {\n      return __ZSt18uncaught_exceptionv.uncaught_exceptions;\n    }\n\n  function ___gxx_personality_v0() {\n    }\n\n  function ___lock() {}\n\n\n  \n  \n  var PATH={splitPath:function(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function(parts, allowAboveRoot) {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function(path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function(path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function(path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function(path) {\n        return PATH.splitPath(path)[3];\n      },join:function() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function(l, r) {\n        return PATH.normalize(l + '/' + r);\n      }};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },varargs:0,get:function(varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function() {\n        var ret = UTF8ToString(SYSCALLS.get());\n        return ret;\n      },get64:function() {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        return low;\n      },getZero:function() {\n        SYSCALLS.get();\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      var fflush = Module[\"_fflush\"];\n      if (fflush) fflush(0);\n      var buffers = SYSCALLS.buffers;\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\n    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(stream, HEAPU8[ptr+j]);\n        }\n        ret += len;\n      }\n      return ret;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  function _abort() {\n      Module['abort']();\n    }\n\n  var _emscripten_asm_const_int=true;\n\n  function _emscripten_get_heap_size() {\n      return HEAP8.length;\n    }\n\n  function _exit(status) {\n      // void _exit(int status);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\n      exit(status);\n    }\n\n   \n\n  function _llvm_eh_typeid_for(type) {\n      return type;\n    }\n\n  function _llvm_trap() {\n      abort('trap!');\n    }\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n    }\n  \n   \n\n   \n\n   \n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      return value;\n    }\n  \n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('OOM');\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      var PAGE_MULTIPLE = 65536;\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\n      var oldSize = buffer.byteLength;\n      // native wasm support\n      // note that this is *not* threadsafe. multiple threads can call .grow(), and each\n      // presents a delta, so in theory we may over-allocate here (e.g. if two threads\n      // ask to grow from 256MB to 512MB, we get 2 requests to add +256MB, and may end\n      // up growing to 768MB (even though we may have been able to make do with 512MB).\n      // TODO: consider decreasing the step sizes in emscripten_resize_heap\n      try {\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\n        if (result !== (-1 | 0)) {\n          // success in native wasm memory growth, get the buffer from the memory\n          buffer = wasmMemory.buffer;\n          return true;\n        } else {\n          return false;\n        }\n      } catch(e) {\n        return false;\n      }\n    }function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\n  \n  \n      var PAGE_MULTIPLE = 65536;\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\n  \n      if (requestedSize > LIMIT) {\n        return false;\n      }\n  \n      var MIN_TOTAL_MEMORY = 16777216;\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\n  \n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\n        if (newSize <= 536870912) {\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\n        } else {\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n        }\n  \n      }\n  \n  \n  \n  \n      if (!emscripten_realloc_buffer(newSize)) {\n        return false;\n      }\n  \n      updateGlobalBufferViews();\n  \n  \n  \n      return true;\n    } \n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\nvar ASSERTIONS = false;\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\n\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ji(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ji(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    dynCall_v(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viij(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viij(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viji(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viji(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nvar asmGlobalArg = {};\n\nvar asmLibraryArg = {\n  \"abort\": abort,\n  \"setTempRet0\": setTempRet0,\n  \"getTempRet0\": getTempRet0,\n  \"invoke_i\": invoke_i,\n  \"invoke_ii\": invoke_ii,\n  \"invoke_iii\": invoke_iii,\n  \"invoke_iiii\": invoke_iiii,\n  \"invoke_iiiii\": invoke_iiiii,\n  \"invoke_iiiiii\": invoke_iiiiii,\n  \"invoke_ji\": invoke_ji,\n  \"invoke_v\": invoke_v,\n  \"invoke_vi\": invoke_vi,\n  \"invoke_vii\": invoke_vii,\n  \"invoke_viii\": invoke_viii,\n  \"invoke_viiii\": invoke_viiii,\n  \"invoke_viiiii\": invoke_viiiii,\n  \"invoke_viiiiiii\": invoke_viiiiiii,\n  \"invoke_viij\": invoke_viij,\n  \"invoke_viji\": invoke_viji,\n  \"___assert_fail\": ___assert_fail,\n  \"___cxa_allocate_exception\": ___cxa_allocate_exception,\n  \"___cxa_begin_catch\": ___cxa_begin_catch,\n  \"___cxa_end_catch\": ___cxa_end_catch,\n  \"___cxa_find_matching_catch\": ___cxa_find_matching_catch,\n  \"___cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n  \"___cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n  \"___cxa_free_exception\": ___cxa_free_exception,\n  \"___cxa_get_exception_ptr\": ___cxa_get_exception_ptr,\n  \"___cxa_pure_virtual\": ___cxa_pure_virtual,\n  \"___cxa_throw\": ___cxa_throw,\n  \"___cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\n  \"___exception_addRef\": ___exception_addRef,\n  \"___exception_deAdjust\": ___exception_deAdjust,\n  \"___exception_decRef\": ___exception_decRef,\n  \"___gxx_personality_v0\": ___gxx_personality_v0,\n  \"___lock\": ___lock,\n  \"___resumeException\": ___resumeException,\n  \"___setErrNo\": ___setErrNo,\n  \"___syscall140\": ___syscall140,\n  \"___syscall146\": ___syscall146,\n  \"___syscall54\": ___syscall54,\n  \"___syscall6\": ___syscall6,\n  \"___unlock\": ___unlock,\n  \"__api_close_keyboard\": __api_close_keyboard,\n  \"__api_open_keyboard\": __api_open_keyboard,\n  \"_abort\": _abort,\n  \"_api_create_sound\": _api_create_sound,\n  \"_api_create_sound_float\": _api_create_sound_float,\n  \"_api_delete_sound\": _api_delete_sound,\n  \"_api_draw_begin\": _api_draw_begin,\n  \"_api_draw_belt\": _api_draw_belt,\n  \"_api_draw_blit\": _api_draw_blit,\n  \"_api_draw_clip_text\": _api_draw_clip_text,\n  \"_api_draw_end\": _api_draw_end,\n  \"_api_draw_text\": _api_draw_text,\n  \"_api_duplicate_sound\": _api_duplicate_sound,\n  \"_api_exit_game\": _api_exit_game,\n  \"_api_play_sound\": _api_play_sound,\n  \"_api_set_cursor\": _api_set_cursor,\n  \"_api_set_volume\": _api_set_volume,\n  \"_api_stop_sound\": _api_stop_sound,\n  \"_api_websocket_closed\": _api_websocket_closed,\n  \"_api_websocket_send\": _api_websocket_send,\n  \"_emscripten_asm_const_ii\": _emscripten_asm_const_ii,\n  \"_emscripten_get_heap_size\": _emscripten_get_heap_size,\n  \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"_emscripten_resize_heap\": _emscripten_resize_heap,\n  \"_exit\": _exit,\n  \"_exit_error\": _exit_error,\n  \"_get_file_contents\": _get_file_contents,\n  \"_get_file_size\": _get_file_size,\n  \"_llvm_eh_typeid_for\": _llvm_eh_typeid_for,\n  \"_llvm_trap\": _llvm_trap,\n  \"_put_file_contents\": _put_file_contents,\n  \"_remove_file\": _remove_file,\n  \"_show_alert\": _show_alert,\n  \"_time\": _time,\n  \"_trace_pop\": _trace_pop,\n  \"_trace_push\": _trace_push,\n  \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\n  \"demangle\": demangle,\n  \"demangleAll\": demangleAll,\n  \"emscripten_realloc_buffer\": emscripten_realloc_buffer,\n  \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\n  \"jsStackTrace\": jsStackTrace,\n  \"stackTrace\": stackTrace,\n  \"tempDoublePtr\": tempDoublePtr,\n  \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR\n};\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\nModule[\"asm\"] = asm;\nvar _DApi_AllocPacket = Module[\"_DApi_AllocPacket\"] = function() {\n  return Module[\"asm\"][\"_DApi_AllocPacket\"].apply(null, arguments)\n};\n\nvar _DApi_Char = Module[\"_DApi_Char\"] = function() {\n  return Module[\"asm\"][\"_DApi_Char\"].apply(null, arguments)\n};\n\nvar _DApi_Init = Module[\"_DApi_Init\"] = function() {\n  return Module[\"asm\"][\"_DApi_Init\"].apply(null, arguments)\n};\n\nvar _DApi_Key = Module[\"_DApi_Key\"] = function() {\n  return Module[\"asm\"][\"_DApi_Key\"].apply(null, arguments)\n};\n\nvar _DApi_Mouse = Module[\"_DApi_Mouse\"] = function() {\n  return Module[\"asm\"][\"_DApi_Mouse\"].apply(null, arguments)\n};\n\nvar _DApi_Render = Module[\"_DApi_Render\"] = function() {\n  return Module[\"asm\"][\"_DApi_Render\"].apply(null, arguments)\n};\n\nvar _DApi_SyncText = Module[\"_DApi_SyncText\"] = function() {\n  return Module[\"asm\"][\"_DApi_SyncText\"].apply(null, arguments)\n};\n\nvar _DApi_SyncTextPtr = Module[\"_DApi_SyncTextPtr\"] = function() {\n  return Module[\"asm\"][\"_DApi_SyncTextPtr\"].apply(null, arguments)\n};\n\nvar _SNet_InitWebsocket = Module[\"_SNet_InitWebsocket\"] = function() {\n  return Module[\"asm\"][\"_SNet_InitWebsocket\"].apply(null, arguments)\n};\n\nvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function() {\n  return Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\n};\n\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\n  return Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\n};\n\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\n  return Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\n};\n\nvar ___em_js___api_close_keyboard = Module[\"___em_js___api_close_keyboard\"] = function() {\n  return Module[\"asm\"][\"___em_js___api_close_keyboard\"].apply(null, arguments)\n};\n\nvar ___em_js___api_open_keyboard = Module[\"___em_js___api_open_keyboard\"] = function() {\n  return Module[\"asm\"][\"___em_js___api_open_keyboard\"].apply(null, arguments)\n};\n\nvar ___em_js__api_create_sound = Module[\"___em_js__api_create_sound\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_create_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_create_sound_float = Module[\"___em_js__api_create_sound_float\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_create_sound_float\"].apply(null, arguments)\n};\n\nvar ___em_js__api_delete_sound = Module[\"___em_js__api_delete_sound\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_delete_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_begin = Module[\"___em_js__api_draw_begin\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_begin\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_belt = Module[\"___em_js__api_draw_belt\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_belt\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_blit = Module[\"___em_js__api_draw_blit\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_blit\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_clip_text = Module[\"___em_js__api_draw_clip_text\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_clip_text\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_end = Module[\"___em_js__api_draw_end\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_end\"].apply(null, arguments)\n};\n\nvar ___em_js__api_draw_text = Module[\"___em_js__api_draw_text\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_draw_text\"].apply(null, arguments)\n};\n\nvar ___em_js__api_duplicate_sound = Module[\"___em_js__api_duplicate_sound\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_duplicate_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_exit_game = Module[\"___em_js__api_exit_game\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_exit_game\"].apply(null, arguments)\n};\n\nvar ___em_js__api_play_sound = Module[\"___em_js__api_play_sound\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_play_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_set_cursor = Module[\"___em_js__api_set_cursor\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_set_cursor\"].apply(null, arguments)\n};\n\nvar ___em_js__api_set_volume = Module[\"___em_js__api_set_volume\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_set_volume\"].apply(null, arguments)\n};\n\nvar ___em_js__api_stop_sound = Module[\"___em_js__api_stop_sound\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_stop_sound\"].apply(null, arguments)\n};\n\nvar ___em_js__api_websocket_closed = Module[\"___em_js__api_websocket_closed\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_websocket_closed\"].apply(null, arguments)\n};\n\nvar ___em_js__api_websocket_send = Module[\"___em_js__api_websocket_send\"] = function() {\n  return Module[\"asm\"][\"___em_js__api_websocket_send\"].apply(null, arguments)\n};\n\nvar ___em_js__exit_error = Module[\"___em_js__exit_error\"] = function() {\n  return Module[\"asm\"][\"___em_js__exit_error\"].apply(null, arguments)\n};\n\nvar ___em_js__get_file_contents = Module[\"___em_js__get_file_contents\"] = function() {\n  return Module[\"asm\"][\"___em_js__get_file_contents\"].apply(null, arguments)\n};\n\nvar ___em_js__get_file_size = Module[\"___em_js__get_file_size\"] = function() {\n  return Module[\"asm\"][\"___em_js__get_file_size\"].apply(null, arguments)\n};\n\nvar ___em_js__put_file_contents = Module[\"___em_js__put_file_contents\"] = function() {\n  return Module[\"asm\"][\"___em_js__put_file_contents\"].apply(null, arguments)\n};\n\nvar ___em_js__remove_file = Module[\"___em_js__remove_file\"] = function() {\n  return Module[\"asm\"][\"___em_js__remove_file\"].apply(null, arguments)\n};\n\nvar ___em_js__show_alert = Module[\"___em_js__show_alert\"] = function() {\n  return Module[\"asm\"][\"___em_js__show_alert\"].apply(null, arguments)\n};\n\nvar ___em_js__trace_pop = Module[\"___em_js__trace_pop\"] = function() {\n  return Module[\"asm\"][\"___em_js__trace_pop\"].apply(null, arguments)\n};\n\nvar ___em_js__trace_push = Module[\"___em_js__trace_push\"] = function() {\n  return Module[\"asm\"][\"___em_js__trace_push\"].apply(null, arguments)\n};\n\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\n};\n\nvar _free = Module[\"_free\"] = function() {\n  return Module[\"asm\"][\"_free\"].apply(null, arguments)\n};\n\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() {\n  return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments)\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments)\n};\n\nvar _memcpy = Module[\"_memcpy\"] = function() {\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\n};\n\nvar _memmove = Module[\"_memmove\"] = function() {\n  return Module[\"asm\"][\"_memmove\"].apply(null, arguments)\n};\n\nvar _memset = Module[\"_memset\"] = function() {\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments)\n};\n\nvar _sbrk = Module[\"_sbrk\"] = function() {\n  return Module[\"asm\"][\"_sbrk\"].apply(null, arguments)\n};\n\nvar _setThrew = Module[\"_setThrew\"] = function() {\n  return Module[\"asm\"][\"_setThrew\"].apply(null, arguments)\n};\n\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\n};\n\nvar globalCtors = Module[\"globalCtors\"] = function() {\n  return Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\n};\n\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\n};\n\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\n};\n\nvar stackSave = Module[\"stackSave\"] = function() {\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments)\n};\n\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\n  return Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\n};\n\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\n};\n\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\n};\n\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n  return Module[\"asm\"][\"dynCall_ji\"].apply(null, arguments)\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\n};\n\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\n  return Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\n};\n\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\n  return Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\n};\n\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\n  return Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\n};\n\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\n};\n\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viij = Module[\"dynCall_viij\"] = function() {\n  return Module[\"asm\"][\"dynCall_viij\"].apply(null, arguments)\n};\n\nvar dynCall_viji = Module[\"dynCall_viji\"] = function() {\n  return Module[\"asm\"][\"dynCall_viji\"].apply(null, arguments)\n};\n;\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar calledRun;\n\n// Modularize mode returns a function, which can be called to\n// create instances. The instances provide a then() method,\n// must like a Promise, that receives a callback. The callback\n// is called when the module is ready to run, with the module\n// as a parameter. (Like a Promise, it also returns the module\n// so you can use the output of .then(..)).\nModule['then'] = function(func) {\n  // We may already be ready to run code at this time. if\n  // so, just queue a call to the callback.\n  if (calledRun) {\n    func(Module);\n  } else {\n    // we are not ready to call then() yet. we must call it\n    // at the same time we would call onRuntimeInitialized.\n    var old = Module['onRuntimeInitialized'];\n    Module['onRuntimeInitialized'] = function() {\n      if (old) old();\n      func(Module);\n    };\n  }\n  return Module;\n};\n\n/**\n * @constructor\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n}\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\nModule['run'] = run;\n\n\nfunction exit(status, implicit) {\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && Module['noExitRuntime'] && status === 0) {\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  quit_(status, new ExitStatus(status));\n}\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what += '';\n  out(what);\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';\n}\nModule['abort'] = abort;\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n\n  Module[\"noExitRuntime\"] = true;\n\nrun();\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\nModule['ready'] = new Promise(function (resolve, reject) {\n  delete Module['then']\n  Module['onAbort'] = function (what) {\n    reject(what)\n  }\n  addOnPostRun(function () {\n    resolve(Module)\n  })\n});\n\n\n\n  return DiabloSpawn\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = DiabloSpawn;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return DiabloSpawn; });\n    else if (typeof exports === 'object')\n      exports[\"DiabloSpawn\"] = DiabloSpawn;\n    \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = require('./lib/axios');","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","'use strict';\n\nvar utils = require('./utils');\n\nvar bind = require('./helpers/bind');\n\nvar Axios = require('./core/Axios');\n\nvar mergeConfig = require('./core/mergeConfig');\n\nvar defaults = require('./defaults');\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context);\n  return instance;\n} // Create the default instance to be exported\n\n\nvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Factory for creating new instances\n\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n}; // Expose Cancel & CancelToken\n\n\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel'); // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = require('./helpers/spread');\nmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = axios;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\nmodule.exports = function isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};","'use strict';\n\nvar utils = require('./../utils');\n\nvar buildURL = require('../helpers/buildURL');\n\nvar InterceptorManager = require('./InterceptorManager');\n\nvar dispatchRequest = require('./dispatchRequest');\n\nvar mergeConfig = require('./mergeConfig');\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\n\n\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\n\n\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get'; // Hook up interceptors middleware\n\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n}; // Provide aliases for supported request methods\n\n\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\nmodule.exports = Axios;","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\n\n\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\n\n\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\n\n\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;","'use strict';\n\nvar utils = require('./../utils');\n\nvar transformData = require('./transformData');\n\nvar isCancel = require('../cancel/isCancel');\n\nvar defaults = require('../defaults');\n\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\n\nvar combineURLs = require('./../helpers/combineURLs');\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\n\n\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config); // Support baseURL config\n\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  } // Ensure headers exist\n\n\n  config.headers = config.headers || {}; // Transform request data\n\n  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n  var adapter = config.adapter || defaults.adapter;\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config); // Transform response data\n\n    response.data = transformData(response.data, response.headers, config.transformResponse);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config); // Transform response data\n\n      if (reason && reason.response) {\n        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};","'use strict';\n\nvar utils = require('./../utils');\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\n\n\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n  return data;\n};","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};","'use strict';\n\nvar createError = require('./createError');\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\n\n\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n  }\n};","'use strict';\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\n\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function () {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n\n  return error;\n};","'use strict';\n\nvar utils = require('./../utils'); // Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\n\n\nvar ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\n\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) {\n    return parsed;\n  }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n  return parsed;\n};","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  var msie = /(msie|trident)/i.test(navigator.userAgent);\n  var urlParsingNode = document.createElement('a');\n  var originURL;\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n\n  function resolveURL(url) {\n    var href = url;\n\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n\n  originURL = resolveURL(window.location.href);\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n\n  return function isURLSameOrigin(requestURL) {\n    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() : // Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();","'use strict';\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\n\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};","'use strict';\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\n\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\n\n\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\n\n\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;","'use strict';\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","async function do_websocket_open(url, handler) {\n  const socket = new WebSocket(url);\n  socket.binaryType = \"arraybuffer\";\n  let versionCbk = null;\n  socket.addEventListener(\"message\", ({data}) => {\n    if (versionCbk) {\n      versionCbk(data);\n    }\n    handler(data);\n  });\n  await new Promise((resolve, reject) => {\n    const onError = err => reject(1);\n    socket.addEventListener(\"error\", onError);\n    socket.addEventListener(\"open\", () => {\n      socket.removeEventListener(\"error\", onError);\n      resolve();\n    });\n  });\n  await new Promise((resolve, reject) => {\n    const to = setTimeout(() => {\n      versionCbk = null;\n      reject(1);\n    }, 5000);\n    versionCbk = data => {\n      clearTimeout(to);\n      const u8 = new Uint8Array(data);\n      if (u8[0] === 0x32) {\n        versionCbk = null;\n        const version = u8[1] | (u8[2] << 8) | (u8[3] << 16) | (u8[4] << 24);\n        if (version === 1) {\n          resolve();\n        } else {\n          reject(2);\n        }\n      }\n    };\n  });\n\n  const vers = process.env.VERSION.match(/(\\d+)\\.(\\d+)\\.(\\d+)/);\n  const clientInfo = new Uint8Array(5);\n  clientInfo[0] = 0x31;\n  clientInfo[1] = parseInt(vers[3]);\n  clientInfo[2] = parseInt(vers[2]);\n  clientInfo[3] = parseInt(vers[1]);\n  clientInfo[4] = 0;\n  socket.send(clientInfo);\n  return socket;\n}\n\nexport default function websocket_open(url, handler, finisher) {\n  let ws = null, batch = [], intr = null;\n  const proxy = {\n    get readyState() {\n      return ws ? ws.readyState : 0;\n    },\n    send(msg) {\n      batch.push(msg.slice());\n    },\n    close() {\n      if (intr) {\n        clearInterval(intr);\n        intr = null;\n      }\n      if (ws) {\n        ws.close();\n      } else {\n        batch = null;\n      }\n    },\n  };\n  do_websocket_open(url, handler).then(sock => {\n    ws = sock;\n    if (batch) {\n      intr = setInterval(() => {\n        if (!batch.length) {\n          return;\n        }\n        const size = batch.reduce((sum, msg) => sum + msg.byteLength, 3);\n        const buffer = new Uint8Array(size);\n        buffer[0] = 0;\n        buffer[1] = (batch.length & 0xFF);\n        buffer[2] = batch.length >> 8;\n        let pos = 3;\n        for (let msg of batch) {\n          buffer.set(msg, pos);\n          pos += msg.byteLength;\n        }\n        ws.send(buffer);\n        batch.length = 0;\n      }, 100);\n    } else {\n      ws.close();\n    }\n    finisher(0);\n  }, err => {\n    finisher(err);\n  });\n  return proxy;\n}\n","import DiabloBinary from './Diablo.wasm';\nimport DiabloModule from './Diablo.jscc';\nimport SpawnBinary from './DiabloSpawn.wasm';\nimport SpawnModule from './DiabloSpawn.jscc';\nimport axios from 'axios';\n\nimport websocket_open from './websocket';\n\nconst DiabloSize = 1466809;\nconst SpawnSize = 1337416;\n\n/* eslint-disable-next-line no-restricted-globals */\nconst worker = self;\n\nlet canvas = null, context = null;\nlet imageData = null;\nlet files = null;\nlet renderBatch = null;\nlet drawBelt = null;\nlet is_spawn = false;\nlet websocket = null;\n\nfunction onError(err, action=\"error\") {\n  if (err instanceof Error) {\n    worker.postMessage({action, error: err.toString(), stack: err.stack});\n  } else {\n    worker.postMessage({action, error: err.toString()});\n  }\n}\n\nconst ChunkSize = 1 << 20;\nclass RemoteFile {\n  constructor(url) {\n    const request = new XMLHttpRequest();\n    request.open('HEAD', url, false);\n    request.send();\n    if (request.status < 200 || request.status >= 300) {\n      throw Error('Failed to load remote file');\n    }\n    this.byteLength = parseInt(request.getResponseHeader('Content-Length'));\n\n    this.url = url;\n\n    this.buffer = new Uint8Array(this.byteLength);\n    this.chunks = new Uint8Array(((this.byteLength + ChunkSize - 1) >> 20) | 0);\n  }\n\n  subarray(start, end) {\n    let chunk0 = (start / ChunkSize) | 0;\n    let chunk1 = ((end + ChunkSize - 1) / ChunkSize) | 0;\n    let missing0 = chunk1, missing1 = chunk0;\n    for (let i = chunk0; i < chunk1; ++i) {\n      if (!this.chunks[i]) {\n        missing0 = Math.min(missing0, i);\n        missing1 = Math.max(missing1, i);\n      }\n    }\n    if (missing0 <= missing1) {\n      const request = new XMLHttpRequest();\n      request.open('GET', this.url, false);\n      request.setRequestHeader('Range', `bytes=${missing0 * ChunkSize}-${Math.min(missing1 * ChunkSize + ChunkSize - 1, this.byteLength - 1)}`);\n      request.responseType = 'arraybuffer';\n      request.send();\n      if (request.status < 200 || request.status >= 300) {\n        throw Error('Failed to load remote file');\n      } else {\n        const header = request.getResponseHeader('Content-Range');\n        let m, start = 0;\n        if (header && (m = header.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/))) {\n          start = parseInt(m[1]);\n        }\n        this.buffer.set(new Uint8Array(request.response), start);\n        chunk0 = ((start + ChunkSize - 1) / ChunkSize) | 0;\n        chunk1 = ((start + request.response.byteLength + ChunkSize - 1) / ChunkSize) | 0;\n        for (let i = chunk0; i < chunk1; ++i) {\n          this.chunks[i] = 1;\n        }\n      }\n    }\n    return this.buffer.subarray(start, end);\n  }\n}\n\nconst DApi = {\n  exit_error(error) {\n    throw Error(error);\n  },\n\n  exit_game() {\n    worker.postMessage({action: \"exit\"});\n  },\n  current_save_id(id) {\n    worker.postMessage({action: \"current_save\", name: id >= 0 ? (is_spawn ? `spawn${id}.sv` : `single_${id}.sv`) : null});\n  },\n\n  get_file_size(path) {\n    const data = files.get(path.toLowerCase());\n    return data ? data.byteLength : 0;\n  },\n  get_file_contents(path, array, offset) {\n    const data = files.get(path.toLowerCase());\n    if (data) {\n      array.set(data.subarray(offset, offset + array.byteLength));\n    }\n  },\n  put_file_contents(path, array) {\n    path = path.toLowerCase();\n    // if (!path.match(/^(spawn\\d+\\.sv|single_\\d+\\.sv|config\\.ini)$/i)) {\n    //   alert(`Bad file name: ${path}`);\n    // }\n    files.set(path, array);\n    worker.postMessage({action: \"fs\", func: \"update\", params: [path, array]});\n  },\n  remove_file(path) {\n    path = path.toLowerCase();\n    files.delete(path);\n    worker.postMessage({action: \"fs\", func: \"delete\", params: [path]});\n  },\n\n  set_cursor(x, y) {\n    worker.postMessage({action: \"cursor\", x, y});\n  },\n  open_keyboard(...args) {\n    worker.postMessage({action: \"keyboard\", rect: [...args]});\n  },\n  close_keyboard() {\n    worker.postMessage({action: \"keyboard\", rect: null});\n  },\n\n  use_websocket(flag) {\n    if (flag) {\n      if (!websocket || websocket.readyState !== 1) {\n        const sock = websocket = websocket_open('wss://diablo.rivsoft.net/websocket', data => {\n          if (websocket === sock) {\n            try_api(() => {\n              const ptr = wasm._DApi_AllocPacket(data.byteLength);\n              wasm.HEAPU8.set(new Uint8Array(data), ptr);\n            });\n          }\n        }, code => {\n          if (typeof code !== \"number\") {\n            throw code;\n          } else {\n            call_api(\"SNet_WebsocketStatus\", code);\n          }\n        });\n      } else {\n        call_api(\"SNet_WebsocketStatus\", 0);\n      }\n    } else {\n      if (websocket) {\n        websocket.close();\n      }\n      websocket = null;\n    }\n  },\n  websocket_closed() {\n    return websocket ? websocket.readyState !== 1 : false;\n  },\n};\n/*\nlet frameTime = 0, lastTime = 0;\nfunction getFPS() {\n  const time = performance.now();\n  if (!lastTime) {\n    lastTime = time;\n  }\n  frameTime = 0.9 * frameTime + 0.1 * (time - lastTime);\n  lastTime = time;\n  return frameTime ? 1000.0 / frameTime : 0.0;\n}\n*/\nconst DApi_renderLegacy = {\n  draw_begin() {\n    renderBatch = {\n      images: [],\n      text: [],\n      clip: null,\n      belt: drawBelt,\n    };\n    drawBelt = null;\n  },\n  draw_blit(x, y, w, h, data) {\n    renderBatch.images.push({x, y, w, h, data: data.slice()});\n  },\n  draw_clip_text(x0, y0, x1, y1) {\n    renderBatch.clip = {x0, y0, x1, y1};\n  },\n  draw_text(x, y, text, color) {\n    renderBatch.text.push({x, y, text, color});\n  },\n  draw_end() {\n    //DApi.draw_text(10, 10, `FPS: ${getFPS().toFixed(1)} (Transfer)`, 0xFFCC00);\n    const transfer = renderBatch.images.map(({data}) => data.buffer);\n    if (renderBatch.belt) {\n      transfer.push(renderBatch.belt.buffer);\n    }\n    worker.postMessage({action: \"render\", batch: renderBatch}, transfer);\n    renderBatch = null;\n  },\n  draw_belt(items) {\n    drawBelt = items.slice();\n  },\n};\n\nconst DApi_renderOffscreen = {\n  draw_begin() {\n    context.save();\n    context.font = 'bold 13px Times New Roman';\n  },\n  draw_blit(x, y, w, h, data) {\n    imageData.data.set(data);\n    context.putImageData(imageData, x, y);\n  },\n  draw_clip_text(x0, y0, x1, y1) {\n    context.beginPath();\n    context.rect(x0, y0, x1 - x0, y1 - y0);\n    context.clip();\n  },\n  draw_text(x, y, text, color) {\n    const r = ((color >> 16) & 0xFF);\n    const g = ((color >> 8) & 0xFF);\n    const b = (color & 0xFF);\n    context.fillStyle = `rgb(${r}, ${g}, ${b})`;\n    context.fillText(text, x, y + 22);\n  },\n  draw_end() {\n    //DApi.draw_text(10, 10, `FPS: ${getFPS().toFixed(1)} (Offscreen)`, 0xFFCC00);\n    context.restore();\n    const bitmap = canvas.transferToImageBitmap();\n    const transfer = [bitmap];\n    if (drawBelt) {\n      transfer.push(drawBelt.buffer);\n    }\n    worker.postMessage({action: \"render\", batch: {bitmap, belt: drawBelt}}, transfer);\n    drawBelt = null;\n  },\n  draw_belt(items) {\n    drawBelt = items.slice();\n  },\n};\n\nlet audioBatch = null, audioTransfer = null;\nlet maxSoundId = 0, maxBatchId = 0;\n[\"create_sound_raw\", \"create_sound\", \"duplicate_sound\"].forEach(func => {\n  DApi[func] = function(...params) {\n    if (audioBatch) {\n      maxBatchId = params[0] + 1;\n      audioBatch.push({func, params});\n      if (func !== \"duplicate_sound\") {\n        audioTransfer.push(params[1].buffer);\n      }\n    } else {\n      maxSoundId = params[0] + 1;\n      const transfer = [];\n      if (func !== \"duplicate_sound\") {\n        transfer.push(params[1].buffer);\n      }\n      worker.postMessage({action: \"audio\", func, params}, transfer);\n    }\n  };\n});\n[\"play_sound\", \"set_volume\", \"stop_sound\", \"delete_sound\"].forEach(func => {\n  DApi[func] = function(...params) {\n    if (audioBatch && params[0] >= maxSoundId) {\n      audioBatch.push({func, params});\n    } else {\n      worker.postMessage({action: \"audio\", func, params});\n    }\n  }\n});\n\nlet packetBatch = null;\nDApi.websocket_send = function(data) {\n  if (websocket) {\n    websocket.send(data);\n  } else if (packetBatch) {\n    packetBatch.push(data.slice().buffer);\n  } else {\n    worker.postMessage({action: \"packet\", buffer: data});\n  }\n};\n\nworker.DApi = DApi;\n\nlet wasm = null;\n\nfunction try_api(func) {\n  try {\n    func();\n  } catch (e) {\n    onError(e);\n  }\n}\n\nfunction call_api(func, ...params) {\n  try_api(() => {\n    const nested = (audioBatch != null);\n    if (!nested) {\n      audioBatch = [];\n      audioTransfer = [];\n      packetBatch = [];\n    }\n    if (func !== \"text\") {\n      wasm[\"_\" + func](...params);\n    } else {\n      const ptr = wasm._DApi_SyncTextPtr();\n      const text = params[0];\n      const length = Math.min(text.length, 255);\n      const heap = wasm.HEAPU8;\n      for (let i = 0; i < length; ++i) {\n        heap[ptr + i] = text.charCodeAt(i);\n      }\n      heap[ptr + length] = 0;\n      wasm._DApi_SyncText(params[1]);\n    }\n    if (!nested) {\n      if (audioBatch.length) {\n        maxSoundId = maxBatchId;\n        worker.postMessage({action: \"audioBatch\", batch: audioBatch}, audioTransfer);\n      }\n      if (packetBatch.length) {\n        worker.postMessage({action: \"packetBatch\", batch: packetBatch}, packetBatch);\n      }\n      audioBatch = null;\n      audioTransfer = null;\n      packetBatch = null;\n    }\n  });\n}\n\nfunction progress(text, loaded, total) {\n  worker.postMessage({action: \"progress\", text, loaded, total});\n}\n\nconst readFile = (file, progress) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => {\n    if (progress) {\n      progress({loaded: file.size});\n    }\n    resolve(reader.result);\n  };\n  reader.onerror = () => reject(reader.error);\n  reader.onabort = () => reject();\n  if (progress) {\n    reader.addEventListener(\"progress\", progress);\n  }\n  reader.readAsArrayBuffer(file);\n});\n\nasync function initWasm(spawn, progress) {\n  const binary = await axios.request({\n    url: spawn ? SpawnBinary : DiabloBinary,\n    responseType: 'arraybuffer',\n    onDownloadProgress: progress,\n  });\n  const result = await (spawn ? SpawnModule : DiabloModule)({wasmBinary: binary.data}).ready;\n  progress({loaded: 2000000});\n  return result;\n}\n\nasync function init_game(mpq, spawn, offscreen) {\n  is_spawn = spawn;\n  if (offscreen) {\n    canvas = new OffscreenCanvas(640, 480);\n    context = canvas.getContext(\"2d\");\n    imageData = context.createImageData(640, 480);\n    Object.assign(DApi, DApi_renderOffscreen);\n  } else {\n    Object.assign(DApi, DApi_renderLegacy);\n  }\n\n  if (!mpq) {\n    const name = (spawn ? 'spawn.mpq' : 'diabdat.mpq');\n    if (!files.has(name)) {\n      // This should never happen, but we do support remote loading\n      files.set(name, new RemoteFile(`${process.env.PUBLIC_URL}/${name}`));\n    }\n  }\n\n  progress(\"Loading...\");\n  let mpqLoaded = 0, mpqTotal = (mpq ? mpq.size : 0), wasmLoaded = 0, wasmTotal = (spawn ? SpawnSize : DiabloSize);\n  const wasmWeight = 5;\n  function updateProgress() {\n    progress(\"Loading...\", mpqLoaded + wasmLoaded * wasmWeight, mpqTotal + wasmTotal * wasmWeight);\n  }\n  const loadWasm = initWasm(spawn, e => {\n    wasmLoaded = Math.min(e.loaded, wasmTotal);\n    updateProgress();\n  });\n  let loadMpq = mpq ? readFile(mpq, e => {\n    mpqLoaded = e.loaded;\n    updateProgress();\n  }) : Promise.resolve(null);\n  [wasm, mpq] = await Promise.all([loadWasm, loadMpq]);\n\n  if (mpq) {\n    files.set(spawn ? 'spawn.mpq' : 'diabdat.mpq', new Uint8Array(mpq));\n  }\n\n  progress(\"Initializing...\");\n\n  const vers = process.env.VERSION.match(/(\\d+)\\.(\\d+)\\.(\\d+)/);\n\n  wasm._SNet_InitWebsocket();\n  wasm._DApi_Init(Math.floor(performance.now()), offscreen ? 1 : 0, parseInt(vers[1]), parseInt(vers[2]), parseInt(vers[3]));\n\n  setInterval(() => {\n    call_api(\"DApi_Render\", Math.floor(performance.now()));  \n  }, 50);\n}\n\nworker.addEventListener(\"message\", ({data}) => {\n  switch (data.action) {\n  case \"init\":\n    files = data.files;\n    init_game(data.mpq, data.spawn, data.offscreen).then(\n      () => worker.postMessage({action: \"loaded\"}),\n      e => onError(e, \"failed\"));\n    break;\n  case \"event\":\n    call_api(data.func, ...data.params);\n    break;\n  case \"packet\":\n    try_api(() => {\n      const ptr = wasm._DApi_AllocPacket(data.buffer.byteLength);\n      wasm.HEAPU8.set(new Uint8Array(data.buffer), ptr);\n    });\n    break;\n  case \"packetBatch\":\n    try_api(() => {\n      for (let packet of data.batch) {\n        const ptr = wasm._DApi_AllocPacket(packet.byteLength);\n        wasm.HEAPU8.set(new Uint8Array(packet), ptr);\n      }\n    });\n    break;\n  default:\n  }\n});\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"sourceRoot":""}